{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./.fable/fable-library.2.4.6/Util.js","webpack:///./.fable/fable-library.2.4.6/Types.js","webpack:///./.fable/fable-library.2.4.6/Reflection.js","webpack:///./.fable/fable-library.2.4.6/Option.js","webpack:///./.fable/fable-library.2.4.6/lib/big.js","webpack:///./.fable/fable-library.2.4.6/Decimal.js","webpack:///./.fable/fable-library.2.4.6/Int32.js","webpack:///./.fable/fable-library.2.4.6/lib/long.js","webpack:///./.fable/fable-library.2.4.6/Long.js","webpack:///./.fable/fable-library.2.4.6/Seq.js","webpack:///./.fable/fable-library.2.4.6/RegExp.js","webpack:///./.fable/fable-library.2.4.6/String.js","webpack:///./.fable/fable-library.2.4.6/MutableMap.js","webpack:///./.fable/fable-library.2.4.6/Map.js","webpack:///./.fable/fable-library.2.4.6/MutableSet.js","webpack:///./.fable/fable-library.2.4.6/Set.js","webpack:///./.fable/fable-library.2.4.6/Array.js","webpack:///./.fable/fable-library.2.4.6/List.js","webpack:///./.fable/fable-library.2.4.6/AsyncBuilder.js","webpack:///./.fable/fable-library.2.4.6/Async.js","webpack:///.fable/Fable.Elmish.3.0.6/prelude.fs","webpack:///.fable/Fable.Elmish.3.0.6/cmd.fs","webpack:///src/Feliz.Plotly/Bindings.fs","webpack:///.fable/Fable.React.5.3.4/Fable.React.Helpers.fs","webpack:///.fable/Fable.React.5.3.4/Fable.React.FunctionComponent.fs","webpack:///./.fable/Feliz.0.58.0/ReactInterop.js","webpack:///.fable/Feliz.0.58.0/React.fs","webpack:///.fable/Fable.SimpleHttp.2.6.0/Http.fs","webpack:///.fable/Feliz.0.58.0/Properties.fs","webpack:///.fable/Feliz.Router.1.4.0/Router.fs","webpack:///.fable/Fable.Elmish.3.0.6/ring.fs","webpack:///.fable/Fable.Elmish.3.0.6/program.fs","webpack:///.fable/Fable.Elmish.React.3.0.1/common.fs","webpack:///.fable/Fable.Elmish.React.3.0.1/react.fs","webpack:///docs/App.fs","webpack:///docs/Plotly/Examples/Scatter/Basic.fs","webpack:///docs/Plotly/Examples/Scatter/DataLabelsHover.fs"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_typeof","obj","iterator","constructor","_defineProperties","target","props","descriptor","configurable","writable","_createClass","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","isDisposable","x","Dispose","tryGetValue","map","defaultValue","has","dateOffset","date","date1","offset","kind","getTimezoneOffset","ObjectRef","this","idMap","set","count","stringHash","h","len","charCodeAt","numberHash","combineHashCodes","hashes","reduce","h1","h2","structuralHash","GetHashCode","isArray","ar","Array","String","ArrayBuffer","isView","equalArraysWith","y","eq","equalArrays","equals","Equals","Date","compareDates","xtime","ytime","getTime","comparePrimitives","compareArraysWith","comp","compareArrays","compare","CompareTo","max","comparer","WeakMap","CaseRules","None","LowerFirst","changeCase","str","caseRule","charAt","toLowerCase","createObj","fields","fail","kvPair","Error","definedCaseRule","arguments","undefined","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","next","done","_caseRule","toJSON","err","CURRIED_KEY","uncurry","arity","f","uncurriedFn","a1","a2","a3","a4","a5","a6","a7","a8","curry","partialApply","args","concat","getItemFromDict","sameType","getPrototypeOf","declare","cons","superClass","subClass","inherits","SystemObject","compareList","self","other","tail","res","head","List","Union","tag","_len","_key","recordToJson","record","getFieldNames","keys","recordEquals","thisNames","recordCompare","Record","anonRecord","assign","toString","_this","k","join","id","identityHash","from","cur","tmp","_this2","_this3","FSharpRef","contents","Exception","msg","stack","message","getFSharpExceptionFieldNames","filter","FSharpException","_this4","fieldNames","_this5","arg1","arg2","arg3","_slicedToArray","arr","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","_iterableToArrayLimit","_nonIterableRest","CaseInfo","declaringType","TypeInfo","fullname","generics","cases","enumCases","fullName","gen","getGenerics","t1","t2","getRecordElements","_ref","_ref2","_ref3","k1","v1","_ref4","k2","v2","type","union","list","generic","string","endsWith","Some","some","acceptNull","defaultArg","arg","field","P","e","cmp","DP","RM","MAX_DP","NE","PE","NAME","INVALID","INVALID_DP","INVALID_RM","UNDEFINED","NUMERIC","parse","nl","test","indexOf","replace","search","substring","Big","dp","rm","more","xc","unshift","pop","stringify","z","abs","isneg","yc","Math","div","a","b","bl","bt","ri","bz","ai","al","rl","q","qc","qi","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","reverse","mod","ygtx","times","add","pow","one","round","sqrt","half","toExponential","mul","toFixed","toPrecision","sd","valueOf","_Big_","findIndex","normalize","version","NumberStyles","wasm","WebAssembly","Instance","Module","Uint8Array","Long","low","high","unsigned","isLong","radix","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","isNaN","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","RangeError","radixToPower","size","min","parseInt","fromValue","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","toInt","$this","isZero","radixLong","rem1","rem","remDiv","digits","isOdd","lessThan","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","get_high","b00","divisor","approx","div_u","div_s","toUnsigned","shiftRightUnsigned","shiftLeft","shiftRight","floor","log2","ceil","log","LN2","delta","approxRes","approxRem","numBits","bytes","le","fromBytesLE","fromBytesBE","hi","lo","toBytesLE","toBytesBE","_defineProperty","Enumerator","iter","current","getEnumerator","toIterator","en","MoveNext","Current","append","xs","ys","delay","firstDone","iters","unfold","output","innerIter","hasFinished","_cur","collect","empty","fold","acc","iterate","_","iterateIndexed","singleton","skip","sumBy","adder","Add","GetZero","take","truncate","fst","fsFormatRegExp","toHex","Number","printf","input","cont","createPrinter","strCopy","_len2","_key2","_args","formatOnce","toText","str2","rep","prefix","flags","pad","precision","format","toUpperCase","plusPrefix","ch","padLeft","isNullOrEmpty","delimiter","isRight","splitters","removeEmpty","split","splits","reg","RegExp","exec","index","lastIndex","MutableMap$00602","pairs","this$","Map","pair","MutableMap$00602$$Add$$5BDDA1","MutableMap$00602$$TryFindIndex$$2B595","this$$$1","matchValue","pair$$1","MutableMap$00602$$TryFind$$2B595","this$$$2","k$$1","matchValue$$1","MutableMap$00602$$Clear","this$$$4","clear","MutableMap$00602$$get_Count","this$$$5","pairs$$2","values","$x$$2","$y$$3","this$$$8","k$$4","v$$1","matchValue$$4","clo1","MutableMap$00602$$Remove$$2B595","this$$$10","k$$6","matchValue$$6","this$$$11","pairs$$3","pair$$3","item","Clear","Contains","item$$1","matchValue$$7","CopyTo","array","arrayIndex","i$$10","Remove","item$$2","matchValue$$8","k$$7","entries","k$$8","this$$$6","k$$2","matchValue$$2","MutableMap$00602$$get_Item$$2B595","k$$9","this$$$9","k$$5","matchValue$$5","MutableMap$00602$$ContainsKey$$2B595","pair$$5","k$$10","v$$2","this$$$7","k$$3","v","matchValue$$3","MutableMap$00602$$set_Item$$5BDDA1","pair$$6","MapTree$00602","MapTreeModule$$$size","MapTreeModule$$$sizeAux","$acc$$5","$m$$6","MapTreeModule$$$empty","MapTreeModule$$$height","_arg1","MapTreeModule$$$mk","l$$1","r$$1","hl","hr","MapTreeModule$$$rebalance","t1h","t2h","MapTreeModule$$$add","m$$3","Compare","c$$1","MapTreeModule$$$find","$comparer$$1$$23","$k$$3$$24","$m$$4$$25","comparer$$1","m$$4","c$$3","MapTreeModule$$$mem","$comparer$$10$$59","$k$$12$$60","$m$$8$$61","comparer$$10","k$$12","m$$8","c$$8","MapTreeModule$002EMapIterator$00602","started","MapTreeModule$$$collapseLHS","$stack$$111","MapTreeModule$$$mkIterator","s$$5","MapTreeModule$$$current","i$$2","MapTreeModule$$$alreadyFinished","MapTreeModule$$$notStarted","MapTreeModule$002EmkIEnumerator$0027$00602","s$$6","MapTreeModule$$$mkIEnumerator","s$$7","MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C","MapTreeModule$$$toSeq","s$$8","en$$1","i$$3","MapTreeModule$$$moveNext","Reset","FSharpMap","comparer$$17","tree","FSharpMap$$$$002Ector$$58ADD115","FSharpMap$$get_Tree","__$$5","FSharpMap$$get_Item$$2B595","__$$8","k$$29","FSharpMap$$get_Count","__$$20","FSharpMap$$ContainsKey$$2B595","__$$21","k$$31","comparer$$20","comparer$$15","res$$2","patternInput$$3","MapTreeModule$$$ofArray","kv","clo2","combineHash","x$$16","y$$3","res$$3","e$$1","activePatternResult3676","that","res$$4","finished","e1","e2","kvp1","kvp2","c$$10","_arg1$$1","k$$34","k$$35","kv$$1","k$$36","v$$26","kv$$2","MutableSet$00601","items","MutableSet$00601$$Add$$2B595","MutableSet$00601$$TryFindIndex$$2B595","MutableSet$00601$$Clear","MutableSet$00601$$get_Count","MutableSet$00601$$Contains$$2B595","MutableSet$00601$$Remove$$2B595","values$$1","value$$2","i$$8","item$$3","add_","x$$1","SetTree$00601","SetTreeModule$$$SetOne","SetTreeModule$$$SetNode","SetTreeModule$002ESetIterator$00601","SetTreeModule$$$collapseLHS","$stack$$104","SetTreeModule$$$mkIterator","s$$13","SetTreeModule$$$current","SetTreeModule$$$alreadyFinished","SetTreeModule$$$notStarted","SetTreeModule$002EmkIEnumerator$00601","s$$14","SetTreeModule$$$mkIEnumerator","s$$15","SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56","SetTreeModule$$$compare","comparer$$18","s1","s2","$comparer$$17$$112","$l1$$113","$l2$$114","SetTreeModule$$$compareStacks","$target$$115","t1$$6","t2$$6","n1k","n2k","t1$$7","t2$$7","n1k$$1","n2k$$1","n2r","t1$$8","t2$$8","emp","n1k$$2","n1r","n2k$$2","t1$$9","t2$$9","n1k$$3","n1r$$1","n2k$$3","n2r$$1","t1$$10","t2$$10","n1k$$4","t1$$11","n1k$$5","n1l","n1r$$2","t1$$12","n2k$$4","t2$$11","n2k$$5","n2l","n2r$$2","t2$$12","l1","l2","c$$7","c$$9","i$$1","SetTreeModule$$$moveNext","FSharpSet","comparer$$22","FSharpSet$$get_Comparer","__$$4","FSharpSet$$get_Tree","f$$1","source$$1","cons$$2","len$$1","target$$2","i$$4","equalsWith","comparer$$13","array1$$7","array2$$7","comparer$$12","array1$$6","array2$$6","i$$41","result$$14","length1","length2","$f$$2$$19","$state$$1$$20","$xs$$8$$21","f$$2","state$$1","xs$$8","xs$$9","acc$$1","x$$6","xs$$12","acc$$3","x$$9","xs$$28","ys$$10","acc$$10","x$$15","f$$15","xs$$29","f$$16","xs$$31","acc$$11","f$$24","xs$$46","unitVar0","x$$24","xs$$50","res$$1","i$$9","col","_count","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","tryPickIndexed","f$$29","xs$$52","$f$$28$$120","$i$$10$$121","$_arg1$$9$$122","tryPickIndexedAux","f$$28","_arg1$$9","f$$33","xs$$56","_arg1$$11","x$$32","f$$42","xs$$71","acc$$17","x$$37","x$$21","that$$1","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Class","_cache","fn","Function","Wrapper","_getPrototypeOf","Parent","Reflect","construct","sham","Proxy","setPrototypeOf","__proto__","CancellationToken","cancelled","_id","_cancelled","_listeners","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","listener","state","$","addListener","removeListener","OperationCanceledError","_Error","_inherits","Trampoline","callCount","maxTrampolineCallCount","setTimeout","protectedCont","ctx","cancelToken","isCancelled","onCancel","trampoline","incrementAndCheck","hijack","onError","protectedBind","computation","binder","onSuccess","ex","protectedReturn","AsyncBuilder","computation1","computation2","Bind","generator","sequence","body","While","Delay","compensation","catchHandler","ex2","resource","TryFinally","guard","Return","emptyContinuation","defaultCancellationToken","fromContinuations","startImmediate","cancellationToken","startWithContinuations","continuation","exceptionContinuation","cancellationContinuation","text","console","dispatch","cmd","plotFactory","plotly","createPlot","plotComponent","extractData","properties","arg00","tuple","areEqual","render","xValue","displayName","memoizeWith","withKey","elemType","memoElement","getDisposable","deps","disposable","initial","dispose","HttpMethod","BodyContent","ResponseContent","url","defaultRequest","httpVerb","req","tupledArg","xhr","serializeMethod","chooser$$2","cons$$30","readyState","responseText","responseType","statusCode","status","content","response","splitAt","getAllResponseHeaders","headerLine","x$$5","x$$4","forLoopVar","setRequestHeader","mimeType","overrideMimeType","send","onChange","ev","urlHash","segment","query","arg10","customNavigationEvent","targetIndex","fill","__","rix'","wix'","ix","source$$7","first","step","last","wix","setState","program","patternInput","rb","reentered","syncDispatch","nextMsg","equal","view","lazyView2With","placeholderId","model","document","getElementById","nextProps","_nextState","githubPath","rawPath","parts","arg20","elems","names","codeBlockRenderer","codeProps","language","sampleName","sampleApp","option","samples","children","renderMarkdown","path","renderers","useEffectWithDeps","request","method","centeredSpinner","error","loadMarkdown","loadMarkdown'","classes","source","strings","nestedMenuList","nestedMenuList'","sidebar","menuItem","segments","contributing","main","application","modifiedProperties","prop","eventHandler","app","init","update","withReactSynchronousUsing","runWith"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1808,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.is-array\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.reduce\";\nimport \"core-js/modules/es.array.slice\";\nimport \"core-js/modules/es.array.sort\";\nimport \"core-js/modules/es.array.splice\";\nimport \"core-js/modules/es.array-buffer.constructor\";\nimport \"core-js/modules/es.array-buffer.is-view\";\nimport \"core-js/modules/es.array-buffer.slice\";\nimport \"core-js/modules/es.date.to-json\";\nimport \"core-js/modules/es.date.to-string\";\nimport \"core-js/modules/es.number.to-fixed\";\nimport \"core-js/modules/es.object.assign\";\nimport \"core-js/modules/es.object.define-property\";\nimport \"core-js/modules/es.object.get-own-property-descriptor\";\nimport \"core-js/modules/es.object.keys\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/es.string.replace\";\nimport \"core-js/modules/es.weak-map\";\nimport \"core-js/modules/web.dom-collections.iterator\";\nimport \"core-js/modules/web.url.to-json\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// tslint:disable:ban-types\n// Object.assign flattens getters and setters\n// See https://stackoverflow.com/questions/37054596/js-es5-how-to-assign-objects-with-setters-and-getters\nexport function extend(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  for (var _i = 0, _sources = sources; _i < _sources.length; _i++) {\n    var source = _sources[_i];\n\n    for (var _i2 = 0, _Object$keys = Object.keys(source); _i2 < _Object$keys.length; _i2++) {\n      var key = _Object$keys[_i2];\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    }\n  }\n\n  return target;\n}\nexport function isDisposable(x) {\n  return x != null && typeof x.Dispose === \"function\";\n}\nexport var Comparer = function Comparer(f) {\n  _classCallCheck(this, Comparer);\n\n  this.Compare = f || compare;\n};\nexport function comparerFromEqualityComparer(comparer) {\n  // Sometimes IEqualityComparer also implements IComparer\n  if (typeof comparer.Compare === \"function\") {\n    return new Comparer(comparer.Compare);\n  } else {\n    return new Comparer(function (x, y) {\n      var xhash = comparer.GetHashCode(x);\n      var yhash = comparer.GetHashCode(y);\n\n      if (xhash === yhash) {\n        return comparer.Equals(x, y) ? 0 : -1;\n      } else {\n        return xhash < yhash ? -1 : 1;\n      }\n    });\n  }\n} // TODO: Move these three methods to Map and Set modules\n\nexport function containsValue(v, map) {\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = map[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var kv = _step.value;\n\n      if (equals(v, kv[1])) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n  return map.has(key) ? [true, map.get(key)] : [false, defaultValue];\n}\nexport function addToSet(v, set) {\n  if (set.has(v)) {\n    return false;\n  }\n\n  set.add(v);\n  return true;\n}\nexport function assertEqual(actual, expected, msg) {\n  if (!equals(actual, expected)) {\n    throw Object.assign(new Error(msg || \"Expected: \".concat(expected, \" - Actual: \").concat(actual)), {\n      actual: actual,\n      expected: expected\n    });\n  }\n}\nexport function assertNotEqual(actual, expected, msg) {\n  if (equals(actual, expected)) {\n    throw Object.assign(new Error(msg || \"Expected: \".concat(expected, \" - Actual: \").concat(actual)), {\n      actual: actual,\n      expected: expected\n    });\n  }\n}\nexport var Lazy =\n/*#__PURE__*/\nfunction () {\n  function Lazy(factory) {\n    _classCallCheck(this, Lazy);\n\n    this.factory = factory;\n    this.isValueCreated = false;\n  }\n\n  _createClass(Lazy, [{\n    key: \"Value\",\n    get: function get() {\n      if (!this.isValueCreated) {\n        this.createdValue = this.factory();\n        this.isValueCreated = true;\n      }\n\n      return this.createdValue;\n    }\n  }, {\n    key: \"IsValueCreated\",\n    get: function get() {\n      return this.isValueCreated;\n    }\n  }]);\n\n  return Lazy;\n}();\nexport function lazyFromValue(v) {\n  return new Lazy(function () {\n    return v;\n  });\n}\nexport function padWithZeros(i, length) {\n  var str = i.toString(10);\n\n  while (str.length < length) {\n    str = \"0\" + str;\n  }\n\n  return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n  var str = i.toString(10);\n\n  while (str.length < lengthLeft) {\n    str = \"0\" + str;\n  }\n\n  while (str.length < lengthRight) {\n    str = str + \"0\";\n  }\n\n  return str;\n}\nexport function dateOffset(date) {\n  var date1 = date;\n  return typeof date1.offset === \"number\" ? date1.offset : date.kind === 1\n  /* UTC */\n  ? 0 : date.getTimezoneOffset() * -60000;\n}\nexport function int16ToString(i, radix) {\n  i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n  return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n  i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n  return i.toString(radix);\n}\nexport var ObjectRef =\n/*#__PURE__*/\nfunction () {\n  function ObjectRef() {\n    _classCallCheck(this, ObjectRef);\n  }\n\n  _createClass(ObjectRef, null, [{\n    key: \"id\",\n    value: function id(o) {\n      if (!ObjectRef.idMap.has(o)) {\n        ObjectRef.idMap.set(o, ++ObjectRef.count);\n      }\n\n      return ObjectRef.idMap.get(o);\n    }\n  }]);\n\n  return ObjectRef;\n}();\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n  var i = 0;\n  var h = 5381;\n  var len = s.length;\n\n  while (i < len) {\n    h = h * 33 ^ s.charCodeAt(i++);\n  }\n\n  return h;\n}\nexport function numberHash(x) {\n  return x * 2654435761 | 0;\n} // From https://stackoverflow.com/a/37449594\n\nexport function combineHashCodes(hashes) {\n  if (hashes.length === 0) {\n    return 0;\n  }\n\n  return hashes.reduce(function (h1, h2) {\n    return (h1 << 5) + h1 ^ h2;\n  });\n}\nexport function identityHash(x) {\n  if (x == null) {\n    return 0;\n  }\n\n  switch (_typeof(x)) {\n    case \"boolean\":\n      return x ? 1 : 0;\n\n    case \"number\":\n      return numberHash(x);\n\n    case \"string\":\n      return stringHash(x);\n\n    default:\n      return numberHash(ObjectRef.id(x));\n  }\n}\nexport function structuralHash(x) {\n  if (x == null) {\n    return 0;\n  }\n\n  switch (_typeof(x)) {\n    case \"boolean\":\n      return x ? 1 : 0;\n\n    case \"number\":\n      return numberHash(x);\n\n    case \"string\":\n      return stringHash(x);\n\n    default:\n      {\n        if (typeof x.GetHashCode === \"function\") {\n          return x.GetHashCode();\n        } else if (isArray(x)) {\n          var ar = x;\n          var len = ar.length;\n          var hashes = new Array(len);\n\n          for (var i = 0; i < len; i++) {\n            hashes[i] = structuralHash(ar[i]);\n          }\n\n          return combineHashCodes(hashes);\n        } else {\n          return stringHash(String(x));\n        }\n      }\n  }\n}\nexport function isArray(x) {\n  return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nexport function isIterable(x) {\n  return x != null && _typeof(x) === \"object\" && Symbol.iterator in x;\n}\nexport function equalArraysWith(x, y, eq) {\n  if (x == null) {\n    return y == null;\n  }\n\n  if (y == null) {\n    return false;\n  }\n\n  if (x.length !== y.length) {\n    return false;\n  }\n\n  for (var i = 0; i < x.length; i++) {\n    if (!eq(x[i], y[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\nexport function equalArrays(x, y) {\n  return equalArraysWith(x, y, equals);\n} // export function equalObjects(x: { [k: string]: any }, y: { [k: string]: any }): boolean {\n//   if (x == null) { return y == null; }\n//   if (y == null) { return false; }\n//   const xKeys = Object.keys(x);\n//   const yKeys = Object.keys(y);\n//   if (xKeys.length !== yKeys.length) {\n//     return false;\n//   }\n//   xKeys.sort();\n//   yKeys.sort();\n//   for (let i = 0; i < xKeys.length; i++) {\n//     if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n//       return false;\n//     }\n//   }\n//   return true;\n// }\n\nexport function equals(x, y) {\n  if (x === y) {\n    return true;\n  } else if (x == null) {\n    return y == null;\n  } else if (y == null) {\n    return false;\n  } else if (_typeof(x) !== \"object\") {\n    return false;\n  } else if (typeof x.Equals === \"function\") {\n    return x.Equals(y);\n  } else if (isArray(x)) {\n    return isArray(y) && equalArrays(x, y);\n  } else if (x instanceof Date) {\n    return y instanceof Date && compareDates(x, y) === 0;\n  } else {\n    return false;\n  }\n}\nexport function compareDates(x, y) {\n  var xtime;\n  var ytime; // DateTimeOffset and DateTime deals with equality differently.\n\n  if (\"offset\" in x && \"offset\" in y) {\n    xtime = x.getTime();\n    ytime = y.getTime();\n  } else {\n    xtime = x.getTime() + dateOffset(x);\n    ytime = y.getTime() + dateOffset(y);\n  }\n\n  return xtime === ytime ? 0 : xtime < ytime ? -1 : 1;\n}\nexport function comparePrimitives(x, y) {\n  return x === y ? 0 : x < y ? -1 : 1;\n}\nexport function compareArraysWith(x, y, comp) {\n  if (x == null) {\n    return y == null ? 0 : 1;\n  }\n\n  if (y == null) {\n    return -1;\n  }\n\n  if (x.length !== y.length) {\n    return x.length < y.length ? -1 : 1;\n  }\n\n  for (var i = 0, j = 0; i < x.length; i++) {\n    j = comp(x[i], y[i]);\n\n    if (j !== 0) {\n      return j;\n    }\n  }\n\n  return 0;\n}\nexport function compareArrays(x, y) {\n  return compareArraysWith(x, y, compare);\n}\nexport function compareObjects(x, y) {\n  if (x == null) {\n    return y == null ? 0 : 1;\n  }\n\n  if (y == null) {\n    return -1;\n  }\n\n  var xKeys = Object.keys(x);\n  var yKeys = Object.keys(y);\n\n  if (xKeys.length !== yKeys.length) {\n    return xKeys.length < yKeys.length ? -1 : 1;\n  }\n\n  xKeys.sort();\n  yKeys.sort();\n\n  for (var i = 0, j = 0; i < xKeys.length; i++) {\n    var key = xKeys[i];\n\n    if (key !== yKeys[i]) {\n      return key < yKeys[i] ? -1 : 1;\n    } else {\n      j = compare(x[key], y[key]);\n\n      if (j !== 0) {\n        return j;\n      }\n    }\n  }\n\n  return 0;\n}\nexport function compare(x, y) {\n  if (x === y) {\n    return 0;\n  } else if (x == null) {\n    return y == null ? 0 : -1;\n  } else if (y == null) {\n    return 1;\n  } else if (_typeof(x) !== \"object\") {\n    return x < y ? -1 : 1;\n  } else if (typeof x.CompareTo === \"function\") {\n    return x.CompareTo(y);\n  } else if (isArray(x)) {\n    return isArray(y) && compareArrays(x, y);\n  } else if (x instanceof Date) {\n    return y instanceof Date && compareDates(x, y);\n  } else {\n    return 1;\n  }\n}\nexport function min(comparer, x, y) {\n  return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n  return comparer(x, y) > 0 ? x : y;\n}\nexport function createAtom(value) {\n  var atom = value;\n  return function (value) {\n    if (value === void 0) {\n      return atom;\n    } else {\n      atom = value;\n      return void 0;\n    }\n  };\n}\nvar CaseRules = {\n  None: 0,\n  LowerFirst: 1\n};\n\nfunction changeCase(str, caseRule) {\n  switch (caseRule) {\n    case CaseRules.LowerFirst:\n      return str.charAt(0).toLowerCase() + str.slice(1);\n\n    case CaseRules.None:\n    default:\n      return str;\n  }\n}\n\nexport function createObj(fields) {\n  var caseRule = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : CaseRules.None;\n\n  function fail(kvPair) {\n    throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n  }\n\n  var o = {};\n  var definedCaseRule = caseRule;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = fields[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var kvPair = _step2.value;\n      var _caseRule = CaseRules.None;\n\n      if (kvPair == null) {\n        fail(kvPair);\n      } // Deflate unions and use the defined case rule\n\n\n      if (typeof kvPair.toJSON === \"function\") {\n        kvPair = kvPair.toJSON();\n        _caseRule = definedCaseRule;\n      }\n\n      if (Array.isArray(kvPair)) {\n        switch (kvPair.length) {\n          case 0:\n            fail(kvPair);\n            break;\n\n          case 1:\n            o[changeCase(kvPair[0], _caseRule)] = true;\n            break;\n\n          case 2:\n            var value = kvPair[1];\n            o[changeCase(kvPair[0], _caseRule)] = value;\n            break;\n\n          default:\n            o[changeCase(kvPair[0], _caseRule)] = kvPair.slice(1);\n        }\n      } else if (typeof kvPair === \"string\") {\n        o[changeCase(kvPair, _caseRule)] = true;\n      } else {\n        fail(kvPair);\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n        _iterator2[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return o;\n}\nexport function jsOptions(mutator) {\n  var opts = {};\n  mutator(opts);\n  return opts;\n}\nexport function round(value) {\n  var digits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var m = Math.pow(10, digits);\n  var n = +(digits ? value * m : value).toFixed(8);\n  var i = Math.floor(n);\n  var f = n - i;\n  var e = 1e-8;\n  var r = f > 0.5 - e && f < 0.5 + e ? i % 2 === 0 ? i : i + 1 : Math.round(n);\n  return digits ? r / m : r;\n}\nexport function sign(x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n  if (buffer == null) {\n    throw new Error(\"Buffer cannot be null\");\n  }\n\n  for (var i = 0; i < buffer.length; i += 6) {\n    // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n    var r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n\n    var rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n\n    for (var j = 0; j < 6 && i + j < buffer.length; j++) {\n      if (j === 3) {\n        r = rhi;\n      }\n\n      buffer[i + j] = r & 255;\n      r >>>= 8;\n    }\n  }\n}\nexport function unescapeDataString(s) {\n  // https://stackoverflow.com/a/4458580/524236\n  return decodeURIComponent(s.replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n  return encodeURIComponent(s).replace(/!/g, \"%21\").replace(/'/g, \"%27\").replace(/\\(/g, \"%28\").replace(/\\)/g, \"%29\").replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n  return encodeURI(s);\n} // ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\n\nexport function count(col) {\n  if (isArray(col)) {\n    return col.length;\n  } else {\n    var _count = 0;\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n      for (var _iterator3 = col[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n        var _ = _step3.value;\n        _count++;\n      }\n    } catch (err) {\n      _didIteratorError3 = true;\n      _iteratorError3 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n          _iterator3[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError3) {\n          throw _iteratorError3;\n        }\n      }\n    }\n\n    return _count;\n  }\n}\nexport function clear(col) {\n  if (isArray(col)) {\n    col.splice(0);\n  } else {\n    col.clear();\n  }\n}\nvar CURRIED_KEY = \"__CURRIED__\";\nexport function uncurry(arity, f) {\n  // f may be a function option with None value\n  if (f == null) {\n    return null;\n  } // The function is already uncurried\n\n\n  if (f.length > 1) {\n    // if (CURRIED_KEY in f) { // This doesn't always work\n    return f;\n  }\n\n  var uncurriedFn;\n\n  switch (arity) {\n    case 2:\n      uncurriedFn = function uncurriedFn(a1, a2) {\n        return f(a1)(a2);\n      };\n\n      break;\n\n    case 3:\n      uncurriedFn = function uncurriedFn(a1, a2, a3) {\n        return f(a1)(a2)(a3);\n      };\n\n      break;\n\n    case 4:\n      uncurriedFn = function uncurriedFn(a1, a2, a3, a4) {\n        return f(a1)(a2)(a3)(a4);\n      };\n\n      break;\n\n    case 5:\n      uncurriedFn = function uncurriedFn(a1, a2, a3, a4, a5) {\n        return f(a1)(a2)(a3)(a4)(a5);\n      };\n\n      break;\n\n    case 6:\n      uncurriedFn = function uncurriedFn(a1, a2, a3, a4, a5, a6) {\n        return f(a1)(a2)(a3)(a4)(a5)(a6);\n      };\n\n      break;\n\n    case 7:\n      uncurriedFn = function uncurriedFn(a1, a2, a3, a4, a5, a6, a7) {\n        return f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n      };\n\n      break;\n\n    case 8:\n      uncurriedFn = function uncurriedFn(a1, a2, a3, a4, a5, a6, a7, a8) {\n        return f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n      };\n\n      break;\n\n    default:\n      throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n  }\n\n  uncurriedFn[CURRIED_KEY] = f;\n  return uncurriedFn;\n}\nexport function curry(arity, f) {\n  if (f == null) {\n    return null;\n  }\n\n  if (CURRIED_KEY in f) {\n    return f[CURRIED_KEY];\n  }\n\n  switch (arity) {\n    case 2:\n      return function (a1) {\n        return function (a2) {\n          return f(a1, a2);\n        };\n      };\n\n    case 3:\n      return function (a1) {\n        return function (a2) {\n          return function (a3) {\n            return f(a1, a2, a3);\n          };\n        };\n      };\n\n    case 4:\n      return function (a1) {\n        return function (a2) {\n          return function (a3) {\n            return function (a4) {\n              return f(a1, a2, a3, a4);\n            };\n          };\n        };\n      };\n\n    case 5:\n      return function (a1) {\n        return function (a2) {\n          return function (a3) {\n            return function (a4) {\n              return function (a5) {\n                return f(a1, a2, a3, a4, a5);\n              };\n            };\n          };\n        };\n      };\n\n    case 6:\n      return function (a1) {\n        return function (a2) {\n          return function (a3) {\n            return function (a4) {\n              return function (a5) {\n                return function (a6) {\n                  return f(a1, a2, a3, a4, a5, a6);\n                };\n              };\n            };\n          };\n        };\n      };\n\n    case 7:\n      return function (a1) {\n        return function (a2) {\n          return function (a3) {\n            return function (a4) {\n              return function (a5) {\n                return function (a6) {\n                  return function (a7) {\n                    return f(a1, a2, a3, a4, a5, a6, a7);\n                  };\n                };\n              };\n            };\n          };\n        };\n      };\n\n    case 8:\n      return function (a1) {\n        return function (a2) {\n          return function (a3) {\n            return function (a4) {\n              return function (a5) {\n                return function (a6) {\n                  return function (a7) {\n                    return function (a8) {\n                      return f(a1, a2, a3, a4, a5, a6, a7, a8);\n                    };\n                  };\n                };\n              };\n            };\n          };\n        };\n      };\n\n    default:\n      throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n  }\n}\nexport function partialApply(arity, f, args) {\n  if (f == null) {\n    return null;\n  } else if (CURRIED_KEY in f) {\n    f = f[CURRIED_KEY];\n\n    for (var i = 0; i < args.length; i++) {\n      f = f(args[i]);\n    }\n\n    return f;\n  } else {\n    switch (arity) {\n      case 1:\n        // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n        // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n        // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n        return function (a1) {\n          return f.apply(null, args.concat([a1]));\n        };\n\n      case 2:\n        return function (a1) {\n          return function (a2) {\n            return f.apply(null, args.concat([a1, a2]));\n          };\n        };\n\n      case 3:\n        return function (a1) {\n          return function (a2) {\n            return function (a3) {\n              return f.apply(null, args.concat([a1, a2, a3]));\n            };\n          };\n        };\n\n      case 4:\n        return function (a1) {\n          return function (a2) {\n            return function (a3) {\n              return function (a4) {\n                return f.apply(null, args.concat([a1, a2, a3, a4]));\n              };\n            };\n          };\n        };\n\n      case 5:\n        return function (a1) {\n          return function (a2) {\n            return function (a3) {\n              return function (a4) {\n                return function (a5) {\n                  return f.apply(null, args.concat([a1, a2, a3, a4, a5]));\n                };\n              };\n            };\n          };\n        };\n\n      case 6:\n        return function (a1) {\n          return function (a2) {\n            return function (a3) {\n              return function (a4) {\n                return function (a5) {\n                  return function (a6) {\n                    return f.apply(null, args.concat([a1, a2, a3, a4, a5, a6]));\n                  };\n                };\n              };\n            };\n          };\n        };\n\n      case 7:\n        return function (a1) {\n          return function (a2) {\n            return function (a3) {\n              return function (a4) {\n                return function (a5) {\n                  return function (a6) {\n                    return function (a7) {\n                      return f.apply(null, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n                    };\n                  };\n                };\n              };\n            };\n          };\n        };\n\n      case 8:\n        return function (a1) {\n          return function (a2) {\n            return function (a3) {\n              return function (a4) {\n                return function (a5) {\n                  return function (a6) {\n                    return function (a7) {\n                      return function (a8) {\n                        return f.apply(null, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n                      };\n                    };\n                  };\n                };\n              };\n            };\n          };\n        };\n\n      default:\n        throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n    }\n  }\n}\nexport function mapCurriedArgs(fn, mappings) {\n  function mapArg(fn, arg, mappings, idx) {\n    var mapping = mappings[idx];\n\n    if (mapping !== 0) {\n      var expectedArity = mapping[0];\n      var actualArity = mapping[1];\n\n      if (expectedArity > 1) {\n        arg = curry(expectedArity, arg);\n      }\n\n      if (actualArity > 1) {\n        arg = uncurry(actualArity, arg);\n      }\n    }\n\n    var res = fn(arg);\n\n    if (idx + 1 === mappings.length) {\n      return res;\n    } else {\n      return function (arg) {\n        return mapArg(res, arg, mappings, idx + 1);\n      };\n    }\n  }\n\n  return function (arg) {\n    return mapArg(fn, arg, mappings, 0);\n  };\n}\nexport function addToDict(dict, k, v) {\n  if (dict.has(k)) {\n    throw new Error(\"An item with the same key has already been added. Key: \" + k);\n  }\n\n  dict.set(k, v);\n}\nexport function getItemFromDict(map, key) {\n  if (map.has(key)) {\n    return map.get(key);\n  } else {\n    throw new Error(\"The given key '\".concat(key, \"' was not present in the dictionary.\"));\n  }\n}","import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.filter\";\nimport \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.join\";\nimport \"core-js/modules/es.array.map\";\nimport \"core-js/modules/es.array.splice\";\nimport \"core-js/modules/es.date.to-json\";\nimport \"core-js/modules/es.date.to-string\";\nimport \"core-js/modules/es.function.name\";\nimport \"core-js/modules/es.object.assign\";\nimport \"core-js/modules/es.object.create\";\nimport \"core-js/modules/es.object.get-prototype-of\";\nimport \"core-js/modules/es.object.keys\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\nimport \"core-js/modules/web.url.to-json\";\nimport { combineHashCodes, compare, compareArrays, equalArrays, equals, identityHash, numberHash, structuralHash } from \"./Util\";\n\nfunction sameType(x, y) {\n  return y != null && Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n} // Taken from Babel helpers\n\n\nfunction inherits(subClass, superClass) {\n  // if (typeof superClass !== \"function\" && superClass !== null) {\n  //   throw new TypeError(\n  //     \"Super expression must either be null or a function, not \" +\n  //       typeof superClass\n  //   );\n  // }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  }); // if (superClass)\n  //   Object.setPrototypeOf\n  //     ? Object.setPrototypeOf(subClass, superClass)\n  //     : (subClass.__proto__ = superClass);\n}\n\nexport function declare(cons, superClass) {\n  inherits(cons, superClass || SystemObject);\n  return cons;\n}\nexport function SystemObject() {\n  return;\n}\n\nSystemObject.prototype.toString = function () {\n  var _this = this;\n\n  return \"{\" + Object.keys(this).map(function (k) {\n    return k + \" = \" + String(_this[k]);\n  }).join(\";\\n \") + \"}\";\n};\n\nSystemObject.prototype.GetHashCode = function () {\n  return identityHash(this);\n};\n\nSystemObject.prototype.Equals = function (other) {\n  return this === other;\n};\n\nfunction compareList(self, other) {\n  if (self === other) {\n    return 0;\n  } else {\n    if (other == null) {\n      return -1;\n    }\n\n    while (self.tail != null) {\n      if (other.tail == null) {\n        return 1;\n      }\n\n      var res = compare(self.head, other.head);\n\n      if (res !== 0) {\n        return res;\n      }\n\n      self = self.tail;\n      other = other.tail;\n    }\n\n    return other.tail == null ? 0 : -1;\n  }\n}\n\nexport function List(head, tail) {\n  this.head = head;\n  this.tail = tail;\n}\n\nList.prototype.toString = function () {\n  return \"[\" + Array.from(this).map(function (x) {\n    return String(x);\n  }).join(\"; \") + \"]\";\n};\n\nList.prototype.toJSON = function () {\n  return Array.from(this);\n};\n\nList.prototype[Symbol.iterator] = function () {\n  var cur = this;\n  return {\n    next: function next() {\n      var tmp = cur;\n      cur = cur.tail;\n      return {\n        done: tmp.tail == null,\n        value: tmp.head\n      };\n    }\n  };\n};\n\nList.prototype.GetHashCode = function () {\n  var hashes = Array.from(this).map(structuralHash);\n  return combineHashCodes(hashes);\n};\n\nList.prototype.Equals = function (other) {\n  return compareList(this, other) === 0;\n};\n\nList.prototype.CompareTo = function (other) {\n  return compareList(this, other);\n};\n\nexport function Union(tag, name) {\n  this.tag = tag | 0;\n  this.name = name;\n\n  for (var _len = arguments.length, fields = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    fields[_key - 2] = arguments[_key];\n  }\n\n  this.fields = fields;\n}\n\nUnion.prototype.toString = function () {\n  var len = this.fields.length;\n\n  if (len === 0) {\n    return this.name;\n  } else if (len === 1) {\n    return this.name + \" \" + String(this.fields[0]);\n  } else {\n    return this.name + \" (\" + this.fields.map(function (x) {\n      return String(x);\n    }).join(\",\") + \")\";\n  }\n};\n\nUnion.prototype.toJSON = function () {\n  return this.fields.length === 0 ? this.name : [this.name].concat(this.fields);\n};\n\nUnion.prototype.GetHashCode = function () {\n  var hashes = this.fields.map(function (x) {\n    return structuralHash(x);\n  });\n  hashes.splice(0, 0, numberHash(this.tag));\n  return combineHashCodes(hashes);\n};\n\nUnion.prototype.Equals = function (other) {\n  return this === other || sameType(this, other) && this.tag === other.tag && equalArrays(this.fields, other.fields);\n};\n\nUnion.prototype.CompareTo = function (other) {\n  if (this === other) {\n    return 0;\n  } else if (!sameType(this, other)) {\n    return -1;\n  } else if (this.tag === other.tag) {\n    return compareArrays(this.fields, other.fields);\n  } else {\n    return this.tag < other.tag ? -1 : 1;\n  }\n};\n\nfunction recordToJson(record, getFieldNames) {\n  var o = {};\n  var keys = getFieldNames == null ? Object.keys(record) : getFieldNames(record);\n\n  for (var i = 0; i < keys.length; i++) {\n    o[keys[i]] = record[keys[i]];\n  }\n\n  return o;\n}\n\nfunction recordEquals(self, other, getFieldNames) {\n  if (self === other) {\n    return true;\n  } else if (!sameType(self, other)) {\n    return false;\n  } else {\n    var thisNames = getFieldNames == null ? Object.keys(self) : getFieldNames(self);\n\n    for (var i = 0; i < thisNames.length; i++) {\n      if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n\nfunction recordCompare(self, other, getFieldNames) {\n  if (self === other) {\n    return 0;\n  } else if (!sameType(self, other)) {\n    return -1;\n  } else {\n    var thisNames = getFieldNames == null ? Object.keys(self) : getFieldNames(self);\n\n    for (var i = 0; i < thisNames.length; i++) {\n      var result = compare(self[thisNames[i]], other[thisNames[i]]);\n\n      if (result !== 0) {\n        return result;\n      }\n    }\n\n    return 0;\n  }\n}\n\nexport function Record() {\n  return;\n}\n\nRecord.prototype.toString = function () {\n  var _this2 = this;\n\n  return \"{\" + Object.keys(this).map(function (k) {\n    return k + \" = \" + String(_this2[k]);\n  }).join(\";\\n \") + \"}\";\n};\n\nRecord.prototype.toJSON = function () {\n  return recordToJson(this);\n};\n\nRecord.prototype.GetHashCode = function () {\n  var _this3 = this;\n\n  var hashes = Object.keys(this).map(function (k) {\n    return structuralHash(_this3[k]);\n  });\n  return combineHashCodes(hashes);\n};\n\nRecord.prototype.Equals = function (other) {\n  return recordEquals(this, other);\n};\n\nRecord.prototype.CompareTo = function (other) {\n  return recordCompare(this, other);\n};\n\nexport function anonRecord(o) {\n  return Object.assign(Object.create(Record.prototype), o);\n}\nexport var FSharpRef = declare(function FSharpRef(contents) {\n  this.contents = contents;\n}, Record); // EXCEPTIONS\n\nexport var Exception = declare(function Exception(msg) {\n  this.stack = Error().stack;\n  this.message = msg;\n});\nexport function isException(x) {\n  return x instanceof Error || x instanceof Exception;\n}\n\nfunction getFSharpExceptionFieldNames(self) {\n  return Object.keys(self).filter(function (k) {\n    return k !== \"message\" && k !== \"stack\";\n  });\n}\n\nexport var FSharpException = declare(function FSharpException() {\n  Exception.call(this);\n}, Exception);\n\nFSharpException.prototype.toString = function () {\n  var _this4 = this;\n\n  var fieldNames = getFSharpExceptionFieldNames(this);\n  var len = fieldNames.length;\n\n  if (len === 0) {\n    return this.message;\n  } else if (len === 1) {\n    return this.message + \" \" + String(this[fieldNames[0]]);\n  } else {\n    return this.message + \" (\" + fieldNames.map(function (k) {\n      return String(_this4[k]);\n    }).join(\",\") + \")\";\n  }\n};\n\nFSharpException.prototype.toJSON = function () {\n  return recordToJson(this, getFSharpExceptionFieldNames);\n};\n\nFSharpException.prototype.GetHashCode = function () {\n  var _this5 = this;\n\n  var hashes = getFSharpExceptionFieldNames(this).map(function (k) {\n    return structuralHash(_this5[k]);\n  });\n  return combineHashCodes(hashes);\n};\n\nFSharpException.prototype.Equals = function (other) {\n  return recordEquals(this, other, getFSharpExceptionFieldNames);\n};\n\nFSharpException.prototype.CompareTo = function (other) {\n  return recordCompare(this, other, getFSharpExceptionFieldNames);\n};\n\nexport var MatchFailureException = declare(function MatchFailureException(arg1, arg2, arg3) {\n  this.arg1 = arg1;\n  this.arg2 = arg2 | 0;\n  this.arg3 = arg3 | 0;\n  this.message = \"The match cases were incomplete\";\n}, FSharpException);\nexport var Attribute = declare(function Attribute() {\n  return;\n});","import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.is-array\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.join\";\nimport \"core-js/modules/es.array.last-index-of\";\nimport \"core-js/modules/es.array.map\";\nimport \"core-js/modules/es.array.reduce\";\nimport \"core-js/modules/es.date.to-string\";\nimport \"core-js/modules/es.function.bind\";\nimport \"core-js/modules/es.function.name\";\nimport \"core-js/modules/es.object.define-property\";\nimport \"core-js/modules/es.object.keys\";\nimport \"core-js/modules/es.object.set-prototype-of\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.parse-int\";\nimport \"core-js/modules/es.reflect.construct\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.ends-with\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/es.string.starts-with\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { anonRecord as makeAnonRecord, Record, Union } from \"./Types\";\nimport { compareArraysWith, equalArraysWith } from \"./Util\";\nexport var CaseInfo = function CaseInfo(declaringType, tag, name, fields) {\n  _classCallCheck(this, CaseInfo);\n\n  this.declaringType = declaringType;\n  this.tag = tag;\n  this.name = name;\n  this.fields = fields;\n};\nexport var TypeInfo =\n/*#__PURE__*/\nfunction () {\n  function TypeInfo(fullname, generics, constructor, fields, cases, enumCases) {\n    _classCallCheck(this, TypeInfo);\n\n    this.fullname = fullname;\n    this.generics = generics;\n    this.constructor = constructor;\n    this.fields = fields;\n    this.cases = cases;\n    this.enumCases = enumCases;\n  }\n\n  _createClass(TypeInfo, [{\n    key: \"toString\",\n    value: function toString() {\n      return fullName(this);\n    }\n  }, {\n    key: \"Equals\",\n    value: function Equals(other) {\n      return equals(this, other);\n    }\n  }, {\n    key: \"CompareTo\",\n    value: function CompareTo(other) {\n      return compare(this, other);\n    }\n  }]);\n\n  return TypeInfo;\n}();\nexport function getGenerics(t) {\n  return t.generics != null ? t.generics : [];\n}\nexport function equals(t1, t2) {\n  if (t1.fullname === \"\") {\n    // Anonymous records\n    return t2.fullname === \"\" && equalArraysWith(getRecordElements(t1), getRecordElements(t2), function (_ref, _ref2) {\n      var _ref3 = _slicedToArray(_ref, 2),\n          k1 = _ref3[0],\n          v1 = _ref3[1];\n\n      var _ref4 = _slicedToArray(_ref2, 2),\n          k2 = _ref4[0],\n          v2 = _ref4[1];\n\n      return k1 === k2 && equals(v1, v2);\n    });\n  } else {\n    return t1.fullname === t2.fullname && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n  }\n} // System.Type is not comparable in .NET, but let's implement this\n// in case users want to create a dictionary with types as keys\n\nexport function compare(t1, t2) {\n  if (t1.fullname !== t2.fullname) {\n    return t1.fullname < t2.fullname ? -1 : 1;\n  } else {\n    return compareArraysWith(getGenerics(t1), getGenerics(t2), compare);\n  }\n}\nexport function type(fullname, generics) {\n  return new TypeInfo(fullname, generics);\n}\nexport function record(fullname, generics, constructor, fields) {\n  return new TypeInfo(fullname, generics, constructor, fields);\n}\nexport function anonRecord() {\n  for (var _len = arguments.length, fields = new Array(_len), _key = 0; _key < _len; _key++) {\n    fields[_key] = arguments[_key];\n  }\n\n  return new TypeInfo(\"\", null, null, function () {\n    return fields;\n  });\n}\nexport function union(fullname, generics, constructor, cases) {\n  var t = new TypeInfo(fullname, generics, constructor, null, function () {\n    return cases().map(function (x, i) {\n      return typeof x === \"string\" ? new CaseInfo(t, i, x) : new CaseInfo(t, i, x[0], x[1]);\n    });\n  });\n  return t;\n}\nexport function tuple() {\n  for (var _len2 = arguments.length, generics = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    generics[_key2] = arguments[_key2];\n  }\n\n  return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate() {\n  for (var _len3 = arguments.length, generics = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    generics[_key3] = arguments[_key3];\n  }\n\n  return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda(argType, returnType) {\n  return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option(generic) {\n  return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list(generic) {\n  return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array(generic) {\n  return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nexport function enumType(fullname, underlyingType, enumCases) {\n  return new TypeInfo(fullname, [underlyingType], null, null, null, enumCases);\n}\nexport var obj = new TypeInfo(\"System.Object\");\nexport var unit = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\n\nvar _char = new TypeInfo(\"System.Char\");\n\nexport { _char as char };\nexport var string = new TypeInfo(\"System.String\");\nexport var bool = new TypeInfo(\"System.Boolean\");\nexport var int8 = new TypeInfo(\"System.SByte\");\nexport var uint8 = new TypeInfo(\"System.Byte\");\nexport var int16 = new TypeInfo(\"System.Int16\");\nexport var uint16 = new TypeInfo(\"System.UInt16\");\nexport var int32 = new TypeInfo(\"System.Int32\");\nexport var uint32 = new TypeInfo(\"System.UInt32\");\nexport var float32 = new TypeInfo(\"System.Single\");\nexport var float64 = new TypeInfo(\"System.Double\");\nexport var decimal = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n  if (Array.isArray(info)) {\n    return info[0];\n  } else if (info instanceof CaseInfo) {\n    return info.name;\n  } else {\n    var i = info.fullname.lastIndexOf(\".\");\n    return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n  }\n}\nexport function fullName(t) {\n  var gen = t.generics != null && !isArray(t) ? t.generics : [];\n\n  if (gen.length > 0) {\n    return t.fullname + \"[\" + gen.map(function (x) {\n      return fullName(x);\n    }).join(\",\") + \"]\";\n  } else {\n    return t.fullname;\n  }\n}\nexport function namespace(t) {\n  var i = t.fullname.lastIndexOf(\".\");\n  return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n  return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n  return isArray(t) ? t.generics[0] : null;\n}\nexport function isGenericType(t) {\n  return t.generics != null && t.generics.length > 0;\n}\nexport function isEnum(t) {\n  return t.enumCases != null && t.enumCases.length > 0;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\n\nexport function getGenericTypeDefinition(t) {\n  return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(function () {\n    return obj;\n  }));\n}\nexport function getEnumUnderlyingType(t) {\n  return t.generics[0];\n}\nexport function getEnumValues(t) {\n  if (isEnum(t)) {\n    return t.enumCases.map(function (kv) {\n      return kv[1];\n    });\n  } else {\n    throw new Error(\"\".concat(t.fullname, \" is not an enum type\"));\n  }\n}\nexport function getEnumNames(t) {\n  if (isEnum(t)) {\n    return t.enumCases.map(function (kv) {\n      return kv[0];\n    });\n  } else {\n    throw new Error(\"\".concat(t.fullname, \" is not an enum type\"));\n  }\n}\n\nfunction getEnumCase(t, v) {\n  if (t.enumCases != null) {\n    if (typeof v === \"string\") {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = t.enumCases[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var kv = _step.value;\n\n          if (kv[0] === v) {\n            return kv;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      throw new Error(\"'\".concat(v, \"' was not found in \").concat(t.fullname));\n    } else {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = t.enumCases[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _kv = _step2.value;\n\n          if (_kv[1] === v) {\n            return _kv;\n          }\n        } // .NET returns the number even if it doesn't match any of the cases\n\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return [null, v];\n    }\n  } else {\n    throw new Error(\"\".concat(t.fullname, \" is not an enum type\"));\n  }\n}\n\nexport function parseEnum(t, str) {\n  // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n  var value = parseInt(str, 10);\n  return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nexport function tryParseEnum(t, str) {\n  try {\n    var v = parseEnum(t, str);\n    return [true, v];\n  } catch (_a) {// supress error\n  }\n\n  return [false, null];\n}\nexport function getEnumName(t, v) {\n  return getEnumCase(t, v)[0];\n}\nexport function isEnumDefined(t, v) {\n  try {\n    var kv = getEnumCase(t, v);\n    return kv[0] != null;\n  } catch (_a) {// supress error\n  }\n\n  return false;\n} // FSharpType\n\nexport function getUnionCases(t) {\n  if (t.cases != null) {\n    return t.cases();\n  } else {\n    throw new Error(\"\".concat(t.fullname, \" is not an F# union type\"));\n  }\n}\nexport function getRecordElements(t) {\n  if (t.fields != null) {\n    return t.fields();\n  } else {\n    throw new Error(\"\".concat(t.fullname, \" is not an F# record type\"));\n  }\n}\nexport function getTupleElements(t) {\n  if (isTuple(t)) {\n    return t.generics;\n  } else {\n    throw new Error(\"\".concat(t.fullname, \" is not a tuple type\"));\n  }\n}\nexport function getFunctionElements(t) {\n  if (isFunction(t)) {\n    var gen = t.generics;\n    return [gen[0], gen[1]];\n  } else {\n    throw new Error(\"\".concat(t.fullname, \" is not an F# function type\"));\n  }\n}\nexport function isUnion(t) {\n  return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n  return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n  return t.fullname.startsWith(\"System.Tuple\");\n} // In .NET this is false for delegates\n\nexport function isFunction(t) {\n  return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n} // FSharpValue\n\nexport function getUnionFields(v, t) {\n  var cases = getUnionCases(t);\n  var case_ = cases[v.tag];\n\n  if (case_ == null) {\n    throw new Error(\"Cannot find case \".concat(v.name, \" in union type\"));\n  }\n\n  return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n  return uci.fields == null ? [] : uci.fields.map(function (t, i) {\n    return [\"Data\" + i, t];\n  });\n}\nexport function getRecordFields(v) {\n  return Object.keys(v).map(function (k) {\n    return v[k];\n  });\n}\nexport function getRecordField(v, field) {\n  return v[field[0]];\n}\nexport function getTupleFields(v) {\n  return v;\n}\nexport function getTupleField(v, i) {\n  return v[i];\n}\nexport function makeUnion(uci, values) {\n  var expectedLength = (uci.fields || []).length;\n\n  if (values.length !== expectedLength) {\n    throw new Error(\"Expected an array of length \".concat(expectedLength, \" but got \").concat(values.length));\n  }\n\n  return _construct(uci.declaringType.constructor, [uci.tag, uci.name].concat(_toConsumableArray(values)));\n}\nexport function makeRecord(t, values) {\n  var fields = getRecordElements(t);\n\n  if (fields.length !== values.length) {\n    throw new Error(\"Expected an array of length \".concat(fields.length, \" but got \").concat(values.length));\n  }\n\n  return t.constructor != null ? _construct(t.constructor, _toConsumableArray(values)) : makeAnonRecord(fields.reduce(function (obj, _ref5, i) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n        key = _ref6[0],\n        _t = _ref6[1];\n\n    obj[key] = values[i];\n    return obj;\n  }, {}));\n}\nexport function makeTuple(values, t) {\n  return values;\n} // Fable.Core.Reflection\n\nfunction assertUnion(x) {\n  if (!(x instanceof Union)) {\n    throw new Error(\"Value is not an F# union type\");\n  }\n}\n\nexport function getCaseTag(x) {\n  assertUnion(x);\n  return x.tag;\n}\nexport function getCaseName(x) {\n  assertUnion(x);\n  return x.name;\n}\nexport function getCaseFields(x) {\n  assertUnion(x);\n  return x.fields;\n}","import \"core-js/modules/es.array.every\";\nimport \"core-js/modules/es.object.define-property\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { declare, Union } from \"./Types\";\nimport { compare, equals, structuralHash } from \"./Util\"; // Using a class here for better compatibility with TS files importing Some\n\nexport var Some =\n/*#__PURE__*/\nfunction () {\n  function Some(value) {\n    _classCallCheck(this, Some);\n\n    this.value = value;\n  } // Don't add \"Some\" for consistency with erased options\n\n\n  _createClass(Some, [{\n    key: \"toString\",\n    value: function toString() {\n      return String(this.value);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.value;\n    }\n  }, {\n    key: \"GetHashCode\",\n    value: function GetHashCode() {\n      return structuralHash(this.value);\n    }\n  }, {\n    key: \"Equals\",\n    value: function Equals(other) {\n      if (other == null) {\n        return false;\n      } else {\n        return equals(this.value, other instanceof Some ? other.value : other);\n      }\n    }\n  }, {\n    key: \"CompareTo\",\n    value: function CompareTo(other) {\n      if (other == null) {\n        return 1;\n      } else {\n        return compare(this.value, other instanceof Some ? other.value : other);\n      }\n    }\n  }]);\n\n  return Some;\n}();\nexport function some(x) {\n  x = x === undefined ? null : x;\n  return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x, acceptNull) {\n  if (x == null) {\n    if (!acceptNull) {\n      throw new Error(\"Option has no value\");\n    }\n\n    return null;\n  } else {\n    return x instanceof Some ? x.value : x;\n  }\n}\nexport function defaultArg(arg, defaultValue, f) {\n  return arg == null ? defaultValue : f != null ? f(value(arg)) : value(arg);\n}\nexport function defaultArgWith(arg, defThunk) {\n  return arg == null ? defThunk() : value(arg);\n}\nexport function filter(predicate, arg) {\n  return arg != null ? !predicate(value(arg)) ? null : arg : arg;\n}\nexport function map(f, arg) {\n  return arg == null ? arg : some(f(value(arg)));\n}\nexport function mapMultiple(predicate) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return args.every(function (x) {\n    return x != null;\n  }) ? predicate.apply(null, args) : null;\n}\nexport function bind(f, arg) {\n  return arg == null ? arg : f(value(arg));\n} // CHOICE\n\nexport var Choice = declare(function Choice(tag, name, field) {\n  Union.call(this, tag, name, field);\n}, Union);\nexport function choice1(x) {\n  return new Choice(0, \"Choice1Of2\", x);\n}\nexport function choice2(x) {\n  return new Choice(1, \"Choice2Of2\", x);\n}\nexport function tryValueIfChoice1(x) {\n  return x.tag === 0 ? some(x.fields[0]) : null;\n}\nexport function tryValueIfChoice2(x) {\n  return x.tag === 1 ? some(x.fields[0]) : null;\n} // RESULT\n\nexport var Result = declare(function Result(tag, name, field) {\n  Union.call(this, tag, name, field);\n}, Union);\nexport function ok(x) {\n  return new Result(0, \"Ok\", x);\n}\nexport function error(x) {\n  return new Result(1, \"Error\", x);\n}\nexport function mapOk(f, result) {\n  return result.tag === 0 ? ok(f(result.fields[0])) : result;\n}\nexport function mapError(f, result) {\n  return result.tag === 1 ? error(f(result.fields[0])) : result;\n}\nexport function bindOk(f, result) {\n  return result.tag === 0 ? f(result.fields[0]) : result;\n}","import \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.find-index\";\nimport \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.join\";\nimport \"core-js/modules/es.array.reverse\";\nimport \"core-js/modules/es.array.slice\";\nimport \"core-js/modules/es.date.to-json\";\nimport \"core-js/modules/es.date.to-string\";\nimport \"core-js/modules/es.number.to-fixed\";\nimport \"core-js/modules/es.number.to-precision\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.replace\";\nimport \"core-js/modules/es.string.search\";\nimport \"core-js/modules/es.string.sub\";\nimport \"core-js/modules/web.url.to-json\";\n// https://github.com/MikeMcl/big.js/blob/01b3ce3a6b0ba7b42442ea48ec4ffc88d1669ec4/big.mjs\n\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util\"; // The shared prototype object.\n\nvar P = {\n  GetHashCode: function GetHashCode() {\n    return combineHashCodes([this.s, this.e].concat(this.c));\n  },\n  Equals: function Equals(x) {\n    return !this.cmp(x);\n  },\n  CompareTo: function CompareTo(x) {\n    return this.cmp(x);\n  }\n};\n/*\n *  big.js v5.2.2\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\n *  https://github.com/MikeMcl/big.js/LICENCE\n */\n\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\n\nvar DP = 28,\n    // 0 to MAX_DP\n\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1,\n    // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6,\n    // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6,\n    // 1 to 1000000\n\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29,\n    // 0 to -1000000\n\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big.\n * (This limit is not enforced or checked.)\n */\nPE = 29,\n    // 0 to 1000000\n\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ',\n    INVALID = NAME + 'Invalid ',\n    INVALID_DP = INVALID + 'decimal places',\n    INVALID_RM = INVALID + 'rounding mode',\n    DIV_BY_ZERO = NAME + 'Division by zero',\n    UNDEFINED = void 0,\n    NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n *\n */\n\nfunction _Big_() {\n  /*\n   * The Big constructor and exported function.\n   * Create and return a new instance of a Big number object.\n   *\n   * n {number|string|Big} A numeric value.\n   */\n  function Big(n) {\n    var x = this; // Enable constructor usage without new.\n\n    if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n); // Duplicate.\n\n    if (n instanceof Big) {\n      x.s = n.s;\n      x.e = n.e;\n      x.c = n.c.slice();\n      normalize(x);\n    } else {\n      parse(x, n);\n    }\n    /*\n     * Retain a reference to this Big constructor, and shadow Big.prototype.constructor which\n     * points to Object.\n     */\n\n\n    x.constructor = Big;\n  }\n\n  Big.prototype = P;\n  Big.DP = DP;\n  Big.RM = RM;\n  Big.NE = NE;\n  Big.PE = PE;\n  Big.version = '5.2.2';\n  return Big;\n}\n\nfunction normalize(x) {\n  x = round(x, DP, 0);\n\n  if (x.c.length > 1 && !x.c[0]) {\n    var i = x.c.findIndex(function (x) {\n      return x;\n    });\n    x.c = x.c.slice(i);\n    x.e = x.e - i;\n  }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\n\n\nfunction parse(x, n) {\n  var e, i, nl; // Minus zero?\n\n  if (n === 0 && 1 / n < 0) n = '-0';else if (!NUMERIC.test(n += '')) throw Error(INVALID + 'number'); // Determine sign.\n\n  x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1; // Decimal point?\n\n  if ((e = n.indexOf('.')) > -1) n = n.replace('.', ''); // Exponential form?\n\n  if ((i = n.search(/e/i)) > 0) {\n    // Determine exponent.\n    if (e < 0) e = i;\n    e += +n.slice(i + 1);\n    n = n.substring(0, i);\n  } else if (e < 0) {\n    // Integer.\n    e = n.length;\n  }\n\n  nl = n.length; // Determine leading zeros before decimal point.\n\n  for (i = 0; i < e && i < nl && n.charAt(i) == '0';) {\n    ++i;\n  } // older version (ignores decimal point).\n  // // Determine leading zeros.\n  // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n\n\n  if (i == nl) {\n    // Zero.\n    x.c = [x.e = 0];\n  } else {\n    x.e = e - i - 1;\n    x.c = []; // Convert string to array of digits without leading zeros\n\n    for (e = 0; i < nl;) {\n      x.c[e++] = +n.charAt(i++);\n    } // older version (doesn't keep trailing zeroes).\n    // // Determine trailing zeros.\n    // for (; nl > 0 && n.charAt(--nl) == '0';);\n    // // Convert string to array of digits without leading/trailing zeros.\n    // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n\n  }\n\n  x = round(x, Big.DP, Big.RM);\n  return x;\n}\n/*\n * Round Big x to a maximum of dp decimal places using rounding mode rm.\n * Called by stringify, P.div, P.round and P.sqrt.\n *\n * x {Big} The Big to round.\n * dp {number} Integer, 0 to MAX_DP inclusive.\n * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\n * [more] {boolean} Whether the result of division was truncated.\n */\n\n\nfunction round(x, dp, rm, more) {\n  var xc = x.c,\n      i = x.e + dp + 1;\n\n  if (i < xc.length) {\n    if (rm === 1) {\n      // xc[i] is the digit after the digit that may be rounded up.\n      more = xc[i] >= 5;\n    } else if (rm === 2) {\n      more = xc[i] > 5 || xc[i] == 5 && (more || i < 0 || xc[i + 1] !== UNDEFINED || xc[i - 1] & 1);\n    } else if (rm === 3) {\n      more = more || !!xc[0];\n    } else {\n      more = false;\n      if (rm !== 0) throw Error(INVALID_RM);\n    }\n\n    if (i < 1) {\n      xc.length = 1;\n\n      if (more) {\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n        x.e = -dp;\n        xc[0] = 1;\n      } else {\n        // Zero.\n        xc[0] = x.e = 0;\n      }\n    } else {\n      // Remove any digits after the required decimal places.\n      xc.length = i--; // Round up?\n\n      if (more) {\n        // Rounding up may mean the previous digit has to be rounded up.\n        for (; ++xc[i] > 9;) {\n          xc[i] = 0;\n\n          if (!i--) {\n            ++x.e;\n            xc.unshift(1);\n          }\n        }\n      } // Remove trailing zeros.\n\n\n      for (i = xc.length; !xc[--i];) {\n        xc.pop();\n      }\n    }\n  } else if (rm < 0 || rm > 3 || rm !== ~~rm) {\n    throw Error(INVALID_RM);\n  }\n\n  return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n *\n * x {Big}\n * id? {number} Caller id.\n *         1 toExponential\n *         2 toFixed\n *         3 toPrecision\n *         4 valueOf\n * n? {number|undefined} Caller's argument.\n * k? {number|undefined}\n */\n\n\nfunction stringify(x, id, n, k) {\n  var e,\n      s,\n      Big = x.constructor,\n      z = !x.c[0];\n\n  if (n !== UNDEFINED) {\n    if (n !== ~~n || n < (id == 3) || n > MAX_DP) {\n      throw Error(id == 3 ? INVALID + 'precision' : INVALID_DP);\n    }\n\n    x = new Big(x); // The index of the digit that may be rounded up.\n\n    n = k - x.e; // Round?\n\n    if (x.c.length > ++k) round(x, n, Big.RM); // toFixed: recalculate k as x.e may have changed if value rounded up.\n\n    if (id == 2) k = x.e + n + 1; // Append zeros?\n\n    for (; x.c.length < k;) {\n      x.c.push(0);\n    }\n  }\n\n  e = x.e;\n  s = x.c.join('');\n  n = s.length; // Exponential notation?\n\n  if (id != 2 && (id == 1 || id == 3 && k <= e || e <= Big.NE || e >= Big.PE)) {\n    s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e; // Normal notation.\n  } else if (e < 0) {\n    for (; ++e;) {\n      s = '0' + s;\n    }\n\n    s = '0.' + s;\n  } else if (e > 0) {\n    if (++e > n) for (e -= n; e--;) {\n      s += '0';\n    } else if (e < n) s = s.slice(0, e) + '.' + s.slice(e);\n  } else if (n > 1) {\n    s = s.charAt(0) + '.' + s.slice(1);\n  }\n\n  return x.s < 0 && (!z || id == 4) ? '-' + s : s;\n} // Prototype/instance methods\n\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\n\n\nP.abs = function () {\n  var x = new this.constructor(this);\n  x.s = 1;\n  return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n*/\n\n\nP.cmp = function (y) {\n  var isneg,\n      Big = this.constructor,\n      x = new Big(this),\n      y = new Big(y),\n      xc = x.c,\n      yc = y.c,\n      i = x.s,\n      j = y.s,\n      k = x.e,\n      l = y.e; // Either zero?\n\n  if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i; // Signs differ?\n\n  if (i != j) return i;\n  isneg = i < 0; // Compare exponents.\n\n  if (k != l) return k > l ^ isneg ? 1 : -1; // Compare digit by digit.\n\n  j = Math.max(xc.length, yc.length);\n\n  for (i = 0; i < j; i++) {\n    k = i < xc.length ? xc[i] : 0;\n    l = i < yc.length ? yc[i] : 0;\n    if (k != l) return k > l ^ isneg ? 1 : -1;\n  }\n\n  return 0; // old version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n  // j = (k = xc.length) < (l = yc.length) ? k : l;\n  // // Compare digit by digit.\n  // for (i = -1; ++i < j;) {\n  //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n  // }\n  // // Compare lengths.\n  // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\n\n\nP.div = function (y) {\n  var Big = this.constructor,\n      x = new Big(this),\n      y = new Big(y),\n      a = x.c,\n      // dividend\n  b = y.c,\n      // divisor\n  k = x.s == y.s ? 1 : -1,\n      dp = Big.DP;\n  if (dp !== ~~dp || dp < 0 || dp > MAX_DP) throw Error(INVALID_DP); // Divisor is zero?\n\n  if (!b[0]) throw Error(DIV_BY_ZERO); // Dividend is 0? Return +-0.\n\n  if (!a[0]) return new Big(k * 0);\n  var bl,\n      bt,\n      n,\n      cmp,\n      ri,\n      bz = b.slice(),\n      ai = bl = b.length,\n      al = a.length,\n      r = a.slice(0, bl),\n      // remainder\n  rl = r.length,\n      q = y,\n      // quotient\n  qc = q.c = [],\n      qi = 0,\n      d = dp + (q.e = x.e - y.e) + 1; // number of digits of the result\n\n  q.s = k;\n  k = d < 0 ? 0 : d; // Create version of divisor with leading zero.\n\n  bz.unshift(0); // Add zeros to make remainder as long as divisor.\n\n  for (; rl++ < bl;) {\n    r.push(0);\n  }\n\n  do {\n    // n is how many times the divisor goes into current remainder.\n    for (n = 0; n < 10; n++) {\n      // Compare divisor and remainder.\n      if (bl != (rl = r.length)) {\n        cmp = bl > rl ? 1 : -1;\n      } else {\n        for (ri = -1, cmp = 0; ++ri < bl;) {\n          if (b[ri] != r[ri]) {\n            cmp = b[ri] > r[ri] ? 1 : -1;\n            break;\n          }\n        }\n      } // If divisor < remainder, subtract divisor from remainder.\n\n\n      if (cmp < 0) {\n        // Remainder can't be more than 1 digit longer than divisor.\n        // Equalise lengths using divisor with extra leading zero?\n        for (bt = rl == bl ? b : bz; rl;) {\n          if (r[--rl] < bt[rl]) {\n            ri = rl;\n\n            for (; ri && !r[--ri];) {\n              r[ri] = 9;\n            }\n\n            --r[ri];\n            r[rl] += 10;\n          }\n\n          r[rl] -= bt[rl];\n        }\n\n        for (; !r[0];) {\n          r.shift();\n        }\n      } else {\n        break;\n      }\n    } // Add the digit n to the result array.\n\n\n    qc[qi++] = cmp ? n : ++n; // Update the remainder.\n\n    if (r[0] && cmp) r[rl] = a[ai] || 0;else r = [a[ai]];\n  } while ((ai++ < al || r[0] !== UNDEFINED) && k--); // Leading zero? Do not remove if result is simply zero (qi == 1).\n\n\n  if (!qc[0] && qi != 1) {\n    // There can't be more than one zero.\n    qc.shift();\n    q.e--;\n  } // Round?\n\n\n  if (qi > d) round(q, dp, Big.RM, r[0] !== UNDEFINED);\n  return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\n\n\nP.eq = function (y) {\n  return !this.cmp(y);\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\n\n\nP.gt = function (y) {\n  return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\n\n\nP.gte = function (y) {\n  return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\n\n\nP.lt = function (y) {\n  return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\n\n\nP.lte = function (y) {\n  return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\n\n\nP.minus = P.sub = function (y) {\n  var i,\n      j,\n      t,\n      xlty,\n      Big = this.constructor,\n      x = new Big(this),\n      y = new Big(y),\n      a = x.s,\n      b = y.s; // Signs differ?\n\n  if (a != b) {\n    y.s = -b;\n    return x.plus(y);\n  }\n\n  var xc = x.c.slice(),\n      xe = x.e,\n      yc = y.c,\n      ye = y.e; // Either zero?\n\n  if (!xc[0] || !yc[0]) {\n    // y is non-zero? x is non-zero? Or both are zero.\n    return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\n  } // Determine which is the bigger number. Prepend zeros to equalise exponents.\n\n\n  if (a = xe - ye) {\n    if (xlty = a < 0) {\n      a = -a;\n      t = xc;\n    } else {\n      ye = xe;\n      t = yc;\n    }\n\n    t.reverse();\n\n    for (b = a; b--;) {\n      t.push(0);\n    }\n\n    t.reverse();\n  } else {\n    // Exponents equal. Check digit by digit.\n    j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n\n    for (a = b = 0; b < j; b++) {\n      if (xc[b] != yc[b]) {\n        xlty = xc[b] < yc[b];\n        break;\n      }\n    }\n  } // x < y? Point xc to the array of the bigger number.\n\n\n  if (xlty) {\n    t = xc;\n    xc = yc;\n    yc = t;\n    y.s = -y.s;\n  }\n  /*\n   * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n   * needs to start at yc.length.\n   */\n\n\n  if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) {\n    xc[i++] = 0;\n  } // Subtract yc from xc.\n\n  for (b = i; j > a;) {\n    if (xc[--j] < yc[j]) {\n      for (i = j; i && !xc[--i];) {\n        xc[i] = 9;\n      }\n\n      --xc[i];\n      xc[j] += 10;\n    }\n\n    xc[j] -= yc[j];\n  } // Remove trailing zeros.\n\n\n  for (; xc[--b] === 0;) {\n    xc.pop();\n  } // Remove leading zeros and adjust exponent accordingly.\n\n\n  for (; xc[0] === 0;) {\n    xc.shift();\n    --ye;\n  }\n\n  if (!xc[0]) {\n    // n - n = +0\n    y.s = 1; // Result must be zero.\n\n    xc = [ye = 0];\n  }\n\n  y.c = xc;\n  y.e = ye;\n  return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\n\n\nP.mod = function (y) {\n  var ygtx,\n      Big = this.constructor,\n      x = new Big(this),\n      y = new Big(y),\n      a = x.s,\n      b = y.s;\n  if (!y.c[0]) throw Error(DIV_BY_ZERO);\n  x.s = y.s = 1;\n  ygtx = y.cmp(x) == 1;\n  x.s = a;\n  y.s = b;\n  if (ygtx) return new Big(x);\n  a = Big.DP;\n  b = Big.RM;\n  Big.DP = Big.RM = 0;\n  x = x.div(y);\n  Big.DP = a;\n  Big.RM = b;\n  return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\n\n\nP.plus = P.add = function (y) {\n  var t,\n      Big = this.constructor,\n      x = new Big(this),\n      y = new Big(y),\n      a = x.s,\n      b = y.s; // Signs differ?\n\n  if (a != b) {\n    y.s = -b;\n    return x.minus(y);\n  }\n\n  var xe = x.e,\n      xc = x.c,\n      ye = y.e,\n      yc = y.c; // Either zero? y is non-zero? x is non-zero? Or both are zero.\n\n  if (!xc[0] || !yc[0]) return yc[0] ? y : new Big(xc[0] ? x : a * 0);\n  xc = xc.slice(); // Prepend zeros to equalise exponents.\n  // Note: reverse faster than unshifts.\n\n  if (a = xe - ye) {\n    if (a > 0) {\n      ye = xe;\n      t = yc;\n    } else {\n      a = -a;\n      t = xc;\n    }\n\n    t.reverse();\n\n    for (; a--;) {\n      t.push(0);\n    }\n\n    t.reverse();\n  } // Point xc to the longer array.\n\n\n  if (xc.length - yc.length < 0) {\n    t = yc;\n    yc = xc;\n    xc = t;\n  }\n\n  a = yc.length; // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n\n  for (b = 0; a; xc[a] %= 10) {\n    b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\n  } // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n\n\n  if (b) {\n    xc.unshift(b);\n    ++ye;\n  } // Remove trailing zeros.\n\n\n  for (a = xc.length; xc[--a] === 0;) {\n    xc.pop();\n  }\n\n  y.c = xc;\n  y.e = ye;\n  return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\n\n\nP.pow = function (n) {\n  var Big = this.constructor,\n      x = new Big(this),\n      y = new Big(1),\n      one = new Big(1),\n      isneg = n < 0;\n  if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) throw Error(INVALID + 'exponent');\n  if (isneg) n = -n;\n\n  for (;;) {\n    if (n & 1) y = y.times(x);\n    n >>= 1;\n    if (!n) break;\n    x = x.times(x);\n  }\n\n  return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded using rounding mode rm\n * to a maximum of dp decimal places, or, if dp is negative, to an integer which is a\n * multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n * If rm is not specified, use Big.RM.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\n */\n\n\nP.round = function (dp, rm) {\n  var Big = this.constructor;\n  if (dp === UNDEFINED) dp = 0;else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) throw Error(INVALID_DP);\n  return round(new Big(this), dp, rm === UNDEFINED ? Big.RM : rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\n\n\nP.sqrt = function () {\n  var r,\n      c,\n      t,\n      Big = this.constructor,\n      x = new Big(this),\n      s = x.s,\n      e = x.e,\n      half = new Big(0.5); // Zero?\n\n  if (!x.c[0]) return new Big(x); // Negative?\n\n  if (s < 0) throw Error(NAME + 'No square root'); // Estimate.\n\n  s = Math.sqrt(x + ''); // Math.sqrt underflow/overflow?\n  // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n\n  if (s === 0 || s === 1 / 0) {\n    c = x.c.join('');\n    if (!(c.length + e & 1)) c += '0';\n    s = Math.sqrt(c);\n    e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n    r = new Big((s == 1 / 0 ? '1e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n  } else {\n    r = new Big(s);\n  }\n\n  e = r.e + (Big.DP += 4); // Newton-Raphson iteration.\n\n  do {\n    t = r;\n    r = half.times(t.plus(x.div(t)));\n  } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n\n  return round(r, Big.DP -= 4, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\n\n\nP.times = P.mul = function (y) {\n  var c,\n      Big = this.constructor,\n      x = new Big(this),\n      y = new Big(y),\n      xc = x.c,\n      yc = y.c,\n      a = xc.length,\n      b = yc.length,\n      i = x.e,\n      j = y.e; // Determine sign of result.\n\n  y.s = x.s == y.s ? 1 : -1; // Return signed 0 if either 0.\n\n  if (!xc[0] || !yc[0]) return new Big(y.s * 0); // Initialise exponent of result as x.e + y.e.\n\n  y.e = i + j; // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n\n  if (a < b) {\n    c = xc;\n    xc = yc;\n    yc = c;\n    j = a;\n    a = b;\n    b = j;\n  } // Initialise coefficient array of result with zeros.\n\n\n  for (c = new Array(j = a + b); j--;) {\n    c[j] = 0;\n  } // Multiply.\n  // i is initially xc.length.\n\n\n  for (i = b; i--;) {\n    b = 0; // a is yc.length.\n\n    for (j = a + i; j > i;) {\n      // Current sum of products at this digit position, plus carry.\n      b = c[j] + yc[i] * xc[j - i - 1] + b;\n      c[j--] = b % 10; // carry\n\n      b = b / 10 | 0;\n    }\n\n    c[j] = (c[j] + b) % 10;\n  } // Increment result exponent if there is a final carry, otherwise remove leading zero.\n\n\n  if (b) ++y.e;else c.shift(); // Remove trailing zeros.\n\n  for (i = c.length; !c[--i];) {\n    c.pop();\n  }\n\n  y.c = c;\n  return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n */\n\n\nP.toExponential = function (dp) {\n  return stringify(this, 1, dp, dp);\n};\n/*\n * Return a string representing the value of this Big in normal notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\n\n\nP.toFixed = function (dp) {\n  return stringify(this, 2, dp, this.e + dp);\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * Big.RM. Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Integer, 1 to MAX_DP inclusive.\n */\n\n\nP.toPrecision = function (sd) {\n  return stringify(this, 3, sd, sd - 1);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\n\n\nP.toString = function () {\n  return stringify(this);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\n\n\nP.valueOf = P.toJSON = function () {\n  return stringify(this, 4);\n}; // Export\n\n\nexport var Big = _Big_();\nexport default Big;","import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.is-array\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.reverse\";\nimport \"core-js/modules/es.array.slice\";\nimport \"core-js/modules/es.array-buffer.slice\";\nimport \"core-js/modules/es.date.to-string\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/es.string.trim\";\nimport \"core-js/modules/es.string.sub\";\nimport \"core-js/modules/es.typed-array.uint8-array\";\nimport \"core-js/modules/es.typed-array.copy-within\";\nimport \"core-js/modules/es.typed-array.every\";\nimport \"core-js/modules/es.typed-array.fill\";\nimport \"core-js/modules/es.typed-array.filter\";\nimport \"core-js/modules/es.typed-array.find\";\nimport \"core-js/modules/es.typed-array.find-index\";\nimport \"core-js/modules/es.typed-array.for-each\";\nimport \"core-js/modules/es.typed-array.from\";\nimport \"core-js/modules/es.typed-array.includes\";\nimport \"core-js/modules/es.typed-array.index-of\";\nimport \"core-js/modules/es.typed-array.iterator\";\nimport \"core-js/modules/es.typed-array.join\";\nimport \"core-js/modules/es.typed-array.last-index-of\";\nimport \"core-js/modules/es.typed-array.map\";\nimport \"core-js/modules/es.typed-array.reduce\";\nimport \"core-js/modules/es.typed-array.reduce-right\";\nimport \"core-js/modules/es.typed-array.reverse\";\nimport \"core-js/modules/es.typed-array.set\";\nimport \"core-js/modules/es.typed-array.slice\";\nimport \"core-js/modules/es.typed-array.some\";\nimport \"core-js/modules/es.typed-array.sort\";\nimport \"core-js/modules/es.typed-array.subarray\";\nimport \"core-js/modules/es.typed-array.to-locale-string\";\nimport \"core-js/modules/es.typed-array.to-string\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport Decimal from \"./lib/big\";\nexport default Decimal;\nexport var get_Zero = new Decimal(0);\nexport var get_One = new Decimal(1);\nexport var get_MinusOne = new Decimal(-1);\nexport var get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport var get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n  return x.cmp(y);\n}\nexport function equals(x, y) {\n  return !x.cmp(y);\n}\nexport function abs(x) {\n  return x.abs();\n}\nexport function round(x) {\n  var digits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return x.round(digits, 2\n  /* ROUND_HALF_EVEN */\n  );\n}\nexport function truncate(x) {\n  return x.round(0, 0\n  /* ROUND_DOWN */\n  );\n}\nexport function ceiling(x) {\n  return x.round(0, x.cmp(0) >= 0 ? 3\n  /* ROUND_UP */\n  : 0\n  /* ROUND_DOWN */\n  );\n}\nexport function floor(x) {\n  return x.round(0, x.cmp(0) >= 0 ? 0\n  /* ROUND_DOWN */\n  : 3\n  /* ROUND_UP */\n  );\n}\nexport function pow(x, n) {\n  return x.pow(n);\n}\nexport function sqrt(x) {\n  return x.sqrt();\n}\nexport function op_Addition(x, y) {\n  return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n  return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n  return x.mul(y);\n}\nexport function op_Division(x, y) {\n  return x.div(y);\n}\nexport function op_Modulus(x, y) {\n  return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n  var x2 = new Decimal(x);\n  x2.s = -x2.s || 0;\n  return x2;\n}\nexport var add = op_Addition;\nexport var subtract = op_Subtraction;\nexport var multiply = op_Multiply;\nexport var divide = op_Division;\nexport var remainder = op_Modulus;\nexport var negate = op_UnaryNegation;\nexport function toString(x) {\n  return x.toString();\n}\nexport function tryParse(str) {\n  try {\n    return [true, new Decimal(str.trim())];\n  } catch (_a) {\n    return [false, get_Zero];\n  }\n}\nexport function parse(str) {\n  var _tryParse = tryParse(str),\n      _tryParse2 = _slicedToArray(_tryParse, 2),\n      ok = _tryParse2[0],\n      value = _tryParse2[1];\n\n  if (ok) {\n    return value;\n  } else {\n    throw new Error(\"Input string was not in a correct format.\");\n  }\n}\nexport function toNumber(x) {\n  return +x;\n}\n\nfunction decimalToHex(dec, bitSize) {\n  var hex = new Uint8Array(bitSize / 4 | 0);\n  var hexCount = 1;\n\n  for (var d = 0; d < dec.length; d++) {\n    var value = dec[d];\n\n    for (var i = 0; i < hexCount; i++) {\n      var digit = hex[i] * 10 + value | 0;\n      hex[i] = digit & 0xF;\n      value = digit >> 4;\n    }\n\n    if (value !== 0) {\n      hex[hexCount++] = value;\n    }\n  }\n\n  return hex.slice(0, hexCount); // digits in reverse order\n}\n\nfunction hexToDecimal(hex, bitSize) {\n  var dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n  var decCount = 1;\n\n  for (var d = hex.length - 1; d >= 0; d--) {\n    var carry = hex[d];\n\n    for (var i = 0; i < decCount; i++) {\n      var val = dec[i] * 16 + carry | 0;\n      dec[i] = val % 10 | 0;\n      carry = val / 10 | 0;\n    }\n\n    while (carry > 0) {\n      dec[decCount++] = carry % 10 | 0;\n      carry = carry / 10 | 0;\n    }\n  }\n\n  return dec.slice(0, decCount); // digits in reverse order\n}\n\nfunction setInt32Bits(hexDigits, bits, offset) {\n  for (var i = 0; i < 8; i++) {\n    hexDigits[offset + i] = bits >> i * 4 & 0xF;\n  }\n}\n\nfunction getInt32Bits(hexDigits, offset) {\n  var bits = 0;\n\n  for (var i = 0; i < 8; i++) {\n    bits = bits | hexDigits[offset + i] << i * 4;\n  }\n\n  return bits;\n}\n\nexport function fromIntArray(bits) {\n  return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n  var isNegative = signExp < 0;\n  var scale = signExp >> 16 & 0x7F;\n  return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n  var bitSize = 96;\n  var hexDigits = new Uint8Array(bitSize / 4);\n  setInt32Bits(hexDigits, low, 0);\n  setInt32Bits(hexDigits, mid, 8);\n  setInt32Bits(hexDigits, high, 16);\n  var decDigits = hexToDecimal(hexDigits, bitSize);\n  scale = scale & 0x7F;\n  var big = new Decimal(0);\n  big.c = Array.from(decDigits.reverse());\n  big.e = decDigits.length - scale - 1;\n  big.s = isNegative ? -1 : 1;\n  var d = new Decimal(big);\n  return d;\n}\nexport function getBits(d) {\n  var bitSize = 96;\n  var decDigits = Uint8Array.from(d.c);\n  var hexDigits = decimalToHex(decDigits, bitSize);\n  var low = getInt32Bits(hexDigits, 0);\n  var mid = getInt32Bits(hexDigits, 8);\n  var high = getInt32Bits(hexDigits, 16);\n  var decStr = d.toString();\n  var dotPos = decStr.indexOf(\".\");\n  var scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n  var signExp = (scale & 0x7F) << 16 | (d.s < 0 ? 0x80000000 : 0);\n  return [low, mid, high, signExp];\n}\nexport function makeRangeStepFunction(step, last) {\n  var stepComparedWithZero = step.cmp(get_Zero);\n\n  if (stepComparedWithZero === 0) {\n    throw new Error(\"The step of a range cannot be zero\");\n  }\n\n  var stepGreaterThanZero = stepComparedWithZero > 0;\n  return function (x) {\n    var comparedWithLast = x.cmp(last);\n\n    if (stepGreaterThanZero && comparedWithLast <= 0 || !stepGreaterThanZero && comparedWithLast >= 0) {\n      return [x, op_Addition(x, step)];\n    } else {\n      return null;\n    }\n  };\n}","import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.is-array\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.date.to-string\";\nimport \"core-js/modules/es.number.constructor\";\nimport \"core-js/modules/es.number.is-nan\";\nimport \"core-js/modules/es.number.parse-int\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/es.string.replace\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nexport var NumberStyles;\n\n(function (NumberStyles) {\n  // None = 0x00000000,\n  // AllowLeadingWhite = 0x00000001,\n  // AllowTrailingWhite = 0x00000002,\n  // AllowLeadingSign = 0x00000004,\n  // AllowTrailingSign = 0x00000008,\n  // AllowParentheses = 0x00000010,\n  // AllowDecimalPoint = 0x00000020,\n  // AllowThousands = 0x00000040,\n  // AllowExponent = 0x00000080,\n  // AllowCurrencySymbol = 0x00000100,\n  NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\"; // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n  // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n  // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n  //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n  // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n  //         AllowDecimalPoint | AllowExponent,\n  // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n  //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n  // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n  //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\n\nfunction validResponse(regexMatch, radix) {\n  var _regexMatch = _slicedToArray(regexMatch, 4),\n      _all = _regexMatch[0],\n      sign = _regexMatch[1],\n      prefix = _regexMatch[2],\n      digits = _regexMatch[3];\n\n  return {\n    sign: sign || \"\",\n    prefix: prefix || \"\",\n    digits: digits,\n    radix: radix\n  };\n}\n\nfunction getRange(unsigned, bitsize) {\n  switch (bitsize) {\n    case 8:\n      return unsigned ? [0, 255] : [-128, 127];\n\n    case 16:\n      return unsigned ? [0, 65535] : [-32768, 32767];\n\n    case 32:\n      return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n\n    default:\n      throw new Error(\"Invalid bit size.\");\n  }\n}\n\nfunction getInvalidDigits(radix) {\n  switch (radix) {\n    case 2:\n      return /[^0-1]/;\n\n    case 8:\n      return /[^0-7]/;\n\n    case 10:\n      return /[^0-9]/;\n\n    case 16:\n      return /[^0-9a-fA-F]/;\n\n    default:\n      throw new Error(\"Invalid Base.\");\n  }\n}\n\nfunction getRadix(prefix, style) {\n  if (style & NumberStyles.AllowHexSpecifier) {\n    return 16;\n  } else {\n    switch (prefix) {\n      case \"0b\":\n      case \"0B\":\n        return 2;\n\n      case \"0o\":\n      case \"0O\":\n        return 8;\n\n      case \"0x\":\n      case \"0X\":\n        return 16;\n\n      default:\n        return 10;\n    }\n  }\n}\n\nexport function isValid(str, style, radix) {\n  var integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n  var res = integerRegex.exec(str.replace(/_/g, \"\"));\n\n  if (res != null) {\n    var _res = _slicedToArray(res, 4),\n        _all = _res[0],\n        sign = _res[1],\n        prefix = _res[2],\n        digits = _res[3];\n\n    radix = radix || getRadix(prefix, style);\n    var invalidDigits = getInvalidDigits(radix);\n\n    if (!invalidDigits.test(digits)) {\n      return validResponse(res, radix);\n    }\n  }\n\n  return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n  var res = isValid(str, style, radix);\n\n  if (res != null) {\n    var v = Number.parseInt(res.sign + res.digits, res.radix);\n\n    if (!Number.isNaN(v)) {\n      var _getRange = getRange(true, bitsize),\n          _getRange2 = _slicedToArray(_getRange, 2),\n          umin = _getRange2[0],\n          umax = _getRange2[1];\n\n      if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n        v = v << 32 - bitsize >> 32 - bitsize;\n      }\n\n      var _getRange3 = getRange(unsigned, bitsize),\n          _getRange4 = _slicedToArray(_getRange3, 2),\n          min = _getRange4[0],\n          max = _getRange4[1];\n\n      if (v >= min && v <= max) {\n        return v;\n      }\n    }\n  }\n\n  throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize) {\n  try {\n    var v = parse(str, style, unsigned, bitsize);\n    return [true, v];\n  } catch (_a) {// supress error\n  }\n\n  return [false, 0];\n}\nexport function op_UnaryNegation_Int8(x) {\n  return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n  return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n  return x === -2147483648 ? x : -x;\n}","import \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array-buffer.slice\";\nimport \"core-js/modules/es.date.to-json\";\nimport \"core-js/modules/es.date.to-string\";\nimport \"core-js/modules/es.object.define-property\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.parse-int\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.typed-array.uint8-array\";\nimport \"core-js/modules/es.typed-array.copy-within\";\nimport \"core-js/modules/es.typed-array.every\";\nimport \"core-js/modules/es.typed-array.fill\";\nimport \"core-js/modules/es.typed-array.filter\";\nimport \"core-js/modules/es.typed-array.find\";\nimport \"core-js/modules/es.typed-array.find-index\";\nimport \"core-js/modules/es.typed-array.for-each\";\nimport \"core-js/modules/es.typed-array.includes\";\nimport \"core-js/modules/es.typed-array.index-of\";\nimport \"core-js/modules/es.typed-array.iterator\";\nimport \"core-js/modules/es.typed-array.join\";\nimport \"core-js/modules/es.typed-array.last-index-of\";\nimport \"core-js/modules/es.typed-array.map\";\nimport \"core-js/modules/es.typed-array.reduce\";\nimport \"core-js/modules/es.typed-array.reduce-right\";\nimport \"core-js/modules/es.typed-array.reverse\";\nimport \"core-js/modules/es.typed-array.set\";\nimport \"core-js/modules/es.typed-array.slice\";\nimport \"core-js/modules/es.typed-array.some\";\nimport \"core-js/modules/es.typed-array.sort\";\nimport \"core-js/modules/es.typed-array.subarray\";\nimport \"core-js/modules/es.typed-array.to-locale-string\";\nimport \"core-js/modules/es.typed-array.to-string\";\nimport \"core-js/modules/web.url.to-json\";\n// Adapted from: https://github.com/dcodeIO/long.js/blob/master/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\nexport default Long;\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\n\nvar wasm = null;\n\ntry {\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;\n} catch (e) {} // no wasm support :(\n\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\n\n\nexport function Long(low, high, unsigned) {\n  /**\n   * The low 32 bits as a signed value.\n   * @type {number}\n   */\n  this.low = low | 0;\n  /**\n   * The high 32 bits as a signed value.\n   * @type {number}\n   */\n\n  this.high = high | 0;\n  /**\n   * Whether unsigned or not.\n   * @type {boolean}\n   */\n\n  this.unsigned = !!unsigned;\n}\n\nLong.prototype.GetHashCode = function () {\n  var h1 = this.unsigned ? 1 : 0;\n  h1 = (h1 << 5) + h1 ^ this.high;\n  h1 = (h1 << 5) + h1 ^ this.low;\n  return h1;\n};\n\nLong.prototype.Equals = function (x) {\n  return equals(this, x);\n};\n\nLong.prototype.CompareTo = function (x) {\n  return compare(this, x);\n};\n\nLong.prototype.toString = function (radix) {\n  return toString(this, radix);\n};\n\nLong.prototype.toJSON = function () {\n  return toString(this);\n}; // The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\n\n\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", {\n  value: true\n});\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\n\nexport function isLong(obj) {\n  return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\n// Long.isLong = isLong;\n\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\n\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\n\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\n\nexport function fromInt(value, unsigned) {\n  var obj, cachedObj, cache;\n\n  if (unsigned) {\n    value >>>= 0;\n\n    if (cache = 0 <= value && value < 256) {\n      cachedObj = UINT_CACHE[value];\n      if (cachedObj) return cachedObj;\n    }\n\n    obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n    if (cache) UINT_CACHE[value] = obj;\n    return obj;\n  } else {\n    value |= 0;\n\n    if (cache = -128 <= value && value < 128) {\n      cachedObj = INT_CACHE[value];\n      if (cachedObj) return cachedObj;\n    }\n\n    obj = fromBits(value, value < 0 ? -1 : 0, false);\n    if (cache) INT_CACHE[value] = obj;\n    return obj;\n  }\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromInt = fromInt;\n\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\n\nexport function fromNumber(value, unsigned) {\n  if (isNaN(value)) return unsigned ? UZERO : ZERO;\n\n  if (unsigned) {\n    if (value < 0) return UZERO;\n    if (value >= TWO_PWR_64_DBL) return MAX_UNSIGNED_VALUE;\n  } else {\n    if (value <= -TWO_PWR_63_DBL) return MIN_VALUE;\n    if (value + 1 >= TWO_PWR_63_DBL) return MAX_VALUE;\n  }\n\n  if (value < 0) return negate(fromNumber(-value, unsigned));\n  return fromBits(value % TWO_PWR_32_DBL | 0, value / TWO_PWR_32_DBL | 0, unsigned);\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromNumber = fromNumber;\n\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\n\nexport function fromBits(lowBits, highBits, unsigned) {\n  return new Long(lowBits, highBits, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromBits = fromBits;\n\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\n\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\n\nexport function fromString(str, unsigned, radix) {\n  if (str.length === 0) throw Error('empty string');\n  if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\") return ZERO;\n\n  if (typeof unsigned === 'number') {\n    // For goog.math.long compatibility\n    radix = unsigned, unsigned = false;\n  } else {\n    unsigned = !!unsigned;\n  }\n\n  radix = radix || 10;\n  if (radix < 2 || 36 < radix) throw RangeError('radix');\n  var p = str.indexOf('-');\n  if (p > 0) throw Error('interior hyphen');else if (p === 0) {\n    return negate(fromString(str.substring(1), unsigned, radix));\n  } // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n\n  var radixToPower = fromNumber(pow_dbl(radix, 8));\n  var result = ZERO;\n\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i),\n        value = parseInt(str.substring(i, i + size), radix);\n\n    if (size < 8) {\n      var power = fromNumber(pow_dbl(radix, size));\n      result = add(multiply(result, power), fromNumber(value));\n    } else {\n      result = multiply(result, radixToPower);\n      result = add(result, fromNumber(value));\n    }\n  }\n\n  result.unsigned = unsigned;\n  return result;\n}\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromString = fromString;\n\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\n\nexport function fromValue(val, unsigned) {\n  if (typeof val === 'number') return fromNumber(val, unsigned);\n  if (typeof val === 'string') return fromString(val, unsigned); // Throws for non-objects, converts non-instanceof Long:\n\n  return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\n// Long.fromValue = fromValue;\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n\n/**\n * @type {number}\n * @const\n * @inner\n */\n\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\n\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\n\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\n\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\n\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\n\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\n\nexport var ZERO = fromInt(0);\n/**\n * Signed zero.\n * @type {!Long}\n */\n// Long.ZERO = ZERO;\n\n/**\n * @type {!Long}\n * @inner\n */\n\nexport var UZERO = fromInt(0, true);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\n// Long.UZERO = UZERO;\n\n/**\n * @type {!Long}\n * @inner\n */\n\nexport var ONE = fromInt(1);\n/**\n * Signed one.\n * @type {!Long}\n */\n// Long.ONE = ONE;\n\n/**\n * @type {!Long}\n * @inner\n */\n\nexport var UONE = fromInt(1, true);\n/**\n * Unsigned one.\n * @type {!Long}\n */\n// Long.UONE = UONE;\n\n/**\n * @type {!Long}\n * @inner\n */\n\nexport var NEG_ONE = fromInt(-1);\n/**\n * Signed negative one.\n * @type {!Long}\n */\n// Long.NEG_ONE = NEG_ONE;\n\n/**\n * @type {!Long}\n * @inner\n */\n\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\n// Long.MAX_VALUE = MAX_VALUE;\n\n/**\n * @type {!Long}\n * @inner\n */\n\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\n// Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n\n/**\n * @type {!Long}\n * @inner\n */\n\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\n// Long.MIN_VALUE = MIN_VALUE;\n\n/**\n * @alias Long.prototype\n * @inner\n */\n// var LongPrototype = Long.prototype;\n\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\n\nexport function toInt($this) {\n  return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\n\nexport function toNumber($this) {\n  if ($this.unsigned) return ($this.high >>> 0) * TWO_PWR_32_DBL + ($this.low >>> 0);\n  return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\n\nexport function toString($this, radix) {\n  radix = radix || 10;\n  if (radix < 2 || 36 < radix) throw RangeError('radix');\n  if (isZero($this)) return '0';\n\n  if (isNegative($this)) {\n    // Unsigned Longs are never negative\n    if (equals($this, MIN_VALUE)) {\n      // We need to change the Long value before it can be negated, so we remove\n      // the bottom-most digit in this base and then recurse to do the rest.\n      var radixLong = fromNumber(radix),\n          div = divide($this, radixLong),\n          rem1 = subtract(multiply(div, radixLong), $this);\n      return toString(div, radix) + toInt(rem1).toString(radix);\n    } else return '-' + toString(negate($this), radix);\n  } // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n\n\n  var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned),\n      rem = $this;\n  var result = '';\n\n  while (true) {\n    var remDiv = divide(rem, radixToPower),\n        intval = toInt(subtract(rem, multiply(remDiv, radixToPower))) >>> 0,\n        digits = intval.toString(radix);\n    rem = remDiv;\n    if (isZero(rem)) return digits + result;else {\n      while (digits.length < 6) {\n        digits = '0' + digits;\n      }\n\n      result = '' + digits + result;\n    }\n  }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\n\nexport function getHighBits($this) {\n  return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\n\nexport function getHighBitsUnsigned($this) {\n  return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\n\nexport function getLowBits($this) {\n  return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\n\nexport function getLowBitsUnsigned($this) {\n  return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\n\nexport function getNumBitsAbs($this) {\n  if (isNegative($this)) // Unsigned Longs are never negative\n    return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(negate($this));\n  var val = $this.high != 0 ? $this.high : $this.low;\n\n  for (var bit = 31; bit > 0; bit--) {\n    if ((val & 1 << bit) != 0) break;\n  }\n\n  return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\n\nexport function isZero($this) {\n  return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\n// LongPrototype.eqz = LongPrototype.isZero;\n\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\n\nexport function isNegative($this) {\n  return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @this {!Long}\n * @returns {boolean}\n */\n\nexport function isPositive($this) {\n  return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\n\nexport function isOdd($this) {\n  return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\n\nexport function isEven($this) {\n  return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n\nexport function equals($this, other) {\n  if (!isLong(other)) other = fromValue(other);\n  if ($this.unsigned !== other.unsigned && $this.high >>> 31 === 1 && other.high >>> 31 === 1) return false;\n  return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.eq = LongPrototype.equals;\n\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n\nexport function notEquals($this, other) {\n  return !equals($this,\n  /* validates */\n  other);\n}\n;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.neq = LongPrototype.notEquals;\n\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ne = LongPrototype.notEquals;\n\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n\nexport function lessThan($this, other) {\n  return compare($this,\n  /* validates */\n  other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lt = LongPrototype.lessThan;\n\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n\nexport function lessThanOrEqual($this, other) {\n  return compare($this,\n  /* validates */\n  other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lte = LongPrototype.lessThanOrEqual;\n\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.le = LongPrototype.lessThanOrEqual;\n\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n\nexport function greaterThan($this, other) {\n  return compare($this,\n  /* validates */\n  other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gt = LongPrototype.greaterThan;\n\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n\nexport function greaterThanOrEqual($this, other) {\n  return compare($this,\n  /* validates */\n  other) >= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n\nexport function compare($this, other) {\n  if (!isLong(other)) other = fromValue(other);\n  if (equals($this, other)) return 0;\n  var thisNeg = isNegative($this),\n      otherNeg = isNegative(other);\n  if (thisNeg && !otherNeg) return -1;\n  if (!thisNeg && otherNeg) return 1; // At this point the sign bits are the same\n\n  if (!$this.unsigned) return isNegative(subtract($this, other)) ? -1 : 1; // Both are positive if at least one is unsigned\n\n  return other.high >>> 0 > $this.high >>> 0 || other.high === $this.high && other.low >>> 0 > $this.low >>> 0 ? -1 : 1;\n}\n;\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n// LongPrototype.comp = LongPrototype.compare;\n\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\n\nexport function negate($this) {\n  if (!$this.unsigned && equals($this, MIN_VALUE)) return MIN_VALUE;\n  return add(not($this), ONE);\n}\n;\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\n// LongPrototype.neg = LongPrototype.negate;\n\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\n\nexport function add($this, addend) {\n  if (!isLong(addend)) addend = fromValue(addend); // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n  var a48 = $this.high >>> 16;\n  var a32 = $this.high & 0xFFFF;\n  var a16 = $this.low >>> 16;\n  var a00 = $this.low & 0xFFFF;\n  var b48 = addend.high >>> 16;\n  var b32 = addend.high & 0xFFFF;\n  var b16 = addend.low >>> 16;\n  var b00 = addend.low & 0xFFFF;\n  var c48 = 0,\n      c32 = 0,\n      c16 = 0,\n      c00 = 0;\n  c00 += a00 + b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 + b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 + b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 + b48;\n  c48 &= 0xFFFF;\n  return fromBits(c16 << 16 | c00, c48 << 16 | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n\nexport function subtract($this, subtrahend) {\n  if (!isLong(subtrahend)) subtrahend = fromValue(subtrahend);\n  return add($this, negate(subtrahend));\n}\n;\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n// LongPrototype.sub = LongPrototype.subtract;\n\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n\nexport function multiply($this, multiplier) {\n  if (isZero($this)) return $this.unsigned ? UZERO : ZERO;\n  if (!isLong(multiplier)) multiplier = fromValue(multiplier); // use wasm support if present\n\n  if (wasm) {\n    var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n    return fromBits(low, wasm.get_high(), $this.unsigned);\n  }\n\n  if (isZero(multiplier)) return $this.unsigned ? UZERO : ZERO;\n  if (equals($this, MIN_VALUE)) return isOdd(multiplier) ? MIN_VALUE : ZERO;\n  if (equals(multiplier, MIN_VALUE)) return isOdd($this) ? MIN_VALUE : ZERO;\n\n  if (isNegative($this)) {\n    if (isNegative(multiplier)) return multiply(negate($this), negate(multiplier));else return negate(multiply(negate($this), multiplier));\n  } else if (isNegative(multiplier)) return negate(multiply($this, negate(multiplier))); // If both longs are small, use float multiplication\n\n\n  if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24)) return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned); // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n\n  var a48 = $this.high >>> 16;\n  var a32 = $this.high & 0xFFFF;\n  var a16 = $this.low >>> 16;\n  var a00 = $this.low & 0xFFFF;\n  var b48 = multiplier.high >>> 16;\n  var b32 = multiplier.high & 0xFFFF;\n  var b16 = multiplier.low >>> 16;\n  var b00 = multiplier.low & 0xFFFF;\n  var c48 = 0,\n      c32 = 0,\n      c16 = 0,\n      c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xFFFF;\n  return fromBits(c16 << 16 | c00, c48 << 16 | c32, $this.unsigned);\n}\n;\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n// LongPrototype.mul = LongPrototype.multiply;\n\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n\nexport function divide($this, divisor) {\n  if (!isLong(divisor)) divisor = fromValue(divisor);\n  if (isZero(divisor)) throw Error('division by zero'); // use wasm support if present\n\n  if (wasm) {\n    // guard against signed division overflow: the largest\n    // negative number / -1 would be 1 larger than the largest\n    // positive number, due to two's complement.\n    if (!$this.unsigned && $this.high === -0x80000000 && divisor.low === -1 && divisor.high === -1) {\n      // be consistent with non-wasm code path\n      return $this;\n    }\n\n    var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n    return fromBits(low, wasm.get_high(), $this.unsigned);\n  }\n\n  if (isZero($this)) return $this.unsigned ? UZERO : ZERO;\n  var approx, rem, res;\n\n  if (!$this.unsigned) {\n    // This section is only relevant for signed longs and is derived from the\n    // closure library as a whole.\n    if (equals($this, MIN_VALUE)) {\n      if (equals(divisor, ONE) || equals(divisor, NEG_ONE)) return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n      else if (equals(divisor, MIN_VALUE)) return ONE;else {\n          // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n          var halfThis = shiftRight($this, 1);\n          approx = shiftLeft(divide(halfThis, divisor), 1);\n\n          if (equals(approx, ZERO)) {\n            return isNegative(divisor) ? ONE : NEG_ONE;\n          } else {\n            rem = subtract($this, multiply(divisor, approx));\n            res = add(approx, divide(rem, divisor));\n            return res;\n          }\n        }\n    } else if (equals(divisor, MIN_VALUE)) return $this.unsigned ? UZERO : ZERO;\n\n    if (isNegative($this)) {\n      if (isNegative(divisor)) return divide(negate($this), negate(divisor));\n      return negate(divide(negate($this), divisor));\n    } else if (isNegative(divisor)) return negate(divide($this, negate(divisor)));\n\n    res = ZERO;\n  } else {\n    // The algorithm below has not been made for unsigned longs. It's therefore\n    // required to take special care of the MSB prior to running it.\n    if (!divisor.unsigned) divisor = toUnsigned(divisor);\n    if (greaterThan(divisor, $this)) return UZERO;\n    if (greaterThan(divisor, shiftRightUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n      return UONE;\n    res = UZERO;\n  } // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n\n\n  rem = $this;\n\n  while (greaterThanOrEqual(rem, divisor)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor))); // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2),\n        delta = log2 <= 48 ? 1 : pow_dbl(2, log2 - 48),\n        // Decrease the approximation until it is smaller than the remainder.  Note\n    // that if it is too large, the product overflows and is negative.\n    approxRes = fromNumber(approx),\n        approxRem = multiply(approxRes, divisor);\n\n    while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n      approx -= delta;\n      approxRes = fromNumber(approx, $this.unsigned);\n      approxRem = multiply(approxRes, divisor);\n    } // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n\n\n    if (isZero(approxRes)) approxRes = ONE;\n    res = add(res, approxRes);\n    rem = subtract(rem, approxRem);\n  }\n\n  return res;\n}\n;\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n// LongPrototype.div = LongPrototype.divide;\n\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n\nexport function modulo($this, divisor) {\n  if (!isLong(divisor)) divisor = fromValue(divisor); // use wasm support if present\n\n  if (wasm) {\n    var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n    return fromBits(low, wasm.get_high(), $this.unsigned);\n  }\n\n  return subtract($this, multiply(divide($this, divisor), divisor));\n}\n;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.mod = LongPrototype.modulo;\n\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.rem = LongPrototype.modulo;\n\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\n\nexport function not($this) {\n  return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\n\nexport function and($this, other) {\n  if (!isLong(other)) other = fromValue(other);\n  return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\n\nexport function or($this, other) {\n  if (!isLong(other)) other = fromValue(other);\n  return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\n\nexport function xor($this, other) {\n  if (!isLong(other)) other = fromValue(other);\n  return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n\nexport function shiftLeft($this, numBits) {\n  if (isLong(numBits)) numBits = toInt(numBits);\n  if ((numBits &= 63) === 0) return $this;else if (numBits < 32) return fromBits($this.low << numBits, $this.high << numBits | $this.low >>> 32 - numBits, $this.unsigned);else return fromBits(0, $this.low << numBits - 32, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shl = LongPrototype.shiftLeft;\n\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n\nexport function shiftRight($this, numBits) {\n  if (isLong(numBits)) numBits = toInt(numBits);\n  if ((numBits &= 63) === 0) return $this;else if (numBits < 32) return fromBits($this.low >>> numBits | $this.high << 32 - numBits, $this.high >> numBits, $this.unsigned);else return fromBits($this.high >> numBits - 32, $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr = LongPrototype.shiftRight;\n\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n\nexport function shiftRightUnsigned($this, numBits) {\n  if (isLong(numBits)) numBits = toInt(numBits);\n  numBits &= 63;\n  if (numBits === 0) return $this;else {\n    var high = $this.high;\n\n    if (numBits < 32) {\n      var low = $this.low;\n      return fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits, $this.unsigned);\n    } else if (numBits === 32) return fromBits(high, 0, $this.unsigned);else return fromBits(high >>> numBits - 32, 0, $this.unsigned);\n  }\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n\nexport var rotateLeft = function rotateLeft(numBits) {\n  var b;\n  if (isLong(numBits)) numBits = numBits.toInt();\n  if ((numBits &= 63) === 0) return this;\n  if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n\n  if (numBits < 32) {\n    b = 32 - numBits;\n    return fromBits(this.low << numBits | this.high >>> b, this.high << numBits | this.low >>> b, this.unsigned);\n  }\n\n  numBits -= 32;\n  b = 32 - numBits;\n  return fromBits(this.high << numBits | this.low >>> b, this.low << numBits | this.high >>> b, this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotl = LongPrototype.rotateLeft;\n\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n\nexport var rotateRight = function rotateRight(numBits) {\n  var b;\n  if (isLong(numBits)) numBits = numBits.toInt();\n  if ((numBits &= 63) === 0) return this;\n  if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n\n  if (numBits < 32) {\n    b = 32 - numBits;\n    return fromBits(this.high << b | this.low >>> numBits, this.low << b | this.high >>> numBits, this.unsigned);\n  }\n\n  numBits -= 32;\n  b = 32 - numBits;\n  return fromBits(this.low << b | this.high >>> numBits, this.high << b | this.low >>> numBits, this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotr = LongPrototype.rotateRight;\n\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\n\nexport function toSigned($this) {\n  if (!$this.unsigned) return $this;\n  return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\n\nexport function toUnsigned($this) {\n  if ($this.unsigned) return $this;\n  return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\n\nexport function toBytes($this, le) {\n  return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\n\nexport function toBytesLE($this) {\n  var hi = $this.high,\n      lo = $this.low;\n  return [lo & 0xff, lo >>> 8 & 0xff, lo >>> 16 & 0xff, lo >>> 24, hi & 0xff, hi >>> 8 & 0xff, hi >>> 16 & 0xff, hi >>> 24];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\n\nexport function toBytesBE($this) {\n  var hi = $this.high,\n      lo = $this.low;\n  return [hi >>> 24, hi >>> 16 & 0xff, hi >>> 8 & 0xff, hi & 0xff, lo >>> 24, lo >>> 16 & 0xff, lo >>> 8 & 0xff, lo & 0xff];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\n\nexport function fromBytes(bytes, unsigned, le) {\n  return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\n\nexport function fromBytesLE(bytes, unsigned) {\n  return new Long(bytes[0] | bytes[1] << 8 | bytes[2] << 16 | bytes[3] << 24, bytes[4] | bytes[5] << 8 | bytes[6] << 16 | bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\n\nexport function fromBytesBE(bytes, unsigned) {\n  return new Long(bytes[4] << 24 | bytes[5] << 16 | bytes[6] << 8 | bytes[7], bytes[0] << 24 | bytes[1] << 16 | bytes[2] << 8 | bytes[3], unsigned);\n}\n;","import \"core-js/modules/es.string.pad-start\";\nimport { isValid } from \"./Int32\";\nimport * as Long from \"./lib/long\";\nexport default Long.Long;\nexport var get_Zero = Long.ZERO;\nexport var get_One = Long.ONE;\nexport var op_Addition = Long.add;\nexport var op_Subtraction = Long.subtract;\nexport var op_Multiply = Long.multiply;\nexport var op_Division = Long.divide;\nexport var op_Modulus = Long.modulo;\nexport var op_UnaryNegation = Long.negate;\nexport var op_LeftShift = Long.shiftLeft;\nexport var op_RightShift = Long.shiftRight;\nexport var op_RightShiftUnsigned = Long.shiftRightUnsigned;\nexport var op_BitwiseAnd = Long.and;\nexport var op_BitwiseOr = Long.or;\nexport var op_ExclusiveOr = Long.xor;\nexport var op_LogicalNot = Long.not;\nexport var op_LessThan = Long.lessThan;\nexport var op_LessThanOrEqual = Long.lessThanOrEqual;\nexport var op_GreaterThan = Long.greaterThan;\nexport var op_GreaterThanOrEqual = Long.greaterThanOrEqual;\nexport var op_Equality = Long.equals;\nexport var op_Inequality = Long.notEquals;\nexport var equals = Long.equals;\nexport var compare = Long.compare;\nexport var fromInt = Long.fromInt;\nexport var fromBits = Long.fromBits;\nexport var fromBytes = Long.fromBytes;\nexport var fromNumber = Long.fromNumber;\nexport var fromString = Long.fromString;\nexport var fromValue = Long.fromValue;\nexport var toInt = Long.toInt;\nexport var toBytes = Long.toBytes;\nexport var toNumber = Long.toNumber;\nexport var toString = Long.toString;\nexport var getLowBits = Long.getLowBits;\nexport var getHighBits = Long.getHighBits;\nexport var getLowBitsUnsigned = Long.getLowBitsUnsigned;\nexport var getHighBitsUnsigned = Long.getHighBitsUnsigned;\n\nfunction getMaxValue(unsigned, radix, isNegative) {\n  switch (radix) {\n    case 2:\n      return unsigned ? \"1111111111111111111111111111111111111111111111111111111111111111\" : isNegative ? \"1000000000000000000000000000000000000000000000000000000000000000\" : \"111111111111111111111111111111111111111111111111111111111111111\";\n\n    case 8:\n      return unsigned ? \"1777777777777777777777\" : isNegative ? \"1000000000000000000000\" : \"777777777777777777777\";\n\n    case 10:\n      return unsigned ? \"18446744073709551615\" : isNegative ? \"9223372036854775808\" : \"9223372036854775807\";\n\n    case 16:\n      return unsigned ? \"FFFFFFFFFFFFFFFF\" : isNegative ? \"8000000000000000\" : \"7FFFFFFFFFFFFFFF\";\n\n    default:\n      throw new Error(\"Invalid radix.\");\n  }\n}\n\nexport function abs(x) {\n  if (!x.unsigned && Long.isNegative(x)) {\n    return op_UnaryNegation(x);\n  } else {\n    return x;\n  }\n}\nexport function fromInteger(value, unsigned, kind) {\n  var x = value;\n  var xh = 0;\n\n  switch (kind) {\n    case 0:\n      x = value << 24 >> 24;\n      xh = x;\n      break;\n\n    case 4:\n      x = value << 24 >>> 24;\n      break;\n\n    case 1:\n      x = value << 16 >> 16;\n      xh = x;\n      break;\n\n    case 5:\n      x = value << 16 >>> 16;\n      break;\n\n    case 2:\n      x = value >> 0;\n      xh = x;\n      break;\n\n    case 6:\n      x = value >>> 0;\n      break;\n  }\n\n  return Long.fromBits(x, xh >> 31, unsigned);\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n  var res = isValid(str, style, radix);\n\n  if (res != null) {\n    var lessOrEqual = function lessOrEqual(x, y) {\n      var len = Math.max(x.length, y.length);\n      return x.padStart(len, \"0\") <= y.padStart(len, \"0\");\n    };\n\n    var isNegative = res.sign === \"-\";\n    var maxValue = getMaxValue(unsigned || res.radix !== 10, res.radix, isNegative);\n\n    if (lessOrEqual(res.digits.toUpperCase(), maxValue)) {\n      str = isNegative ? res.sign + res.digits : res.digits;\n      return Long.fromString(str, unsigned, res.radix);\n    }\n  }\n\n  throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize) {\n  try {\n    var v = parse(str, style, unsigned, bitsize);\n    return [true, v];\n  } catch (_a) {// supress error\n  }\n\n  return [false, Long.ZERO];\n}\nexport function unixEpochMillisecondsToTicks(ms, offset) {\n  return op_Multiply(op_Addition(op_Addition(Long.fromNumber(ms), 62135596800000), offset), 10000);\n}\nexport function ticksToUnixEpochMilliseconds(ticks) {\n  return Long.toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\nexport function makeRangeStepFunction(step, last, unsigned) {\n  var stepComparedWithZero = Long.compare(step, unsigned ? Long.UZERO : Long.ZERO);\n\n  if (stepComparedWithZero === 0) {\n    throw new Error(\"The step of a range cannot be zero\");\n  }\n\n  var stepGreaterThanZero = stepComparedWithZero > 0;\n  return function (x) {\n    var comparedWithLast = Long.compare(x, last);\n\n    if (stepGreaterThanZero && comparedWithLast <= 0 || !stepGreaterThanZero && comparedWithLast >= 0) {\n      return [x, op_Addition(x, step)];\n    } else {\n      return null;\n    }\n  };\n}","import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.is-array\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.map\";\nimport \"core-js/modules/es.array.reduce\";\nimport \"core-js/modules/es.array.reverse\";\nimport \"core-js/modules/es.array.slice\";\nimport \"core-js/modules/es.array.some\";\nimport \"core-js/modules/es.array.sort\";\nimport \"core-js/modules/es.array-buffer.constructor\";\nimport \"core-js/modules/es.array-buffer.is-view\";\nimport \"core-js/modules/es.array-buffer.slice\";\nimport \"core-js/modules/es.date.to-string\";\nimport \"core-js/modules/es.object.define-property\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { makeRangeStepFunction as makeDecimalRangeStepFunction } from \"./Decimal\";\nimport { makeRangeStepFunction as makeLongRangeStepFunction } from \"./Long\";\nimport { some, value } from \"./Option\";\nimport { compare, equals } from \"./Util\";\nexport var Enumerator =\n/*#__PURE__*/\nfunction () {\n  function Enumerator(iter) {\n    _classCallCheck(this, Enumerator);\n\n    this.iter = iter;\n  }\n\n  _createClass(Enumerator, [{\n    key: \"MoveNext\",\n    value: function MoveNext() {\n      var cur = this.iter.next();\n      this.current = cur.value;\n      return !cur.done;\n    }\n  }, {\n    key: \"Reset\",\n    value: function Reset() {\n      throw new Error(\"JS iterators cannot be reset\");\n    }\n  }, {\n    key: \"Dispose\",\n    value: function Dispose() {\n      return;\n    }\n  }, {\n    key: \"Current\",\n    get: function get() {\n      return this.current;\n    }\n  }]);\n\n  return Enumerator;\n}();\nexport function getEnumerator(o) {\n  return new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n  return {\n    next: function next() {\n      return en.MoveNext() ? {\n        done: false,\n        value: en.Current\n      } : {\n        done: true,\n        value: null\n      };\n    }\n  };\n} // export function toIterable<T>(en: IEnumerable<T>): Iterable<T> {\n//   return {\n//     [Symbol.iterator]() {\n//       return toIterator(en.GetEnumerator());\n//     },\n//   };\n// }\n\nfunction __failIfNone(res) {\n  if (res == null) {\n    throw new Error(\"Seq did not contain any matching element\");\n  }\n\n  return value(res);\n}\n\nexport function ofArray(xs) {\n  return delay(function () {\n    return unfold(function (i) {\n      return i < xs.length ? [xs[i], i + 1] : null;\n    }, 0);\n  });\n}\nexport function allPairs(xs, ys) {\n  var firstEl = true;\n  var ysCache = [];\n  return collect(function (x) {\n    if (firstEl) {\n      firstEl = false;\n      return map(function (y) {\n        ysCache.push(y);\n        return [x, y];\n      }, ys);\n    } else {\n      return ysCache.map(function (y) {\n        return [x, y];\n      }); // return map(function (i) {\n      //     return [x, ysCache[i]];\n      // }, rangeNumber(0, 1, ysCache.length - 1));\n    }\n  }, xs);\n}\nexport function append(xs, ys) {\n  return delay(function () {\n    var firstDone = false;\n    var i = xs[Symbol.iterator]();\n    var iters = [i, null];\n    return unfold(function () {\n      var cur;\n\n      if (!firstDone) {\n        cur = iters[0].next();\n\n        if (!cur.done) {\n          return [cur.value, iters];\n        } else {\n          firstDone = true;\n          iters = [null, ys[Symbol.iterator]()];\n        }\n      }\n\n      cur = iters[1].next();\n      return !cur.done ? [cur.value, iters] : null;\n    }, iters);\n  });\n}\nexport function average(xs, averager) {\n  var count = 0;\n  var total = fold(function (acc, x) {\n    count++;\n    return averager.Add(acc, x);\n  }, averager.GetZero(), xs);\n  return averager.DivideByInt(total, count);\n}\nexport function averageBy(f, xs, averager) {\n  var count = 0;\n  var total = fold(function (acc, x) {\n    count++;\n    return averager.Add(acc, f(x));\n  }, averager.GetZero(), xs);\n  return averager.DivideByInt(total, count);\n}\nexport function concat(xs) {\n  return delay(function () {\n    var iter = xs[Symbol.iterator]();\n    var output = {\n      value: null\n    };\n    return unfold(function (innerIter) {\n      var hasFinished = false;\n\n      while (!hasFinished) {\n        if (innerIter == null) {\n          var cur = iter.next();\n\n          if (!cur.done) {\n            innerIter = cur.value[Symbol.iterator]();\n          } else {\n            hasFinished = true;\n          }\n        } else {\n          var _cur = innerIter.next();\n\n          if (!_cur.done) {\n            output = {\n              value: _cur.value\n            };\n            hasFinished = true;\n          } else {\n            innerIter = null;\n          }\n        }\n      }\n\n      return innerIter != null && output != null ? [output.value, innerIter] : null;\n    }, null);\n  });\n}\nexport function collect(f, xs) {\n  return concat(map(f, xs));\n}\nexport function choose(f, xs) {\n  return delay(function () {\n    return unfold(function (iter) {\n      var cur = iter.next();\n\n      while (!cur.done) {\n        var y = f(cur.value);\n\n        if (y != null) {\n          return [value(y), iter];\n        }\n\n        cur = iter.next();\n      }\n\n      return null;\n    }, xs[Symbol.iterator]());\n  });\n}\nexport function compareWith(f, xs, ys) {\n  var nonZero = tryFind(function (i) {\n    return i !== 0;\n  }, map2(function (x, y) {\n    return f(x, y);\n  }, xs, ys));\n  return nonZero != null ? value(nonZero) : length(xs) - length(ys);\n}\nexport function delay(f) {\n  return _defineProperty({}, Symbol.iterator, function () {\n    return f()[Symbol.iterator]();\n  });\n}\nexport function empty() {\n  return unfold(function () {\n    return void 0;\n  });\n}\nexport function enumerateFromFunctions(factory, moveNext, current) {\n  return delay(function () {\n    return unfold(function (e) {\n      return moveNext(e) ? [current(e), e] : null;\n    }, factory());\n  });\n}\nexport function enumerateWhile(cond, xs) {\n  return concat(unfold(function () {\n    return cond() ? [xs, true] : null;\n  }));\n}\nexport function enumerateThenFinally(xs, finalFn) {\n  return delay(function () {\n    var iter;\n\n    try {\n      iter = xs[Symbol.iterator]();\n    } catch (err) {\n      return void 0;\n    } finally {\n      finalFn();\n    }\n\n    return unfold(function (it) {\n      try {\n        var cur = it.next();\n        return !cur.done ? [cur.value, it] : null;\n      } catch (err) {\n        return void 0;\n      } finally {\n        finalFn();\n      }\n    }, iter);\n  });\n}\nexport function enumerateUsing(disp, work) {\n  var isDisposed = false;\n\n  var disposeOnce = function disposeOnce() {\n    if (!isDisposed) {\n      isDisposed = true;\n      disp.Dispose();\n    }\n  };\n\n  try {\n    return enumerateThenFinally(work(disp), disposeOnce);\n  } catch (err) {\n    return void 0;\n  } finally {\n    disposeOnce();\n  }\n}\nexport function exactlyOne(xs) {\n  var iter = xs[Symbol.iterator]();\n  var fst = iter.next();\n\n  if (fst.done) {\n    throw new Error(\"Seq was empty\");\n  }\n\n  var snd = iter.next();\n\n  if (!snd.done) {\n    throw new Error(\"Seq had multiple items\");\n  }\n\n  return fst.value;\n}\nexport function except(itemsToExclude, source) {\n  var exclusionItems = Array.from(itemsToExclude);\n\n  var testIsNotInExclusionItems = function testIsNotInExclusionItems(element) {\n    return !exclusionItems.some(function (excludedItem) {\n      return equals(excludedItem, element);\n    });\n  };\n\n  return filter(testIsNotInExclusionItems, source);\n}\nexport function exists(f, xs) {\n  var cur;\n\n  for (var iter = xs[Symbol.iterator]();;) {\n    cur = iter.next();\n\n    if (cur.done) {\n      break;\n    }\n\n    if (f(cur.value)) {\n      return true;\n    }\n  }\n\n  return false;\n}\nexport function exists2(f, xs, ys) {\n  var cur1;\n  var cur2;\n\n  for (var iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n    cur1 = iter1.next();\n    cur2 = iter2.next();\n\n    if (cur1.done || cur2.done) {\n      break;\n    }\n\n    if (f(cur1.value, cur2.value)) {\n      return true;\n    }\n  }\n\n  return false;\n}\nexport function forAll(f, xs) {\n  return !exists(function (x) {\n    return !f(x);\n  }, xs);\n}\nexport function forAll2(f, xs, ys) {\n  return !exists2(function (x, y) {\n    return !f(x, y);\n  }, xs, ys);\n}\nexport function contains(i, xs) {\n  return exists(function (x) {\n    return equals(x, i);\n  }, xs);\n}\nexport function filter(f, xs) {\n  return delay(function () {\n    return unfold(function (iter) {\n      var cur = iter.next();\n\n      while (!cur.done) {\n        if (f(cur.value)) {\n          return [cur.value, iter];\n        }\n\n        cur = iter.next();\n      }\n\n      return null;\n    }, xs[Symbol.iterator]());\n  });\n}\nexport function where(f, xs) {\n  return filter(f, xs);\n}\nexport function fold(f, acc, xs) {\n  if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n    return xs.reduce(f, acc);\n  } else {\n    var cur;\n\n    for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\n      cur = iter.next();\n\n      if (cur.done) {\n        break;\n      }\n\n      acc = f(acc, cur.value, i);\n    }\n\n    return acc;\n  }\n}\nexport function foldBack(f, xs, acc) {\n  var arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n\n  for (var i = arr.length - 1; i >= 0; i--) {\n    acc = f(arr[i], acc, i);\n  }\n\n  return acc;\n}\nexport function fold2(f, acc, xs, ys) {\n  var iter1 = xs[Symbol.iterator]();\n  var iter2 = ys[Symbol.iterator]();\n  var cur1;\n  var cur2;\n\n  for (var i = 0;; i++) {\n    cur1 = iter1.next();\n    cur2 = iter2.next();\n\n    if (cur1.done || cur2.done) {\n      break;\n    }\n\n    acc = f(acc, cur1.value, cur2.value, i);\n  }\n\n  return acc;\n}\nexport function foldBack2(f, xs, ys, acc) {\n  var ar1 = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n  var ar2 = Array.isArray(ys) || ArrayBuffer.isView(ys) ? ys : Array.from(ys);\n\n  for (var i = ar1.length - 1; i >= 0; i--) {\n    acc = f(ar1[i], ar2[i], acc, i);\n  }\n\n  return acc;\n}\nexport function tryHead(xs) {\n  var iter = xs[Symbol.iterator]();\n  var cur = iter.next();\n  return cur.done ? null : some(cur.value);\n}\nexport function head(xs) {\n  return __failIfNone(tryHead(xs));\n}\nexport function initialize(n, f) {\n  return delay(function () {\n    return unfold(function (i) {\n      return i < n ? [f(i), i + 1] : null;\n    }, 0);\n  });\n}\nexport function initializeInfinite(f) {\n  return delay(function () {\n    return unfold(function (i) {\n      return [f(i), i + 1];\n    }, 0);\n  });\n}\nexport function tryItem(i, xs) {\n  if (i < 0) {\n    return null;\n  }\n\n  if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n    return i < xs.length ? some(xs[i]) : null;\n  }\n\n  for (var j = 0, iter = xs[Symbol.iterator]();; j++) {\n    var cur = iter.next();\n\n    if (cur.done) {\n      break;\n    }\n\n    if (j === i) {\n      return some(cur.value);\n    }\n  }\n\n  return null;\n}\nexport function item(i, xs) {\n  return __failIfNone(tryItem(i, xs));\n}\nexport function iterate(f, xs) {\n  fold(function (_, x) {\n    return f(x);\n  }, null, xs);\n}\nexport function iterate2(f, xs, ys) {\n  fold2(function (_, x, y) {\n    return f(x, y);\n  }, null, xs, ys);\n}\nexport function iterateIndexed(f, xs) {\n  fold(function (_, x, i) {\n    return f(i, x);\n  }, null, xs);\n}\nexport function iterateIndexed2(f, xs, ys) {\n  fold2(function (_, x, y, i) {\n    return f(i, x, y);\n  }, null, xs, ys);\n}\nexport function isEmpty(xs) {\n  var i = xs[Symbol.iterator]();\n  return i.next().done;\n}\nexport function tryLast(xs) {\n  return isEmpty(xs) ? null : some(reduce(function (_, x) {\n    return x;\n  }, xs));\n}\nexport function last(xs) {\n  return __failIfNone(tryLast(xs));\n}\nexport function length(xs) {\n  return Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.length : fold(function (acc, x) {\n    return acc + 1;\n  }, 0, xs);\n}\nexport function map(f, xs) {\n  return delay(function () {\n    return unfold(function (iter) {\n      var cur = iter.next();\n      return !cur.done ? [f(cur.value), iter] : null;\n    }, xs[Symbol.iterator]());\n  });\n}\nexport function mapIndexed(f, xs) {\n  return delay(function () {\n    var i = 0;\n    return unfold(function (iter) {\n      var cur = iter.next();\n      return !cur.done ? [f(i++, cur.value), iter] : null;\n    }, xs[Symbol.iterator]());\n  });\n}\nexport function indexed(xs) {\n  return mapIndexed(function (i, x) {\n    return [i, x];\n  }, xs);\n}\nexport function map2(f, xs, ys) {\n  return delay(function () {\n    var iter1 = xs[Symbol.iterator]();\n    var iter2 = ys[Symbol.iterator]();\n    return unfold(function () {\n      var cur1 = iter1.next();\n      var cur2 = iter2.next();\n      return !cur1.done && !cur2.done ? [f(cur1.value, cur2.value), null] : null;\n    });\n  });\n}\nexport function mapIndexed2(f, xs, ys) {\n  return delay(function () {\n    var i = 0;\n    var iter1 = xs[Symbol.iterator]();\n    var iter2 = ys[Symbol.iterator]();\n    return unfold(function () {\n      var cur1 = iter1.next();\n      var cur2 = iter2.next();\n      return !cur1.done && !cur2.done ? [f(i++, cur1.value, cur2.value), null] : null;\n    });\n  });\n}\nexport function map3(f, xs, ys, zs) {\n  return delay(function () {\n    var iter1 = xs[Symbol.iterator]();\n    var iter2 = ys[Symbol.iterator]();\n    var iter3 = zs[Symbol.iterator]();\n    return unfold(function () {\n      var cur1 = iter1.next();\n      var cur2 = iter2.next();\n      var cur3 = iter3.next();\n      return !cur1.done && !cur2.done && !cur3.done ? [f(cur1.value, cur2.value, cur3.value), null] : null;\n    });\n  });\n}\nexport function mapFold(f, acc, xs, transform) {\n  var result = [];\n  var r;\n  var cur;\n\n  for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\n    cur = iter.next();\n\n    if (cur.done) {\n      break;\n    }\n\n    var _f = f(acc, cur.value);\n\n    var _f2 = _slicedToArray(_f, 2);\n\n    r = _f2[0];\n    acc = _f2[1];\n    result.push(r);\n  }\n\n  return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function mapFoldBack(f, xs, acc, transform) {\n  var arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n  var result = [];\n  var r;\n\n  for (var i = arr.length - 1; i >= 0; i--) {\n    var _f3 = f(arr[i], acc);\n\n    var _f4 = _slicedToArray(_f3, 2);\n\n    r = _f4[0];\n    acc = _f4[1];\n    result.push(r);\n  }\n\n  return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function max(xs, comparer) {\n  var compareFn = comparer != null ? comparer.Compare : compare;\n  return reduce(function (acc, x) {\n    return compareFn(acc, x) === 1 ? acc : x;\n  }, xs);\n}\nexport function maxBy(f, xs, comparer) {\n  var compareFn = comparer != null ? comparer.Compare : compare;\n  return reduce(function (acc, x) {\n    return compareFn(f(acc), f(x)) === 1 ? acc : x;\n  }, xs);\n}\nexport function min(xs, comparer) {\n  var compareFn = comparer != null ? comparer.Compare : compare;\n  return reduce(function (acc, x) {\n    return compareFn(acc, x) === -1 ? acc : x;\n  }, xs);\n}\nexport function minBy(f, xs, comparer) {\n  var compareFn = comparer != null ? comparer.Compare : compare;\n  return reduce(function (acc, x) {\n    return compareFn(f(acc), f(x)) === -1 ? acc : x;\n  }, xs);\n}\nexport function pairwise(xs) {\n  return skip(2, scan(function (last, next) {\n    return [last[1], next];\n  }, [0, 0], xs));\n}\nexport function rangeChar(first, last) {\n  return delay(function () {\n    return unfold(function (x) {\n      return x <= last ? [x, String.fromCharCode(x.charCodeAt(0) + 1)] : null;\n    }, first);\n  });\n}\nexport function rangeLong(first, step, last, unsigned) {\n  var stepFn = makeLongRangeStepFunction(step, last, unsigned);\n  return delay(function () {\n    return unfold(stepFn, first);\n  });\n}\nexport function rangeDecimal(first, step, last) {\n  var stepFn = makeDecimalRangeStepFunction(step, last);\n  return delay(function () {\n    return unfold(stepFn, first);\n  });\n}\nexport function rangeNumber(first, step, last) {\n  if (step === 0) {\n    throw new Error(\"Step cannot be 0\");\n  }\n\n  return delay(function () {\n    return unfold(function (x) {\n      return step > 0 && x <= last || step < 0 && x >= last ? [x, x + step] : null;\n    }, first);\n  });\n}\nexport function readOnly(xs) {\n  return map(function (x) {\n    return x;\n  }, xs);\n}\nexport function reduce(f, xs) {\n  if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n    return xs.reduce(f);\n  }\n\n  var iter = xs[Symbol.iterator]();\n  var cur = iter.next();\n\n  if (cur.done) {\n    throw new Error(\"Seq was empty\");\n  }\n\n  var acc = cur.value;\n\n  while (true) {\n    cur = iter.next();\n\n    if (cur.done) {\n      break;\n    }\n\n    acc = f(acc, cur.value);\n  }\n\n  return acc;\n}\nexport function reduceBack(f, xs) {\n  var ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n\n  if (ar.length === 0) {\n    throw new Error(\"Seq was empty\");\n  }\n\n  var acc = ar[ar.length - 1];\n\n  for (var i = ar.length - 2; i >= 0; i--) {\n    acc = f(ar[i], acc, i);\n  }\n\n  return acc;\n}\nexport function replicate(n, x) {\n  return initialize(n, function () {\n    return x;\n  });\n}\nexport function reverse(xs) {\n  var ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n  return ofArray(ar.reverse());\n}\nexport function scan(f, seed, xs) {\n  return delay(function () {\n    var iter = xs[Symbol.iterator]();\n    return unfold(function (acc) {\n      if (acc == null) {\n        return [seed, seed];\n      }\n\n      var cur = iter.next();\n\n      if (!cur.done) {\n        acc = f(acc, cur.value);\n        return [acc, acc];\n      }\n\n      return void 0;\n    }, null);\n  });\n}\nexport function scanBack(f, xs, seed) {\n  return reverse(scan(function (acc, x) {\n    return f(x, acc);\n  }, seed, reverse(xs)));\n}\nexport function singleton(y) {\n  return [y];\n}\nexport function skip(n, xs) {\n  return _defineProperty({}, Symbol.iterator, function () {\n    var iter = xs[Symbol.iterator]();\n\n    for (var i = 1; i <= n; i++) {\n      if (iter.next().done) {\n        throw new Error(\"Seq has not enough elements\");\n      }\n    }\n\n    return iter;\n  });\n}\nexport function skipWhile(f, xs) {\n  return delay(function () {\n    var hasPassed = false;\n    return filter(function (x) {\n      return hasPassed || (hasPassed = !f(x));\n    }, xs);\n  });\n}\nexport function sortWith(f, xs) {\n  var ys = Array.from(xs);\n  return ofArray(ys.sort(f));\n}\nexport function sum(xs, adder) {\n  return fold(function (acc, x) {\n    return adder.Add(acc, x);\n  }, adder.GetZero(), xs);\n}\nexport function sumBy(f, xs, adder) {\n  return fold(function (acc, x) {\n    return adder.Add(acc, f(x));\n  }, adder.GetZero(), xs);\n}\nexport function tail(xs) {\n  var iter = xs[Symbol.iterator]();\n  var cur = iter.next();\n\n  if (cur.done) {\n    throw new Error(\"Seq was empty\");\n  }\n\n  return _defineProperty({}, Symbol.iterator, function () {\n    return iter;\n  });\n}\nexport function take(n, xs) {\n  var truncate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return delay(function () {\n    var iter = xs[Symbol.iterator]();\n    return unfold(function (i) {\n      if (i < n) {\n        var cur = iter.next();\n\n        if (!cur.done) {\n          return [cur.value, i + 1];\n        }\n\n        if (!truncate) {\n          throw new Error(\"Seq has not enough elements\");\n        }\n      }\n\n      return void 0;\n    }, 0);\n  });\n}\nexport function truncate(n, xs) {\n  return take(n, xs, true);\n}\nexport function takeWhile(f, xs) {\n  return delay(function () {\n    var iter = xs[Symbol.iterator]();\n    return unfold(function (i) {\n      var cur = iter.next();\n\n      if (!cur.done && f(cur.value)) {\n        return [cur.value, null];\n      }\n\n      return void 0;\n    }, 0);\n  });\n}\nexport function tryFind(f, xs, defaultValue) {\n  for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\n    var cur = iter.next();\n\n    if (cur.done) {\n      break;\n    }\n\n    if (f(cur.value, i)) {\n      return some(cur.value);\n    }\n  }\n\n  return defaultValue === void 0 ? null : some(defaultValue);\n}\nexport function find(f, xs) {\n  return __failIfNone(tryFind(f, xs));\n}\nexport function tryFindBack(f, xs, defaultValue) {\n  var arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n  return tryFind(f, arr.reverse(), defaultValue);\n}\nexport function findBack(f, xs) {\n  return __failIfNone(tryFindBack(f, xs));\n}\nexport function tryFindIndex(f, xs) {\n  for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\n    var cur = iter.next();\n\n    if (cur.done) {\n      break;\n    }\n\n    if (f(cur.value, i)) {\n      return i;\n    }\n  }\n\n  return null;\n}\nexport function findIndex(f, xs) {\n  return __failIfNone(tryFindIndex(f, xs));\n}\nexport function tryFindIndexBack(f, xs) {\n  var arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n\n  for (var i = arr.length - 1; i >= 0; i--) {\n    if (f(arr[i], i)) {\n      return i;\n    }\n  }\n\n  return null;\n}\nexport function findIndexBack(f, xs) {\n  return __failIfNone(tryFindIndexBack(f, xs));\n}\nexport function tryPick(f, xs) {\n  for (var i = 0, iter = xs[Symbol.iterator]();; i++) {\n    var cur = iter.next();\n\n    if (cur.done) {\n      break;\n    }\n\n    var y = f(cur.value, i);\n\n    if (y != null) {\n      return y;\n    }\n  }\n\n  return null;\n}\nexport function pick(f, xs) {\n  return __failIfNone(tryPick(f, xs));\n}\nexport function unfold(f, fst) {\n  return _defineProperty({}, Symbol.iterator, function () {\n    // Capture a copy of the first value in the closure\n    // so the sequence is restarted every time, see #1230\n    var acc = fst;\n    return {\n      next: function next() {\n        var res = f(acc);\n\n        if (res != null) {\n          acc = res[1];\n          return {\n            done: false,\n            value: res[0]\n          };\n        }\n\n        return {\n          done: true\n        };\n      }\n    };\n  });\n}\nexport function zip(xs, ys) {\n  return map2(function (x, y) {\n    return [x, y];\n  }, xs, ys);\n}\nexport function zip3(xs, ys, zs) {\n  return map3(function (x, y, z) {\n    return [x, y, z];\n  }, xs, ys, zs);\n}\nexport function windowed(windowSize, source) {\n  if (windowSize <= 0) {\n    throw new Error(\"windowSize must be positive\");\n  }\n\n  return _defineProperty({}, Symbol.iterator, function () {\n    var window = [];\n    var iter = source[Symbol.iterator]();\n    return {\n      next: function next() {\n        var cur;\n\n        while (window.length < windowSize) {\n          if ((cur = iter.next()).done) {\n            return {\n              done: true\n            };\n          }\n\n          window.push(cur.value);\n        }\n\n        var value = window;\n        window = window.slice(1);\n        return {\n          done: false,\n          value: value\n        };\n      }\n    };\n  });\n}","import \"core-js/modules/es.regexp.constructor\";\nimport \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.replace\";\nimport \"core-js/modules/es.string.split\";\nexport function create(pattern, options) {\n  // Supported RegexOptions\n  // * IgnoreCase:  0x0001\n  // * Multiline:   0x0002\n  // * Singleline:  0x0010\n  // * ECMAScript:  0x0100 (ignored)\n  if ((options & ~(1 ^ 2 ^ 16 ^ 256)) !== 0) {\n    throw new Error(\"RegexOptions only supports: IgnoreCase, Multiline, Singleline and ECMAScript\");\n  }\n\n  var flags = \"g\";\n  flags += options & 1 ? \"i\" : \"\"; // 0x0001 RegexOptions.IgnoreCase\n\n  flags += options & 2 ? \"m\" : \"\";\n  flags += options & 16 ? \"s\" : \"\";\n  return new RegExp(pattern, flags);\n} // From http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\n\nexport function escape(str) {\n  return str.replace(/[\\-\\[\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\nexport function unescape(str) {\n  return str.replace(/\\\\([\\-\\[\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|])/g, \"$1\");\n}\nexport function isMatch(str, pattern) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var reg;\n  reg = str instanceof RegExp ? (reg = str, str = pattern, reg.lastIndex = options, reg) : reg = create(pattern, options);\n  return reg.test(str);\n}\nexport function match(str, pattern) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var reg;\n  reg = str instanceof RegExp ? (reg = str, str = pattern, reg.lastIndex = options, reg) : reg = create(pattern, options);\n  return reg.exec(str);\n}\nexport function matches(str, pattern) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var reg;\n  reg = str instanceof RegExp ? (reg = str, str = pattern, reg.lastIndex = options, reg) : reg = create(pattern, options);\n\n  if (!reg.global) {\n    throw new Error(\"Non-global RegExp\"); // Prevent infinite loop\n  }\n\n  var m = reg.exec(str);\n  var matches = [];\n\n  while (m !== null) {\n    matches.push(m);\n    m = reg.exec(str);\n  }\n\n  return matches;\n}\nexport function options(reg) {\n  var options = 256; // ECMAScript\n\n  options |= reg.ignoreCase ? 1 : 0;\n  options |= reg.multiline ? 2 : 0;\n  return options;\n}\nexport function replace(reg, input, replacement, limit) {\n  var offset = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n\n  function replacer() {\n    var res = arguments[0];\n\n    if (limit !== 0) {\n      limit--;\n      var _match = [];\n      var len = arguments.length;\n\n      for (var i = 0; i < len - 2; i++) {\n        _match.push(arguments[i]);\n      }\n\n      _match.index = arguments[len - 2];\n      _match.input = arguments[len - 1];\n      res = replacement(_match);\n    }\n\n    return res;\n  }\n\n  if (typeof reg === \"string\") {\n    var tmp = reg;\n    reg = create(input, limit);\n    input = tmp;\n    limit = undefined;\n  }\n\n  if (typeof replacement === \"function\") {\n    limit = limit == null ? -1 : limit;\n    return input.substring(0, offset) + input.substring(offset).replace(reg, replacer);\n  } else {\n    // $0 doesn't work with JS regex, see #1155\n    replacement = replacement.replace(/\\$0/g, function (s) {\n      return \"$&\";\n    });\n\n    if (limit != null) {\n      var m;\n      var sub1 = input.substring(offset);\n\n      var _matches = matches(reg, sub1);\n\n      var sub2 = matches.length > limit ? (m = _matches[limit - 1], sub1.substring(0, m.index + m[0].length)) : sub1;\n      return input.substring(0, offset) + sub2.replace(reg, replacement) + input.substring(offset + sub2.length);\n    } else {\n      return input.replace(reg, replacement);\n    }\n  }\n}\nexport function split(reg, input, limit) {\n  var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (typeof reg === \"string\") {\n    var tmp = reg;\n    reg = create(input, limit);\n    input = tmp;\n    limit = undefined;\n  }\n\n  input = input.substring(offset);\n  return input.split(reg, limit);\n}","import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.filter\";\nimport \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.is-array\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.join\";\nimport \"core-js/modules/es.array.last-index-of\";\nimport \"core-js/modules/es.array.map\";\nimport \"core-js/modules/es.array.slice\";\nimport \"core-js/modules/es.array-buffer.slice\";\nimport \"core-js/modules/es.date.to-string\";\nimport \"core-js/modules/es.number.constructor\";\nimport \"core-js/modules/es.number.to-fixed\";\nimport \"core-js/modules/es.number.to-precision\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.parse-int\";\nimport \"core-js/modules/es.regexp.constructor\";\nimport \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/es.string.replace\";\nimport \"core-js/modules/es.string.split\";\nimport \"core-js/modules/es.string.trim\";\nimport \"core-js/modules/es.string.trim-end\";\nimport \"core-js/modules/es.string.trim-start\";\nimport \"core-js/modules/es.typed-array.uint8-array\";\nimport \"core-js/modules/es.typed-array.copy-within\";\nimport \"core-js/modules/es.typed-array.every\";\nimport \"core-js/modules/es.typed-array.fill\";\nimport \"core-js/modules/es.typed-array.filter\";\nimport \"core-js/modules/es.typed-array.find\";\nimport \"core-js/modules/es.typed-array.find-index\";\nimport \"core-js/modules/es.typed-array.for-each\";\nimport \"core-js/modules/es.typed-array.includes\";\nimport \"core-js/modules/es.typed-array.index-of\";\nimport \"core-js/modules/es.typed-array.iterator\";\nimport \"core-js/modules/es.typed-array.join\";\nimport \"core-js/modules/es.typed-array.last-index-of\";\nimport \"core-js/modules/es.typed-array.map\";\nimport \"core-js/modules/es.typed-array.reduce\";\nimport \"core-js/modules/es.typed-array.reduce-right\";\nimport \"core-js/modules/es.typed-array.reverse\";\nimport \"core-js/modules/es.typed-array.set\";\nimport \"core-js/modules/es.typed-array.slice\";\nimport \"core-js/modules/es.typed-array.some\";\nimport \"core-js/modules/es.typed-array.sort\";\nimport \"core-js/modules/es.typed-array.subarray\";\nimport \"core-js/modules/es.typed-array.to-locale-string\";\nimport \"core-js/modules/es.typed-array.to-string\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { toString as dateToString } from \"./Date\";\nimport Long, { fromBytes as longFromBytes, toBytes as longToBytes, toString as longToString } from \"./Long\";\nimport { escape } from \"./RegExp\";\nvar fsFormatRegExp = /(^|[^%])%([0+ ]*)(-?\\d+)?(?:\\.(\\d+))?(\\w)/;\nvar formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g; // RFC 4122 compliant. From https://stackoverflow.com/a/13653180/3922220\n// const guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/;\n// Relax GUID parsing, see #1637\n\nvar guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;\n\nfunction cmp(x, y, ic) {\n  function isIgnoreCase(i) {\n    return i === true || i === 1\n    /* CurrentCultureIgnoreCase */\n    || i === 3\n    /* InvariantCultureIgnoreCase */\n    || i === 5\n    /* OrdinalIgnoreCase */\n    ;\n  }\n\n  function isOrdinal(i) {\n    return i === 4\n    /* Ordinal */\n    || i === 5\n    /* OrdinalIgnoreCase */\n    ;\n  }\n\n  if (x == null) {\n    return y == null ? 0 : -1;\n  }\n\n  if (y == null) {\n    return 1;\n  } // everything is bigger than null\n\n\n  if (isOrdinal(ic)) {\n    if (isIgnoreCase(ic)) {\n      x = x.toLowerCase();\n      y = y.toLowerCase();\n    }\n\n    return x === y ? 0 : x < y ? -1 : 1;\n  } else {\n    if (isIgnoreCase(ic)) {\n      x = x.toLocaleLowerCase();\n      y = y.toLocaleLowerCase();\n    }\n\n    return x.localeCompare(y);\n  }\n}\n\nexport function compare() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  switch (args.length) {\n    case 2:\n      return cmp(args[0], args[1], false);\n\n    case 3:\n      return cmp(args[0], args[1], args[2]);\n\n    case 4:\n      return cmp(args[0], args[1], args[2] === true);\n\n    case 5:\n      return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n\n    case 6:\n      return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n\n    case 7:\n      return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n\n    default:\n      throw new Error(\"String.compare: Unsupported number of parameters\");\n  }\n}\nexport function compareOrdinal(x, y) {\n  return cmp(x, y, 4\n  /* Ordinal */\n  );\n}\nexport function compareTo(x, y) {\n  return cmp(x, y, 0\n  /* CurrentCulture */\n  );\n}\nexport function startsWith(str, pattern, ic) {\n  if (str.length >= pattern.length) {\n    return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n  }\n\n  return false;\n}\nexport function indexOfAny(str, anyOf) {\n  if (str == null || str === \"\") {\n    return -1;\n  }\n\n  var startIndex = (arguments.length <= 2 ? 0 : arguments.length - 2) > 0 ? arguments.length <= 2 ? undefined : arguments[2] : 0;\n\n  if (startIndex < 0) {\n    throw new Error(\"Start index cannot be negative\");\n  }\n\n  var length = (arguments.length <= 2 ? 0 : arguments.length - 2) > 1 ? arguments.length <= 3 ? undefined : arguments[3] : str.length - startIndex;\n\n  if (length < 0) {\n    throw new Error(\"Length cannot be negative\");\n  }\n\n  if (length > str.length - startIndex) {\n    throw new Error(\"Invalid startIndex and length\");\n  }\n\n  str = str.substr(startIndex, length);\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = anyOf[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var c = _step.value;\n      var index = str.indexOf(c);\n\n      if (index > -1) {\n        return index + startIndex;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return -1;\n}\n\nfunction toHex(x) {\n  if (x instanceof Long) {\n    return longToString(x.unsigned ? x : longFromBytes(longToBytes(x), true), 16);\n  } else {\n    return (Number(x) >>> 0).toString(16);\n  }\n}\n\nexport function printf(input) {\n  return {\n    input: input,\n    cont: fsFormat(input)\n  };\n}\nexport function toConsole(arg) {\n  // Don't remove the lambda here, see #1357\n  return arg.cont(function (x) {\n    console.log(x);\n  });\n}\nexport function toConsoleError(arg) {\n  return arg.cont(function (x) {\n    console.error(x);\n  });\n}\nexport function toText(arg) {\n  return arg.cont(function (x) {\n    return x;\n  });\n}\nexport function toFail(arg) {\n  return arg.cont(function (x) {\n    throw new Error(x);\n  });\n}\n\nfunction formatOnce(str2, rep) {\n  return str2.replace(fsFormatRegExp, function (_, prefix, flags, pad, precision, format) {\n    switch (format) {\n      case \"f\":\n      case \"F\":\n        rep = Number(rep).toFixed(precision || 6);\n        break;\n\n      case \"g\":\n      case \"G\":\n        rep = Number(rep).toPrecision(precision);\n        break;\n\n      case \"e\":\n      case \"E\":\n        rep = Number(rep).toExponential(precision);\n        break;\n\n      case \"O\":\n      case \"A\":\n        rep = String(rep);\n        break;\n\n      case \"x\":\n        rep = toHex(rep);\n        break;\n\n      case \"X\":\n        rep = toHex(rep).toUpperCase();\n        break;\n    }\n\n    var plusPrefix = flags.indexOf(\"+\") >= 0 && parseInt(rep, 10) >= 0;\n    pad = parseInt(pad, 10);\n\n    if (!isNaN(pad)) {\n      var ch = pad >= 0 && flags.indexOf(\"0\") >= 0 ? \"0\" : \" \";\n      rep = padLeft(String(rep), Math.abs(pad) - (plusPrefix ? 1 : 0), ch, pad < 0);\n    }\n\n    var once = prefix + (plusPrefix ? \"+\" + rep : rep);\n    return once.replace(/%/g, \"%%\");\n  });\n}\n\nfunction createPrinter(str, cont) {\n  return function () {\n    // Make a copy as the function may be used several times\n    var strCopy = str;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    for (var _i = 0, _args = args; _i < _args.length; _i++) {\n      var arg = _args[_i];\n      strCopy = formatOnce(strCopy, arg);\n    }\n\n    return fsFormatRegExp.test(strCopy) ? createPrinter(strCopy, cont) : cont(strCopy.replace(/%%/g, \"%\"));\n  };\n}\n\nexport function fsFormat(str) {\n  return function (cont) {\n    return fsFormatRegExp.test(str) ? createPrinter(str, cont) : cont(str);\n  };\n}\nexport function format(str) {\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n\n  if (_typeof(str) === \"object\" && args.length > 0) {\n    // Called with culture info\n    str = args[0];\n    args.shift();\n  }\n\n  return str.replace(formatRegExp, function (match, idx, pad, format, precision, pattern) {\n    var rep = args[idx];\n    var padSymbol = \" \";\n    var isNumericType = typeof rep === \"number\" || rep instanceof Long; // TODO: || (rep instanceof Decimal) || (rep instanceof BigInt);\n\n    if (isNumericType) {\n      switch (format) {\n        case \"f\":\n        case \"F\":\n          rep = precision ? rep.toFixed(precision) : rep.toFixed(2);\n          break;\n\n        case \"g\":\n        case \"G\":\n          rep = precision ? rep.toPrecision(precision) : rep.toPrecision();\n          break;\n\n        case \"e\":\n        case \"E\":\n          rep = precision ? rep.toExponential(precision) : rep.toExponential();\n          break;\n\n        case \"p\":\n        case \"P\":\n          rep = (precision ? (rep * 100).toFixed(precision) : (rep * 100).toFixed(2)) + \" %\";\n          break;\n\n        case \"d\":\n        case \"D\":\n          rep = precision ? padLeft(rep.toString(), precision, \"0\") : rep.toString();\n          break;\n\n        case \"x\":\n        case \"X\":\n          rep = precision ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n\n          if (format === \"X\") {\n            rep = rep.toUpperCase();\n          }\n\n          break;\n\n        default:\n          var m = /^(0+)(\\.0+)?$/.exec(pattern);\n\n          if (m != null) {\n            var decs = 0;\n\n            if (m[2] != null) {\n              rep = rep.toFixed(decs = m[2].length - 1);\n            }\n\n            pad = \",\" + (m[1].length + (decs ? decs + 1 : 0)).toString();\n            padSymbol = \"0\";\n          } else if (pattern) {\n            rep = pattern;\n          }\n\n      }\n    } else if (rep instanceof Date) {\n      rep = dateToString(rep, pattern || format);\n    }\n\n    pad = parseInt((pad || \"\").substring(1), 10);\n\n    if (!isNaN(pad)) {\n      rep = padLeft(String(rep), Math.abs(pad), padSymbol, pad < 0);\n    }\n\n    return rep;\n  });\n}\nexport function endsWith(str, search) {\n  var idx = str.lastIndexOf(search);\n  return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n  if (n < 0) {\n    throw new Error(\"String length must be non-negative\");\n  }\n\n  var xs = new Array(n);\n\n  for (var i = 0; i < n; i++) {\n    xs[i] = f(i);\n  }\n\n  return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n  if (startIndex < 0 || startIndex > str.length) {\n    throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n  }\n\n  return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n  return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n  return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat() {\n  for (var _len4 = arguments.length, xs = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    xs[_key4] = arguments[_key4];\n  }\n\n  return xs.map(function (x) {\n    return String(x);\n  }).join(\"\");\n}\nexport function join(delimiter, xs) {\n  if (Array.isArray(xs)) {\n    return xs.join(delimiter);\n  } else {\n    return Array.from(xs).join(delimiter);\n  }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n  var endIndexPlusOne = startIndex + count;\n\n  if (endIndexPlusOne > xs.length) {\n    throw new Error(\"Index and count must refer to a location within the buffer.\");\n  }\n\n  return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\n/** Validates UUID as specified in RFC4122 (versions 1-5). Trims braces. */\n\nexport function validateGuid(str, doNotThrow) {\n  var trimmedAndLowered = trim(str, \"{\", \"}\").toLowerCase();\n\n  if (guidRegex.test(trimmedAndLowered)) {\n    return doNotThrow ? [true, trimmedAndLowered] : trimmedAndLowered;\n  } else if (doNotThrow) {\n    return [false, \"00000000-0000-0000-0000-000000000000\"];\n  }\n\n  throw new Error(\"Guid should contain 32 digits with 4 dashes: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\");\n} // From https://gist.github.com/LeverOne/1308368\n\nexport function newGuid() {\n  var b = \"\";\n\n  for (var a = 0; a++ < 36;) {\n    b += a * 51 & 52 ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16) : \"-\";\n  }\n\n  return b;\n} // Maps for number <-> hex string conversion\n\nvar _convertMapsInitialized = false;\n\nvar _byteToHex;\n\nvar _hexToByte;\n\nfunction initConvertMaps() {\n  _byteToHex = new Array(256);\n  _hexToByte = {};\n\n  for (var i = 0; i < 256; i++) {\n    _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n    _hexToByte[_byteToHex[i]] = i;\n  }\n\n  _convertMapsInitialized = true;\n}\n/** Parse a UUID into it's component bytes */\n// Adapted from https://github.com/zefferus/uuid-parse\n\n\nexport function guidToArray(s) {\n  if (!_convertMapsInitialized) {\n    initConvertMaps();\n  }\n\n  var i = 0;\n  var buf = new Uint8Array(16);\n  s.toLowerCase().replace(/[0-9a-f]{2}/g, function (oct) {\n    switch (i) {\n      // .NET saves first three byte groups with different endianness\n      // See https://stackoverflow.com/a/16722909/3922220\n      case 0:\n      case 1:\n      case 2:\n      case 3:\n        buf[3 - i++] = _hexToByte[oct];\n        break;\n\n      case 4:\n      case 5:\n        buf[9 - i++] = _hexToByte[oct];\n        break;\n\n      case 6:\n      case 7:\n        buf[13 - i++] = _hexToByte[oct];\n        break;\n\n      case 8:\n      case 9:\n      case 10:\n      case 11:\n      case 12:\n      case 13:\n      case 14:\n      case 15:\n        buf[i++] = _hexToByte[oct];\n        break;\n    }\n  }); // Zero out remaining bytes if string was short\n\n  while (i < 16) {\n    buf[i++] = 0;\n  }\n\n  return buf;\n}\n/** Convert UUID byte array into a string */\n\nexport function arrayToGuid(buf) {\n  if (buf.length !== 16) {\n    throw new Error(\"Byte array for GUID must be exactly 16 bytes long\");\n  }\n\n  if (!_convertMapsInitialized) {\n    initConvertMaps();\n  }\n\n  var guid = _byteToHex[buf[3]] + _byteToHex[buf[2]] + _byteToHex[buf[1]] + _byteToHex[buf[0]] + \"-\" + _byteToHex[buf[5]] + _byteToHex[buf[4]] + \"-\" + _byteToHex[buf[7]] + _byteToHex[buf[6]] + \"-\" + _byteToHex[buf[8]] + _byteToHex[buf[9]] + \"-\" + _byteToHex[buf[10]] + _byteToHex[buf[11]] + _byteToHex[buf[12]] + _byteToHex[buf[13]] + _byteToHex[buf[14]] + _byteToHex[buf[15]];\n  return guid;\n}\n\nfunction notSupported(name) {\n  throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\n\nexport function toBase64String(inArray) {\n  var str = \"\";\n\n  for (var i = 0; i < inArray.length; i++) {\n    str += String.fromCharCode(inArray[i]);\n  }\n\n  return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n  var binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n  var bytes = new Uint8Array(binary.length);\n\n  for (var i = 0; i < binary.length; i++) {\n    bytes[i] = binary.charCodeAt(i);\n  }\n\n  return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n  ch = ch || \" \";\n  len = len - str.length;\n\n  for (var i = 0; i < len; i++) {\n    str = isRight ? str + ch : ch + str;\n  }\n\n  return str;\n}\nexport function padRight(str, len, ch) {\n  return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n  if (startIndex >= str.length) {\n    throw new Error(\"startIndex must be less than length of string\");\n  }\n\n  if (typeof count === \"number\" && startIndex + count > str.length) {\n    throw new Error(\"Index and count must refer to a location within the string.\");\n  }\n\n  return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n  return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n  return initialize(n, function () {\n    return x;\n  });\n}\nexport function getCharAtIndex(input, index) {\n  if (index < 0 || index >= input.length) {\n    throw new Error(\"Index was outside the bounds of the array.\");\n  }\n\n  return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n  count = typeof count === \"number\" ? count : null;\n  removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : null;\n\n  if (count < 0) {\n    throw new Error(\"Count cannot be less than zero\");\n  }\n\n  if (count === 0) {\n    return [];\n  }\n\n  if (!Array.isArray(splitters)) {\n    if (removeEmpty === 0) {\n      return str.split(splitters, count);\n    }\n\n    var len = arguments.length;\n    splitters = Array(len - 1);\n\n    for (var key = 1; key < len; key++) {\n      splitters[key - 1] = arguments[key];\n    }\n  }\n\n  splitters = splitters.map(function (x) {\n    return escape(x);\n  });\n  splitters = splitters.length > 0 ? splitters : [\" \"];\n  var i = 0;\n  var splits = [];\n  var reg = new RegExp(splitters.join(\"|\"), \"g\");\n\n  while (count == null || count > 1) {\n    var m = reg.exec(str);\n\n    if (m === null) {\n      break;\n    }\n\n    if (!removeEmpty || m.index - i > 0) {\n      count = count != null ? count - 1 : count;\n      splits.push(str.substring(i, m.index));\n    }\n\n    i = reg.lastIndex;\n  }\n\n  if (!removeEmpty || str.length - i > 0) {\n    splits.push(str.substring(i));\n  }\n\n  return splits;\n}\nexport function trim(str) {\n  for (var _len5 = arguments.length, chars = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    chars[_key5 - 1] = arguments[_key5];\n  }\n\n  if (chars.length === 0) {\n    return str.trim();\n  }\n\n  var pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n  return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str) {\n  for (var _len6 = arguments.length, chars = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n    chars[_key6 - 1] = arguments[_key6];\n  }\n\n  return chars.length === 0 ? str.trimStart() : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str) {\n  for (var _len7 = arguments.length, chars = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {\n    chars[_key7 - 1] = arguments[_key7];\n  }\n\n  return chars.length === 0 ? str.trimEnd() : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n  return x.split(\"\").filter(function (c) {\n    return pred(c);\n  }).join(\"\");\n}","import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.find-index\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.splice\";\nimport \"core-js/modules/es.map\";\nimport \"core-js/modules/es.object.define-property\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\nimport { declare, FSharpRef } from \"./Types.js\";\nimport { iterateIndexed, toIterator, getEnumerator, delay, collect, map, sumBy, iterate } from \"./Seq.js\";\nimport { type } from \"./Reflection.js\";\nimport { equals, getItemFromDict, tryGetValue } from \"./Util.js\";\nimport { toText, printf } from \"./String.js\";\nexport var MutableMap$00602 = declare(function Fable_Collections_MutableMap(pairs, comparer) {\n  var $this$$1 = this;\n  var this$ = new FSharpRef(null);\n  $this$$1.comparer = comparer;\n  this$.contents = $this$$1;\n  $this$$1[\"entries@23\"] = new Map([]);\n  $this$$1[\"init@20-1\"] = 1;\n  iterate(function (pair) {\n    MutableMap$00602$$Add$$5BDDA1(this$.contents, pair[0], pair[1]);\n  }, pairs);\n});\nexport function MutableMap$00602$reflection($gen$$4, $gen$$5) {\n  return type(\"Fable.Collections.MutableMap`2\", [$gen$$4, $gen$$5]);\n}\nexport function MutableMap$00602$$$$002Ector$$6623D9B3(pairs, comparer) {\n  return this instanceof MutableMap$00602 ? MutableMap$00602.call(this, pairs, comparer) : new MutableMap$00602(pairs, comparer);\n}\n\nfunction MutableMap$00602$$TryFindIndex$$2B595(this$$$1, k) {\n  var h = this$$$1.comparer.GetHashCode(k) | 0;\n  var matchValue = tryGetValue(this$$$1[\"entries@23\"], h, null);\n\n  if (matchValue[0]) {\n    return [true, h, matchValue[1].findIndex(function (pair$$1) {\n      return this$$$1.comparer.Equals(k, pair$$1[0]);\n    })];\n  } else {\n    return [false, h, -1];\n  }\n}\n\nexport function MutableMap$00602$$TryFind$$2B595(this$$$2, k$$1) {\n  var matchValue$$1 = MutableMap$00602$$TryFindIndex$$2B595(this$$$2, k$$1);\n  var $target$$10;\n\n  if (matchValue$$1[0]) {\n    if (matchValue$$1[2] > -1) {\n      $target$$10 = 0;\n    } else {\n      $target$$10 = 1;\n    }\n  } else {\n    $target$$10 = 1;\n  }\n\n  switch ($target$$10) {\n    case 0:\n      {\n        return getItemFromDict(this$$$2[\"entries@23\"], matchValue$$1[1])[matchValue$$1[2]];\n      }\n\n    case 1:\n      {\n        return null;\n      }\n  }\n}\nexport function MutableMap$00602$$get_Comparer(this$$$3) {\n  return this$$$3.comparer;\n}\nexport function MutableMap$00602$$Clear(this$$$4) {\n  this$$$4[\"entries@23\"].clear();\n}\nexport function MutableMap$00602$$get_Count(this$$$5) {\n  var source = this$$$5[\"entries@23\"].values();\n  return sumBy(function projection(pairs$$2) {\n    return pairs$$2.length;\n  }, source, {\n    GetZero: function GetZero() {\n      return 0;\n    },\n    Add: function Add($x$$2, $y$$3) {\n      return $x$$2 + $y$$3;\n    }\n  }) | 0;\n}\nexport function MutableMap$00602$$get_Item$$2B595(this$$$6, k$$2) {\n  var matchValue$$2 = MutableMap$00602$$TryFind$$2B595(this$$$6, k$$2);\n\n  if (matchValue$$2 != null) {\n    var pair$$2 = matchValue$$2;\n    return pair$$2[1];\n  } else {\n    throw new Error(\"The item was not found in collection\");\n  }\n}\nexport function MutableMap$00602$$set_Item$$5BDDA1(this$$$7, k$$3, v) {\n  var matchValue$$3 = MutableMap$00602$$TryFindIndex$$2B595(this$$$7, k$$3);\n  var $target$$20;\n\n  if (matchValue$$3[0]) {\n    if (matchValue$$3[2] > -1) {\n      $target$$20 = 0;\n    } else {\n      $target$$20 = 1;\n    }\n  } else {\n    $target$$20 = 1;\n  }\n\n  switch ($target$$20) {\n    case 0:\n      {\n        getItemFromDict(this$$$7[\"entries@23\"], matchValue$$3[1])[matchValue$$3[2]] = [k$$3, v];\n        break;\n      }\n\n    case 1:\n      {\n        if (matchValue$$3[0]) {\n          var value = getItemFromDict(this$$$7[\"entries@23\"], matchValue$$3[1]).push([k$$3, v]);\n          null, null;\n        } else {\n          this$$$7[\"entries@23\"].set(matchValue$$3[1], [[k$$3, v]]);\n        }\n\n        break;\n      }\n  }\n}\nexport function MutableMap$00602$$Add$$5BDDA1(this$$$8, k$$4, v$$1) {\n  var matchValue$$4 = MutableMap$00602$$TryFindIndex$$2B595(this$$$8, k$$4);\n  var $target$$24;\n\n  if (matchValue$$4[0]) {\n    if (matchValue$$4[2] > -1) {\n      $target$$24 = 0;\n    } else {\n      $target$$24 = 1;\n    }\n  } else {\n    $target$$24 = 1;\n  }\n\n  switch ($target$$24) {\n    case 0:\n      {\n        var msg;\n        var clo1 = toText(printf(\"An item with the same key has already been added. Key: %A\"));\n        msg = clo1(k$$4);\n        throw new Error(msg);\n        break;\n      }\n\n    case 1:\n      {\n        if (matchValue$$4[0]) {\n          var value$$1 = getItemFromDict(this$$$8[\"entries@23\"], matchValue$$4[1]).push([k$$4, v$$1]);\n          null, null;\n        } else {\n          this$$$8[\"entries@23\"].set(matchValue$$4[1], [[k$$4, v$$1]]);\n        }\n\n        break;\n      }\n  }\n}\nexport function MutableMap$00602$$ContainsKey$$2B595(this$$$9, k$$5) {\n  var matchValue$$5 = MutableMap$00602$$TryFindIndex$$2B595(this$$$9, k$$5);\n  var $target$$27;\n\n  if (matchValue$$5[0]) {\n    if (matchValue$$5[2] > -1) {\n      $target$$27 = 0;\n    } else {\n      $target$$27 = 1;\n    }\n  } else {\n    $target$$27 = 1;\n  }\n\n  switch ($target$$27) {\n    case 0:\n      {\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n}\nexport function MutableMap$00602$$Remove$$2B595(this$$$10, k$$6) {\n  var matchValue$$6 = MutableMap$00602$$TryFindIndex$$2B595(this$$$10, k$$6);\n  var $target$$30;\n\n  if (matchValue$$6[0]) {\n    if (matchValue$$6[2] > -1) {\n      $target$$30 = 0;\n    } else {\n      $target$$30 = 1;\n    }\n  } else {\n    $target$$30 = 1;\n  }\n\n  switch ($target$$30) {\n    case 0:\n      {\n        getItemFromDict(this$$$10[\"entries@23\"], matchValue$$6[1]).splice(matchValue$$6[2], 1);\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n}\n\nMutableMap$00602.prototype[Symbol.iterator] = function () {\n  var elems;\n  var this$$$11 = this;\n  return toIterator((elems = delay(function () {\n    return collect(function (pairs$$3) {\n      return map(function (pair$$3) {\n        return pair$$3;\n      }, pairs$$3);\n    }, this$$$11[\"entries@23\"].values());\n  }), getEnumerator(elems)));\n};\n\nMutableMap$00602.prototype.Add = function (item) {\n  var this$$$12 = this;\n  MutableMap$00602$$Add$$5BDDA1(this$$$12, item[0], item[1]);\n};\n\nMutableMap$00602.prototype.Clear = function () {\n  var this$$$13 = this;\n  MutableMap$00602$$Clear(this$$$13);\n};\n\nMutableMap$00602.prototype.Contains = function (item$$1) {\n  var p;\n  var this$$$14 = this;\n  var matchValue$$7 = MutableMap$00602$$TryFind$$2B595(this$$$14, item$$1[0]);\n  var $target$$31;\n\n  if (matchValue$$7 != null) {\n    if (p = matchValue$$7, equals(p[1], item$$1[1])) {\n      $target$$31 = 0;\n    } else {\n      $target$$31 = 1;\n    }\n  } else {\n    $target$$31 = 1;\n  }\n\n  switch ($target$$31) {\n    case 0:\n      {\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n};\n\nMutableMap$00602.prototype.CopyTo = function (array, arrayIndex) {\n  var this$$$15 = this;\n  iterateIndexed(function action(i$$10, e) {\n    array[arrayIndex + i$$10] = e;\n  }, this$$$15);\n};\n\nObject.defineProperty(MutableMap$00602.prototype, \"Count\", {\n  \"get\": function get() {\n    var this$$$16 = this;\n    return MutableMap$00602$$get_Count(this$$$16) | 0;\n  }\n});\nObject.defineProperty(MutableMap$00602.prototype, \"IsReadOnly\", {\n  \"get\": function get() {\n    return false;\n  }\n});\n\nMutableMap$00602.prototype.Remove = function (item$$2) {\n  var this$$$18 = this;\n  var matchValue$$8 = MutableMap$00602$$TryFind$$2B595(this$$$18, item$$2[0]);\n\n  if (matchValue$$8 != null) {\n    var pair$$4 = matchValue$$8;\n\n    if (equals(pair$$4[1], item$$2[1])) {\n      var value$$2 = MutableMap$00602$$Remove$$2B595(this$$$18, item$$2[0]);\n      value$$2, null;\n    }\n\n    return true;\n  } else {\n    return false;\n  }\n};\n\nObject.defineProperty(MutableMap$00602.prototype, \"size\", {\n  \"get\": function get() {\n    var this$$$19 = this;\n    return MutableMap$00602$$get_Count(this$$$19) | 0;\n  }\n});\n\nMutableMap$00602.prototype.clear = function () {\n  var this$$$20 = this;\n  MutableMap$00602$$Clear(this$$$20);\n};\n\nMutableMap$00602.prototype[\"delete\"] = function (k$$7) {\n  var this$$$21 = this;\n  return MutableMap$00602$$Remove$$2B595(this$$$21, k$$7);\n};\n\nMutableMap$00602.prototype.entries = function () {\n  var this$$$22 = this;\n  return map(function mapping(x) {\n    return x;\n  }, this$$$22);\n};\n\nMutableMap$00602.prototype.get = function (k$$8) {\n  var this$$$23 = this;\n  return MutableMap$00602$$get_Item$$2B595(this$$$23, k$$8);\n};\n\nMutableMap$00602.prototype.has = function (k$$9) {\n  var this$$$24 = this;\n  return MutableMap$00602$$ContainsKey$$2B595(this$$$24, k$$9);\n};\n\nMutableMap$00602.prototype.keys = function () {\n  var this$$$25 = this;\n  return map(function mapping$$1(pair$$5) {\n    return pair$$5[0];\n  }, this$$$25);\n};\n\nMutableMap$00602.prototype.set = function (k$$10, v$$2) {\n  var this$$$26 = this;\n  MutableMap$00602$$set_Item$$5BDDA1(this$$$26, k$$10, v$$2);\n  return this$$$26;\n};\n\nMutableMap$00602.prototype.values = function () {\n  var this$$$27 = this;\n  return map(function mapping$$2(pair$$6) {\n    return pair$$6[1];\n  }, this$$$27);\n};","import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.date.to-string\";\nimport \"core-js/modules/es.object.define-property\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Record, List, declare, Union } from \"./Types.js\";\nimport { type, record, bool, list, union, int32 } from \"./Reflection.js\";\nimport { value as value$$3, some } from \"./Option.js\";\nimport { iterate as iterate$$1, empty as empty$$1, toIterator, map as map$$2, unfold, getEnumerator, fold as fold$$1 } from \"./Seq.js\";\nimport { compare, structuralHash, isDisposable } from \"./Util.js\";\nimport { join, toText, printf } from \"./String.js\";\nimport { MutableMap$00602$$$$002Ector$$6623D9B3 as MutableMap$002400602$0024$0024$0024$0024002Ector$0024$00246623D9B3 } from \"./MutableMap\";\nexport var MapTree$00602 = declare(function Map_MapTree(tag, name) {\n  for (var _len = arguments.length, fields = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    fields[_key - 2] = arguments[_key];\n  }\n\n  Union.call.apply(Union, [this, tag, name].concat(fields));\n}, Union);\nexport function MapTree$00602$reflection($gen$$3, $gen$$4) {\n  return union(\"Map.MapTree`2\", [$gen$$3, $gen$$4], MapTree$00602, function () {\n    return [\"MapEmpty\", [\"MapOne\", [$gen$$3, $gen$$4]], [\"MapNode\", [$gen$$3, $gen$$4, MapTree$00602$reflection($gen$$3, $gen$$4), MapTree$00602$reflection($gen$$3, $gen$$4), int32]]];\n  });\n}\nexport function MapTreeModule$$$sizeAux($acc$$5, $m$$6) {\n  MapTreeModule$$$sizeAux: while (true) {\n    var acc = $acc$$5,\n        m = $m$$6;\n\n    switch (m.tag) {\n      case 1:\n        {\n          return acc + 1 | 0;\n        }\n\n      case 2:\n        {\n          $acc$$5 = MapTreeModule$$$sizeAux(acc + 1, m.fields[2]);\n          $m$$6 = m.fields[3];\n          continue MapTreeModule$$$sizeAux;\n        }\n\n      default:\n        {\n          return acc | 0;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$size(x) {\n  return MapTreeModule$$$sizeAux(0, x);\n}\nexport function MapTreeModule$$$empty() {\n  return new MapTree$00602(0, \"MapEmpty\");\n}\nexport function MapTreeModule$$$height(_arg1) {\n  switch (_arg1.tag) {\n    case 1:\n      {\n        return 1;\n      }\n\n    case 2:\n      {\n        return _arg1.fields[4] | 0;\n      }\n\n    default:\n      {\n        return 0;\n      }\n  }\n}\nexport function MapTreeModule$$$isEmpty(m$$1) {\n  if (m$$1.tag === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function MapTreeModule$$$mk(l$$1, k, v, r$$1) {\n  var $target$$14;\n\n  if (l$$1.tag === 0) {\n    if (r$$1.tag === 0) {\n      $target$$14 = 0;\n    } else {\n      $target$$14 = 1;\n    }\n  } else {\n    $target$$14 = 1;\n  }\n\n  switch ($target$$14) {\n    case 0:\n      {\n        return new MapTree$00602(1, \"MapOne\", k, v);\n      }\n\n    case 1:\n      {\n        var hl = MapTreeModule$$$height(l$$1) | 0;\n        var hr = MapTreeModule$$$height(r$$1) | 0;\n        var m$$2 = (hl < hr ? hr : hl) | 0;\n        return new MapTree$00602(2, \"MapNode\", k, v, l$$1, r$$1, m$$2 + 1);\n      }\n  }\n}\nexport function MapTreeModule$$$rebalance(t1, k$$1, v$$1, t2) {\n  var t1h = MapTreeModule$$$height(t1) | 0;\n  var t2h = MapTreeModule$$$height(t2) | 0;\n\n  if (t2h > t1h + 2) {\n    if (t2.tag === 2) {\n      if (MapTreeModule$$$height(t2.fields[2]) > t1h + 1) {\n        if (t2.fields[2].tag === 2) {\n          return MapTreeModule$$$mk(MapTreeModule$$$mk(t1, k$$1, v$$1, t2.fields[2].fields[2]), t2.fields[2].fields[0], t2.fields[2].fields[1], MapTreeModule$$$mk(t2.fields[2].fields[3], t2.fields[0], t2.fields[1], t2.fields[3]));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return MapTreeModule$$$mk(MapTreeModule$$$mk(t1, k$$1, v$$1, t2.fields[2]), t2.fields[0], t2.fields[1], t2.fields[3]);\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else if (t1h > t2h + 2) {\n    if (t1.tag === 2) {\n      if (MapTreeModule$$$height(t1.fields[3]) > t2h + 1) {\n        if (t1.fields[3].tag === 2) {\n          return MapTreeModule$$$mk(MapTreeModule$$$mk(t1.fields[2], t1.fields[0], t1.fields[1], t1.fields[3].fields[2]), t1.fields[3].fields[0], t1.fields[3].fields[1], MapTreeModule$$$mk(t1.fields[3].fields[3], k$$1, v$$1, t2));\n        } else {\n          throw new Error(\"re  balance\");\n        }\n      } else {\n        return MapTreeModule$$$mk(t1.fields[2], t1.fields[0], t1.fields[1], MapTreeModule$$$mk(t1.fields[3], k$$1, v$$1, t2));\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else {\n    return MapTreeModule$$$mk(t1, k$$1, v$$1, t2);\n  }\n}\nexport function MapTreeModule$$$add(comparer, k$$2, v$$2, m$$3) {\n  switch (m$$3.tag) {\n    case 1:\n      {\n        var c = comparer.Compare(k$$2, m$$3.fields[0]) | 0;\n\n        if (c < 0) {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, new MapTree$00602(0, \"MapEmpty\"), m$$3, 2);\n        } else if (c === 0) {\n          return new MapTree$00602(1, \"MapOne\", k$$2, v$$2);\n        } else {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, m$$3, new MapTree$00602(0, \"MapEmpty\"), 2);\n        }\n      }\n\n    case 2:\n      {\n        var c$$1 = comparer.Compare(k$$2, m$$3.fields[0]) | 0;\n\n        if (c$$1 < 0) {\n          return MapTreeModule$$$rebalance(MapTreeModule$$$add(comparer, k$$2, v$$2, m$$3.fields[2]), m$$3.fields[0], m$$3.fields[1], m$$3.fields[3]);\n        } else if (c$$1 === 0) {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, m$$3.fields[2], m$$3.fields[3], m$$3.fields[4]);\n        } else {\n          return MapTreeModule$$$rebalance(m$$3.fields[2], m$$3.fields[0], m$$3.fields[1], MapTreeModule$$$add(comparer, k$$2, v$$2, m$$3.fields[3]));\n        }\n      }\n\n    default:\n      {\n        return new MapTree$00602(1, \"MapOne\", k$$2, v$$2);\n      }\n  }\n}\nexport function MapTreeModule$$$find($comparer$$1$$23, $k$$3$$24, $m$$4$$25) {\n  MapTreeModule$$$find: while (true) {\n    var comparer$$1 = $comparer$$1$$23,\n        k$$3 = $k$$3$$24,\n        m$$4 = $m$$4$$25;\n\n    switch (m$$4.tag) {\n      case 1:\n        {\n          var c$$2 = comparer$$1.Compare(k$$3, m$$4.fields[0]) | 0;\n\n          if (c$$2 === 0) {\n            return m$$4.fields[1];\n          } else {\n            throw new Error(\"key not found\");\n          }\n        }\n\n      case 2:\n        {\n          var c$$3 = comparer$$1.Compare(k$$3, m$$4.fields[0]) | 0;\n\n          if (c$$3 < 0) {\n            $comparer$$1$$23 = comparer$$1;\n            $k$$3$$24 = k$$3;\n            $m$$4$$25 = m$$4.fields[2];\n            continue MapTreeModule$$$find;\n          } else if (c$$3 === 0) {\n            return m$$4.fields[1];\n          } else {\n            $comparer$$1$$23 = comparer$$1;\n            $k$$3$$24 = k$$3;\n            $m$$4$$25 = m$$4.fields[3];\n            continue MapTreeModule$$$find;\n          }\n        }\n\n      default:\n        {\n          throw new Error(\"key not found\");\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$tryFind($comparer$$2$$26, $k$$4$$27, $m$$5$$28) {\n  MapTreeModule$$$tryFind: while (true) {\n    var comparer$$2 = $comparer$$2$$26,\n        k$$4 = $k$$4$$27,\n        m$$5 = $m$$5$$28;\n\n    switch (m$$5.tag) {\n      case 1:\n        {\n          var c$$4 = comparer$$2.Compare(k$$4, m$$5.fields[0]) | 0;\n\n          if (c$$4 === 0) {\n            return some(m$$5.fields[1]);\n          } else {\n            return null;\n          }\n        }\n\n      case 2:\n        {\n          var c$$5 = comparer$$2.Compare(k$$4, m$$5.fields[0]) | 0;\n\n          if (c$$5 < 0) {\n            $comparer$$2$$26 = comparer$$2;\n            $k$$4$$27 = k$$4;\n            $m$$5$$28 = m$$5.fields[2];\n            continue MapTreeModule$$$tryFind;\n          } else if (c$$5 === 0) {\n            return some(m$$5.fields[1]);\n          } else {\n            $comparer$$2$$26 = comparer$$2;\n            $k$$4$$27 = k$$4;\n            $m$$5$$28 = m$$5.fields[3];\n            continue MapTreeModule$$$tryFind;\n          }\n        }\n\n      default:\n        {\n          return null;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$partition1(comparer$$3, f, k$$5, v$$3, acc1, acc2) {\n  if (f(k$$5, v$$3)) {\n    return [MapTreeModule$$$add(comparer$$3, k$$5, v$$3, acc1), acc2];\n  } else {\n    return [acc1, MapTreeModule$$$add(comparer$$3, k$$5, v$$3, acc2)];\n  }\n}\nexport function MapTreeModule$$$partitionAux($comparer$$4$$35, $f$$1$$36, $s$$37, $acc_0$$38, $acc_1$$39) {\n  MapTreeModule$$$partitionAux: while (true) {\n    var comparer$$4 = $comparer$$4$$35,\n        f$$1 = $f$$1$$36,\n        s = $s$$37,\n        acc_0 = $acc_0$$38,\n        acc_1 = $acc_1$$39;\n\n    switch (s.tag) {\n      case 1:\n        {\n          return MapTreeModule$$$partition1(comparer$$4, f$$1, s.fields[0], s.fields[1], acc_0, acc_1);\n        }\n\n      case 2:\n        {\n          var acc$$2 = MapTreeModule$$$partitionAux(comparer$$4, f$$1, s.fields[3], acc_0, acc_1);\n          var acc$$3 = MapTreeModule$$$partition1(comparer$$4, f$$1, s.fields[0], s.fields[1], acc$$2[0], acc$$2[1]);\n          $comparer$$4$$35 = comparer$$4;\n          $f$$1$$36 = f$$1;\n          $s$$37 = s.fields[2];\n          $acc_0$$38 = acc$$3[0];\n          $acc_1$$39 = acc$$3[1];\n          continue MapTreeModule$$$partitionAux;\n        }\n\n      default:\n        {\n          return [acc_0, acc_1];\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$partition(comparer$$5, f$$2, s$$1) {\n  return MapTreeModule$$$partitionAux(comparer$$5, f$$2, s$$1, MapTreeModule$$$empty(), MapTreeModule$$$empty());\n}\nexport function MapTreeModule$$$filter1(comparer$$6, f$$3, k$$8, v$$6, acc$$4) {\n  if (f$$3(k$$8, v$$6)) {\n    return MapTreeModule$$$add(comparer$$6, k$$8, v$$6, acc$$4);\n  } else {\n    return acc$$4;\n  }\n}\nexport function MapTreeModule$$$filterAux($comparer$$7$$48, $f$$4$$49, $s$$2$$50, $acc$$5$$51) {\n  MapTreeModule$$$filterAux: while (true) {\n    var comparer$$7 = $comparer$$7$$48,\n        f$$4 = $f$$4$$49,\n        s$$2 = $s$$2$$50,\n        acc$$5 = $acc$$5$$51;\n\n    switch (s$$2.tag) {\n      case 1:\n        {\n          return MapTreeModule$$$filter1(comparer$$7, f$$4, s$$2.fields[0], s$$2.fields[1], acc$$5);\n        }\n\n      case 2:\n        {\n          var acc$$6 = MapTreeModule$$$filterAux(comparer$$7, f$$4, s$$2.fields[2], acc$$5);\n          var acc$$7 = MapTreeModule$$$filter1(comparer$$7, f$$4, s$$2.fields[0], s$$2.fields[1], acc$$6);\n          $comparer$$7$$48 = comparer$$7;\n          $f$$4$$49 = f$$4;\n          $s$$2$$50 = s$$2.fields[3];\n          $acc$$5$$51 = acc$$7;\n          continue MapTreeModule$$$filterAux;\n        }\n\n      default:\n        {\n          return acc$$5;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$filter(comparer$$8, f$$5, s$$3) {\n  return MapTreeModule$$$filterAux(comparer$$8, f$$5, s$$3, MapTreeModule$$$empty());\n}\nexport function MapTreeModule$$$spliceOutSuccessor(m$$6) {\n  switch (m$$6.tag) {\n    case 1:\n      {\n        return [m$$6.fields[0], m$$6.fields[1], new MapTree$00602(0, \"MapEmpty\")];\n      }\n\n    case 2:\n      {\n        if (m$$6.fields[2].tag === 0) {\n          return [m$$6.fields[0], m$$6.fields[1], m$$6.fields[3]];\n        } else {\n          var patternInput = MapTreeModule$$$spliceOutSuccessor(m$$6.fields[2]);\n          return [patternInput[0], patternInput[1], MapTreeModule$$$mk(patternInput[2], m$$6.fields[0], m$$6.fields[1], m$$6.fields[3])];\n        }\n      }\n\n    default:\n      {\n        throw new Error(\"internal error: Map.spliceOutSuccessor\");\n      }\n  }\n}\nexport function MapTreeModule$$$remove(comparer$$9, k$$11, m$$7) {\n  switch (m$$7.tag) {\n    case 1:\n      {\n        var c$$6 = comparer$$9.Compare(k$$11, m$$7.fields[0]) | 0;\n\n        if (c$$6 === 0) {\n          return new MapTree$00602(0, \"MapEmpty\");\n        } else {\n          return m$$7;\n        }\n      }\n\n    case 2:\n      {\n        var c$$7 = comparer$$9.Compare(k$$11, m$$7.fields[0]) | 0;\n\n        if (c$$7 < 0) {\n          return MapTreeModule$$$rebalance(MapTreeModule$$$remove(comparer$$9, k$$11, m$$7.fields[2]), m$$7.fields[0], m$$7.fields[1], m$$7.fields[3]);\n        } else if (c$$7 === 0) {\n          if (m$$7.fields[2].tag === 0) {\n            return m$$7.fields[3];\n          } else if (m$$7.fields[3].tag === 0) {\n            return m$$7.fields[2];\n          } else {\n            var patternInput$$1 = MapTreeModule$$$spliceOutSuccessor(m$$7.fields[3]);\n            return MapTreeModule$$$mk(m$$7.fields[2], patternInput$$1[0], patternInput$$1[1], patternInput$$1[2]);\n          }\n        } else {\n          return MapTreeModule$$$rebalance(m$$7.fields[2], m$$7.fields[0], m$$7.fields[1], MapTreeModule$$$remove(comparer$$9, k$$11, m$$7.fields[3]));\n        }\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$mem($comparer$$10$$59, $k$$12$$60, $m$$8$$61) {\n  MapTreeModule$$$mem: while (true) {\n    var comparer$$10 = $comparer$$10$$59,\n        k$$12 = $k$$12$$60,\n        m$$8 = $m$$8$$61;\n\n    switch (m$$8.tag) {\n      case 1:\n        {\n          return comparer$$10.Compare(k$$12, m$$8.fields[0]) === 0;\n        }\n\n      case 2:\n        {\n          var c$$8 = comparer$$10.Compare(k$$12, m$$8.fields[0]) | 0;\n\n          if (c$$8 < 0) {\n            $comparer$$10$$59 = comparer$$10;\n            $k$$12$$60 = k$$12;\n            $m$$8$$61 = m$$8.fields[2];\n            continue MapTreeModule$$$mem;\n          } else if (c$$8 === 0) {\n            return true;\n          } else {\n            $comparer$$10$$59 = comparer$$10;\n            $k$$12$$60 = k$$12;\n            $m$$8$$61 = m$$8.fields[3];\n            continue MapTreeModule$$$mem;\n          }\n        }\n\n      default:\n        {\n          return false;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$iter($f$$6$$62, $m$$9$$63) {\n  MapTreeModule$$$iter: while (true) {\n    var f$$6 = $f$$6$$62,\n        m$$9 = $m$$9$$63;\n\n    switch (m$$9.tag) {\n      case 1:\n        {\n          f$$6(m$$9.fields[0], m$$9.fields[1]);\n          break;\n        }\n\n      case 2:\n        {\n          MapTreeModule$$$iter(f$$6, m$$9.fields[2]);\n          f$$6(m$$9.fields[0], m$$9.fields[1]);\n          $f$$6$$62 = f$$6;\n          $m$$9$$63 = m$$9.fields[3];\n          continue MapTreeModule$$$iter;\n          break;\n        }\n\n      default:\n        {}\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$tryPick($f$$7$$64, $m$$10$$65) {\n  MapTreeModule$$$tryPick: while (true) {\n    var f$$7 = $f$$7$$64,\n        m$$10 = $m$$10$$65;\n\n    switch (m$$10.tag) {\n      case 1:\n        {\n          return f$$7(m$$10.fields[0], m$$10.fields[1]);\n        }\n\n      case 2:\n        {\n          var matchValue$$2 = MapTreeModule$$$tryPick(f$$7, m$$10.fields[2]);\n\n          if (matchValue$$2 == null) {\n            var matchValue$$3 = f$$7(m$$10.fields[0], m$$10.fields[1]);\n\n            if (matchValue$$3 == null) {\n              $f$$7$$64 = f$$7;\n              $m$$10$$65 = m$$10.fields[3];\n              continue MapTreeModule$$$tryPick;\n            } else {\n              return matchValue$$3;\n            }\n          } else {\n            return matchValue$$2;\n          }\n        }\n\n      default:\n        {\n          return null;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$exists($f$$8$$66, $m$$11$$67) {\n  MapTreeModule$$$exists: while (true) {\n    var f$$8 = $f$$8$$66,\n        m$$11 = $m$$11$$67;\n\n    switch (m$$11.tag) {\n      case 1:\n        {\n          return f$$8(m$$11.fields[0], m$$11.fields[1]);\n        }\n\n      case 2:\n        {\n          if (MapTreeModule$$$exists(f$$8, m$$11.fields[2]) ? true : f$$8(m$$11.fields[0], m$$11.fields[1])) {\n            return true;\n          } else {\n            $f$$8$$66 = f$$8;\n            $m$$11$$67 = m$$11.fields[3];\n            continue MapTreeModule$$$exists;\n          }\n        }\n\n      default:\n        {\n          return false;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$forall($f$$9$$68, $m$$12$$69) {\n  MapTreeModule$$$forall: while (true) {\n    var f$$9 = $f$$9$$68,\n        m$$12 = $m$$12$$69;\n\n    switch (m$$12.tag) {\n      case 1:\n        {\n          return f$$9(m$$12.fields[0], m$$12.fields[1]);\n        }\n\n      case 2:\n        {\n          if (MapTreeModule$$$forall(f$$9, m$$12.fields[2]) ? f$$9(m$$12.fields[0], m$$12.fields[1]) : false) {\n            $f$$9$$68 = f$$9;\n            $m$$12$$69 = m$$12.fields[3];\n            continue MapTreeModule$$$forall;\n          } else {\n            return false;\n          }\n        }\n\n      default:\n        {\n          return true;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$map(f$$10, m$$13) {\n  switch (m$$13.tag) {\n    case 1:\n      {\n        return new MapTree$00602(1, \"MapOne\", m$$13.fields[0], f$$10(m$$13.fields[1]));\n      }\n\n    case 2:\n      {\n        var l2 = MapTreeModule$$$map(f$$10, m$$13.fields[2]);\n        var v2$$16 = f$$10(m$$13.fields[1]);\n        var r2 = MapTreeModule$$$map(f$$10, m$$13.fields[3]);\n        return new MapTree$00602(2, \"MapNode\", m$$13.fields[0], v2$$16, l2, r2, m$$13.fields[4]);\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$mapi(f$$11, m$$14) {\n  switch (m$$14.tag) {\n    case 1:\n      {\n        return new MapTree$00602(1, \"MapOne\", m$$14.fields[0], f$$11(m$$14.fields[0], m$$14.fields[1]));\n      }\n\n    case 2:\n      {\n        var l2$$1 = MapTreeModule$$$mapi(f$$11, m$$14.fields[2]);\n        var v2$$17 = f$$11(m$$14.fields[0], m$$14.fields[1]);\n        var r2$$1 = MapTreeModule$$$mapi(f$$11, m$$14.fields[3]);\n        return new MapTree$00602(2, \"MapNode\", m$$14.fields[0], v2$$17, l2$$1, r2$$1, m$$14.fields[4]);\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$foldBack($f$$12$$74, $m$$15$$75, $x$$1$$76) {\n  MapTreeModule$$$foldBack: while (true) {\n    var f$$12 = $f$$12$$74,\n        m$$15 = $m$$15$$75,\n        x$$1 = $x$$1$$76;\n\n    switch (m$$15.tag) {\n      case 1:\n        {\n          return f$$12(m$$15.fields[0], m$$15.fields[1], x$$1);\n        }\n\n      case 2:\n        {\n          var x$$2 = MapTreeModule$$$foldBack(f$$12, m$$15.fields[3], x$$1);\n          var x$$3 = f$$12(m$$15.fields[0], m$$15.fields[1], x$$2);\n          $f$$12$$74 = f$$12;\n          $m$$15$$75 = m$$15.fields[2];\n          $x$$1$$76 = x$$3;\n          continue MapTreeModule$$$foldBack;\n        }\n\n      default:\n        {\n          return x$$1;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$fold($f$$13$$77, $x$$4$$78, $m$$16$$79) {\n  MapTreeModule$$$fold: while (true) {\n    var f$$13 = $f$$13$$77,\n        x$$4 = $x$$4$$78,\n        m$$16 = $m$$16$$79;\n\n    switch (m$$16.tag) {\n      case 1:\n        {\n          return f$$13(x$$4, m$$16.fields[0], m$$16.fields[1]);\n        }\n\n      case 2:\n        {\n          var x$$5 = MapTreeModule$$$fold(f$$13, x$$4, m$$16.fields[2]);\n          var x$$6 = f$$13(x$$5, m$$16.fields[0], m$$16.fields[1]);\n          $f$$13$$77 = f$$13;\n          $x$$4$$78 = x$$6;\n          $m$$16$$79 = m$$16.fields[3];\n          continue MapTreeModule$$$fold;\n        }\n\n      default:\n        {\n          return x$$4;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, m$$17, x$$7) {\n  switch (m$$17.tag) {\n    case 1:\n      {\n        var cLoKey = comparer$$11.Compare(lo, m$$17.fields[0]) | 0;\n        var cKeyHi = comparer$$11.Compare(m$$17.fields[0], hi) | 0;\n        var x$$8 = (cLoKey <= 0 ? cKeyHi <= 0 : false) ? f$$14(m$$17.fields[0], m$$17.fields[1], x$$7) : x$$7;\n        return x$$8;\n      }\n\n    case 2:\n      {\n        var cLoKey$$1 = comparer$$11.Compare(lo, m$$17.fields[0]) | 0;\n        var cKeyHi$$1 = comparer$$11.Compare(m$$17.fields[0], hi) | 0;\n        var x$$9 = cLoKey$$1 < 0 ? MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, m$$17.fields[2], x$$7) : x$$7;\n        var x$$10 = (cLoKey$$1 <= 0 ? cKeyHi$$1 <= 0 : false) ? f$$14(m$$17.fields[0], m$$17.fields[1], x$$9) : x$$9;\n        var x$$11 = cKeyHi$$1 < 0 ? MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, m$$17.fields[3], x$$10) : x$$10;\n        return x$$11;\n      }\n\n    default:\n      {\n        return x$$7;\n      }\n  }\n}\nexport function MapTreeModule$$$foldSection(comparer$$12, lo$$1, hi$$1, f$$15, m$$18, x$$12) {\n  if (comparer$$12.Compare(lo$$1, hi$$1) === 1) {\n    return x$$12;\n  } else {\n    return MapTreeModule$$$foldFromTo(comparer$$12, lo$$1, hi$$1, f$$15, m$$18, x$$12);\n  }\n}\nexport function MapTreeModule$$$loop($m$$19$$92, $acc$$8$$93) {\n  MapTreeModule$$$loop: while (true) {\n    var m$$19 = $m$$19$$92,\n        acc$$8 = $acc$$8$$93;\n\n    switch (m$$19.tag) {\n      case 1:\n        {\n          return new List([m$$19.fields[0], m$$19.fields[1]], acc$$8);\n        }\n\n      case 2:\n        {\n          $m$$19$$92 = m$$19.fields[2];\n          $acc$$8$$93 = new List([m$$19.fields[0], m$$19.fields[1]], MapTreeModule$$$loop(m$$19.fields[3], acc$$8));\n          continue MapTreeModule$$$loop;\n        }\n\n      default:\n        {\n          return acc$$8;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$toList(m$$20) {\n  return MapTreeModule$$$loop(m$$20, new List());\n}\nexport function MapTreeModule$$$ofList(comparer$$13, l$$20) {\n  return fold$$1(function (acc$$9, tupledArg) {\n    return MapTreeModule$$$add(comparer$$13, tupledArg[0], tupledArg[1], acc$$9);\n  }, MapTreeModule$$$empty(), l$$20);\n}\nexport function MapTreeModule$$$mkFromEnumerator($comparer$$14$$97, $acc$$10$$98, $e$$99) {\n  MapTreeModule$$$mkFromEnumerator: while (true) {\n    var comparer$$14 = $comparer$$14$$97,\n        acc$$10 = $acc$$10$$98,\n        e = $e$$99;\n\n    if (e.MoveNext()) {\n      var patternInput$$2 = e.Current;\n      $comparer$$14$$97 = comparer$$14;\n      $acc$$10$$98 = MapTreeModule$$$add(comparer$$14, patternInput$$2[0], patternInput$$2[1], acc$$10);\n      $e$$99 = e;\n      continue MapTreeModule$$$mkFromEnumerator;\n    } else {\n      return acc$$10;\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$ofArray(comparer$$15, arr) {\n  var res$$2 = MapTreeModule$$$empty();\n\n  for (var i = 0; i <= arr.length - 1; i++) {\n    var patternInput$$3 = arr[i];\n    res$$2 = MapTreeModule$$$add(comparer$$15, patternInput$$3[0], patternInput$$3[1], res$$2);\n  }\n\n  return res$$2;\n}\nexport function MapTreeModule$$$ofSeq(comparer$$16, c$$9) {\n  var ie = getEnumerator(c$$9);\n\n  try {\n    return MapTreeModule$$$mkFromEnumerator(comparer$$16, MapTreeModule$$$empty(), ie);\n  } finally {\n    if (isDisposable(ie)) {\n      ie.Dispose();\n    }\n  }\n}\nexport function MapTreeModule$$$copyToArray(s$$4, arr$$1, i$$1) {\n  var j = i$$1 | 0;\n  MapTreeModule$$$iter(function f$$16(x$$15, y$$2) {\n    arr$$1[j] = [x$$15, y$$2];\n    j = j + 1;\n  }, s$$4);\n}\nexport var MapTreeModule$002EMapIterator$00602 = declare(function Map_MapTreeModule_MapIterator(arg1, arg2) {\n  this.stack = arg1;\n  this.started = arg2;\n}, Record);\nexport function MapTreeModule$002EMapIterator$00602$reflection($gen$$109, $gen$$110) {\n  return record(\"Map.MapTreeModule.MapIterator`2\", [$gen$$109, $gen$$110], MapTreeModule$002EMapIterator$00602, function () {\n    return [[\"stack\", list(MapTree$00602$reflection($gen$$109, $gen$$110))], [\"started\", bool]];\n  });\n}\nexport function MapTreeModule$$$collapseLHS($stack$$111) {\n  MapTreeModule$$$collapseLHS: while (true) {\n    var stack = $stack$$111;\n\n    if (stack.tail != null) {\n      if (stack.head.tag === 1) {\n        return stack;\n      } else if (stack.head.tag === 2) {\n        $stack$$111 = new List(stack.head.fields[2], new List(new MapTree$00602(1, \"MapOne\", stack.head.fields[0], stack.head.fields[1]), new List(stack.head.fields[3], stack.tail)));\n        continue MapTreeModule$$$collapseLHS;\n      } else {\n        $stack$$111 = stack.tail;\n        continue MapTreeModule$$$collapseLHS;\n      }\n    } else {\n      return new List();\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$mkIterator(s$$5) {\n  return new MapTreeModule$002EMapIterator$00602(MapTreeModule$$$collapseLHS(new List(s$$5, new List())), false);\n}\nexport function MapTreeModule$$$notStarted() {\n  throw new Error(\"enumeration not started\");\n}\nexport function MapTreeModule$$$alreadyFinished() {\n  throw new Error(\"enumeration already finished\");\n}\nexport function MapTreeModule$$$current(i$$2) {\n  if (i$$2.started) {\n    var matchValue$$4 = i$$2.stack;\n\n    if (matchValue$$4.tail == null) {\n      return MapTreeModule$$$alreadyFinished();\n    } else if (matchValue$$4.head.tag === 1) {\n      return [matchValue$$4.head.fields[0], matchValue$$4.head.fields[1]];\n    } else {\n      throw new Error(\"Please report error: Map iterator, unexpected stack for current\");\n    }\n  } else {\n    return MapTreeModule$$$notStarted();\n  }\n}\nexport function MapTreeModule$$$moveNext(i$$3) {\n  if (i$$3.started) {\n    var matchValue$$5 = i$$3.stack;\n\n    if (matchValue$$5.tail == null) {\n      return false;\n    } else if (matchValue$$5.head.tag === 1) {\n      i$$3.stack = MapTreeModule$$$collapseLHS(matchValue$$5.tail);\n      return !(i$$3.stack.tail == null);\n    } else {\n      throw new Error(\"Please report error: Map iterator, unexpected stack for moveNext\");\n    }\n  } else {\n    i$$3.started = true;\n    return !(i$$3.stack.tail == null);\n  }\n}\nexport var MapTreeModule$002EmkIEnumerator$0027$00602 = declare(function Map_MapTreeModule_mkIEnumerator_(s$$6) {\n  var $this$$1 = this;\n  $this$$1.s = s$$6;\n  $this$$1.i = MapTreeModule$$$mkIterator($this$$1.s);\n});\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$reflection($gen$$115, $gen$$116) {\n  return type(\"Map.MapTreeModule.mkIEnumerator'`2\", [$gen$$115, $gen$$116]);\n}\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C(s$$6) {\n  return this instanceof MapTreeModule$002EmkIEnumerator$0027$00602 ? MapTreeModule$002EmkIEnumerator$0027$00602.call(this, s$$6) : new MapTreeModule$002EmkIEnumerator$0027$00602(s$$6);\n}\nObject.defineProperty(MapTreeModule$002EmkIEnumerator$0027$00602.prototype, \"Current\", {\n  \"get\": function get() {\n    var __ = this;\n\n    return MapTreeModule$$$current(__.i);\n  }\n});\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.MoveNext = function () {\n  var __$$1 = this;\n\n  return MapTreeModule$$$moveNext(__$$1.i);\n};\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.Reset = function () {\n  var __$$2 = this;\n\n  __$$2.i = MapTreeModule$$$mkIterator(__$$2.s);\n};\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.Dispose = function () {};\n\nexport function MapTreeModule$$$mkIEnumerator(s$$7) {\n  return MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C(s$$7);\n}\nexport function MapTreeModule$$$toSeq(s$$8) {\n  var en = MapTreeModule$$$mkIEnumerator(s$$8);\n  return unfold(function generator(en$$1) {\n    if (en$$1.MoveNext()) {\n      return [en$$1.Current, en$$1];\n    } else {\n      return null;\n    }\n  }, en);\n}\nexport var FSharpMap = declare(function Map_Map(comparer$$17, tree) {\n  var $this$$2 = this;\n  $this$$2.comparer = comparer$$17;\n  $this$$2.tree = tree;\n});\nexport function FSharpMap$reflection($gen$$120, $gen$$121) {\n  return type(\"Map.FSharpMap\", [$gen$$120, $gen$$121]);\n}\nexport function FSharpMap$$$$002Ector$$58ADD115(comparer$$17, tree) {\n  return this instanceof FSharpMap ? FSharpMap.call(this, comparer$$17, tree) : new FSharpMap(comparer$$17, tree);\n}\nexport function FSharpMap$$get_Comparer(__$$4) {\n  return __$$4.comparer;\n}\nexport function FSharpMap$$get_Tree(__$$5) {\n  return __$$5.tree;\n}\nexport function FSharpMap$$Add$$5BDDA1(__$$6, k$$28, v$$24) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$6.comparer, MapTreeModule$$$add(__$$6.comparer, k$$28, v$$24, __$$6.tree));\n}\nexport function FSharpMap$$get_IsEmpty(__$$7) {\n  return MapTreeModule$$$isEmpty(__$$7.tree);\n}\nexport function FSharpMap$$get_Item$$2B595(__$$8, k$$29) {\n  return MapTreeModule$$$find(__$$8.comparer, k$$29, __$$8.tree);\n}\nexport function FSharpMap$$TryGetValue$$5BDDA1(__$$9, k$$30, defValue) {\n  var matchValue$$6 = MapTreeModule$$$tryFind(__$$9.comparer, k$$30, __$$9.tree);\n\n  if (matchValue$$6 == null) {\n    return [false, defValue];\n  } else {\n    var v$$25 = value$$3(matchValue$$6);\n    return [true, v$$25];\n  }\n}\nexport function FSharpMap$$TryPick$$72321DD7(__$$10, f$$17) {\n  return MapTreeModule$$$tryPick(f$$17, __$$10.tree);\n}\nexport function FSharpMap$$Exists$$Z395DDC35(__$$11, f$$18) {\n  return MapTreeModule$$$exists(f$$18, __$$11.tree);\n}\nexport function FSharpMap$$Filter$$Z395DDC35(__$$12, f$$19) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$12.comparer, MapTreeModule$$$filter(__$$12.comparer, f$$19, __$$12.tree));\n}\nexport function FSharpMap$$ForAll$$Z395DDC35(__$$13, f$$20) {\n  return MapTreeModule$$$forall(f$$20, __$$13.tree);\n}\nexport function FSharpMap$$Fold(__$$14, f$$21, acc$$11) {\n  return MapTreeModule$$$foldBack(f$$21, __$$14.tree, acc$$11);\n}\nexport function FSharpMap$$FoldSection(__$$15, lo$$2, hi$$2, f$$22, acc$$12) {\n  return MapTreeModule$$$foldSection(__$$15.comparer, lo$$2, hi$$2, f$$22, __$$15.tree, acc$$12);\n}\nexport function FSharpMap$$Iterate$$1DCFB91D(__$$16, f$$23) {\n  MapTreeModule$$$iter(f$$23, __$$16.tree);\n}\nexport function FSharpMap$$MapRange$$6DC7247(__$$17, f$$24) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$17.comparer, MapTreeModule$$$map(f$$24, __$$17.tree));\n}\nexport function FSharpMap$$Map$$Z6F6B671C(__$$18, f$$25) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$18.comparer, MapTreeModule$$$mapi(f$$25, __$$18.tree));\n}\nexport function FSharpMap$$Partition$$Z395DDC35(__$$19, f$$26) {\n  var patternInput$$4 = MapTreeModule$$$partition(__$$19.comparer, f$$26, __$$19.tree);\n  return [FSharpMap$$$$002Ector$$58ADD115(__$$19.comparer, patternInput$$4[0]), FSharpMap$$$$002Ector$$58ADD115(__$$19.comparer, patternInput$$4[1])];\n}\nexport function FSharpMap$$get_Count(__$$20) {\n  return MapTreeModule$$$size(__$$20.tree);\n}\nexport function FSharpMap$$ContainsKey$$2B595(__$$21, k$$31) {\n  return MapTreeModule$$$mem(__$$21.comparer, k$$31, __$$21.tree);\n}\nexport function FSharpMap$$Remove$$2B595(__$$22, k$$32) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$22.comparer, MapTreeModule$$$remove(__$$22.comparer, k$$32, __$$22.tree));\n}\nexport function FSharpMap$$TryFind$$2B595(__$$23, k$$33) {\n  return MapTreeModule$$$tryFind(__$$23.comparer, k$$33, __$$23.tree);\n}\nexport function FSharpMap$$ToList(__$$24) {\n  return MapTreeModule$$$toList(__$$24.tree);\n}\n\nFSharpMap.prototype.toString = function () {\n  var strings;\n  var this$ = this;\n  return \"map [\" + (strings = map$$2(function mapping(kv) {\n    var clo1 = toText(printf(\"(%A, %A)\"));\n    var clo2 = clo1(kv[0]);\n    return clo2(kv[1]);\n  }, this$), join(\"; \", strings)) + \"]\";\n};\n\nFSharpMap.prototype.GetHashCode = function () {\n  var this$$$1 = this;\n\n  var combineHash = function combineHash(x$$16, y$$3) {\n    return (x$$16 << 1) + y$$3 + 631;\n  };\n\n  var res$$3 = 0;\n  var e$$1 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(this$$$1));\n\n  while (e$$1.MoveNext()) {\n    var patternInput$$5 = e$$1.Current;\n    var activePatternResult3676 = patternInput$$5;\n    res$$3 = combineHash(res$$3, structuralHash(activePatternResult3676[0]));\n    res$$3 = combineHash(res$$3, structuralHash(activePatternResult3676[1]));\n  }\n\n  return Math.abs(res$$3) | 0;\n};\n\nFSharpMap.prototype.Equals = function (that) {\n  var this$$$2 = this;\n  return this$$$2.CompareTo(that) === 0;\n};\n\nFSharpMap.prototype[Symbol.iterator] = function () {\n  var __$$25 = this;\n\n  return toIterator(MapTreeModule$$$mkIEnumerator(__$$25.tree));\n};\n\nFSharpMap.prototype.CompareTo = function (obj) {\n  var m$$22 = this;\n  var res$$4 = 0;\n  var finished = false;\n  var e1 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(m$$22));\n\n  try {\n    var e2 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(obj));\n\n    try {\n      while (!finished ? res$$4 === 0 : false) {\n        var matchValue$$7 = [e1.MoveNext(), e2.MoveNext()];\n\n        if (matchValue$$7[0]) {\n          if (matchValue$$7[1]) {\n            var kvp1 = e1.Current;\n            var kvp2 = e2.Current;\n            var c$$10 = m$$22.comparer.Compare(kvp1[0], kvp2[0]) | 0;\n            res$$4 = c$$10 !== 0 ? c$$10 : compare(kvp1[1], kvp2[1]);\n          } else {\n            res$$4 = 1;\n          }\n        } else if (matchValue$$7[1]) {\n          res$$4 = -1;\n        } else {\n          finished = true;\n        }\n      }\n\n      return res$$4 | 0;\n    } finally {\n      if (isDisposable(e2)) {\n        e2.Dispose();\n      }\n    }\n  } finally {\n    if (isDisposable(e1)) {\n      e1.Dispose();\n    }\n  }\n};\n\nObject.defineProperty(FSharpMap.prototype, \"size\", {\n  \"get\": function get() {\n    var this$$$3 = this;\n    return FSharpMap$$get_Count(this$$$3) | 0;\n  }\n});\n\nFSharpMap.prototype.clear = function () {\n  throw new Error(\"Map cannot be mutated\");\n};\n\nFSharpMap.prototype[\"delete\"] = function (_arg1$$1) {\n  throw new Error(\"Map cannot be mutated\");\n};\n\nFSharpMap.prototype.entries = function () {\n  var this$$$4 = this;\n  return MapTreeModule$$$toSeq(FSharpMap$$get_Tree(this$$$4));\n};\n\nFSharpMap.prototype.get = function (k$$34) {\n  var this$$$5 = this;\n  return FSharpMap$$get_Item$$2B595(this$$$5, k$$34);\n};\n\nFSharpMap.prototype.has = function (k$$35) {\n  var this$$$6 = this;\n  return FSharpMap$$ContainsKey$$2B595(this$$$6, k$$35);\n};\n\nFSharpMap.prototype.keys = function () {\n  var this$$$7 = this;\n  var source$$1 = MapTreeModule$$$toSeq(FSharpMap$$get_Tree(this$$$7));\n  return map$$2(function mapping$$1(kv$$1) {\n    return kv$$1[0];\n  }, source$$1);\n};\n\nFSharpMap.prototype.set = function (k$$36, v$$26) {\n  throw new Error(\"Map cannot be mutated\");\n};\n\nFSharpMap.prototype.values = function () {\n  var this$$$8 = this;\n  var source$$2 = MapTreeModule$$$toSeq(FSharpMap$$get_Tree(this$$$8));\n  return map$$2(function mapping$$2(kv$$2) {\n    return kv$$2[1];\n  }, source$$2);\n};\n\nexport function isEmpty(m$$23) {\n  return FSharpMap$$get_IsEmpty(m$$23);\n}\nexport function add(k$$37, v$$27, m$$24) {\n  return FSharpMap$$Add$$5BDDA1(m$$24, k$$37, v$$27);\n}\nexport function find(k$$38, m$$25) {\n  return FSharpMap$$get_Item$$2B595(m$$25, k$$38);\n}\nexport function tryFind(k$$39, m$$26) {\n  return FSharpMap$$TryFind$$2B595(m$$26, k$$39);\n}\nexport function remove(k$$40, m$$27) {\n  return FSharpMap$$Remove$$2B595(m$$27, k$$40);\n}\nexport function containsKey(k$$41, m$$28) {\n  return FSharpMap$$ContainsKey$$2B595(m$$28, k$$41);\n}\nexport function iterate(f$$27, m$$29) {\n  FSharpMap$$Iterate$$1DCFB91D(m$$29, f$$27);\n}\nexport function tryPick(f$$28, m$$30) {\n  return FSharpMap$$TryPick$$72321DD7(m$$30, f$$28);\n}\nexport function pick(f$$29, m$$31) {\n  var matchValue$$8 = tryPick(f$$29, m$$31);\n\n  if (matchValue$$8 != null) {\n    var res$$5 = value$$3(matchValue$$8);\n    return res$$5;\n  } else {\n    throw new Error(\"key not found\");\n  }\n}\nexport function exists(f$$30, m$$32) {\n  return FSharpMap$$Exists$$Z395DDC35(m$$32, f$$30);\n}\nexport function filter(f$$31, m$$33) {\n  return FSharpMap$$Filter$$Z395DDC35(m$$33, f$$31);\n}\nexport function partition(f$$32, m$$34) {\n  return FSharpMap$$Partition$$Z395DDC35(m$$34, f$$32);\n}\nexport function forAll(f$$33, m$$35) {\n  return FSharpMap$$ForAll$$Z395DDC35(m$$35, f$$33);\n}\nexport function mapRange(f$$34, m$$36) {\n  return FSharpMap$$MapRange$$6DC7247(m$$36, f$$34);\n}\nexport function map(f$$35, m$$37) {\n  return FSharpMap$$Map$$Z6F6B671C(m$$37, f$$35);\n}\nexport function fold(f$$36, z, m$$38) {\n  return MapTreeModule$$$fold(f$$36, z, FSharpMap$$get_Tree(m$$38));\n}\nexport function foldBack(f$$37, m$$39, z$$1) {\n  return MapTreeModule$$$foldBack(f$$37, FSharpMap$$get_Tree(m$$39), z$$1);\n}\nexport function toSeq(m$$40) {\n  return MapTreeModule$$$toSeq(FSharpMap$$get_Tree(m$$40));\n}\nexport function findKey(f$$38, m$$41) {\n  var _arg1$$2;\n\n  var m$$42 = FSharpMap$$get_Tree(m$$41);\n  _arg1$$2 = MapTreeModule$$$tryPick(function f$$39(k$$42, v$$28) {\n    if (f$$38(k$$42, v$$28)) {\n      return some(k$$42);\n    } else {\n      return null;\n    }\n  }, m$$42);\n\n  if (_arg1$$2 == null) {\n    throw new Error(\"Key not found\");\n  } else {\n    var k$$43 = value$$3(_arg1$$2);\n    return k$$43;\n  }\n}\nexport function tryFindKey(f$$40, m$$43) {\n  var m$$44 = FSharpMap$$get_Tree(m$$43);\n  return MapTreeModule$$$tryPick(function f$$41(k$$44, v$$29) {\n    if (f$$40(k$$44, v$$29)) {\n      return some(k$$44);\n    } else {\n      return null;\n    }\n  }, m$$44);\n}\nexport function ofList(l$$22, comparer$$18) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$18, MapTreeModule$$$ofList(comparer$$18, l$$22));\n}\nexport function ofSeq(l$$23, comparer$$19) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$19, MapTreeModule$$$ofSeq(comparer$$19, l$$23));\n}\nexport function ofArray(array, comparer$$20) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$20, MapTreeModule$$$ofArray(comparer$$20, array));\n}\nexport function toList(m$$45) {\n  return FSharpMap$$ToList(m$$45);\n}\nexport function toArray(m$$46) {\n  var res$$6;\n  var len = FSharpMap$$get_Count(m$$46) | 0;\n  res$$6 = new Array(len);\n  MapTreeModule$$$copyToArray(FSharpMap$$get_Tree(m$$46), res$$6, 0);\n  return res$$6;\n}\nexport function empty(comparer$$21) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$21, new MapTree$00602(0, \"MapEmpty\"));\n}\n\nfunction createMutablePrivate(comparer$$22, tree$0027) {\n  var _ref;\n\n  var tree$$1 = tree$0027;\n  return _ref = {\n    get size() {\n      return MapTreeModule$$$size(tree$$1);\n    },\n\n    clear: function clear() {\n      tree$$1 = new MapTree$00602(0, \"MapEmpty\");\n    },\n    \"delete\": function _delete(x$$18) {\n      if (MapTreeModule$$$mem(comparer$$22, x$$18, tree$$1)) {\n        tree$$1 = MapTreeModule$$$remove(comparer$$22, x$$18, tree$$1);\n        return true;\n      } else {\n        return false;\n      }\n    },\n    entries: function entries() {\n      return MapTreeModule$$$toSeq(tree$$1);\n    },\n    get: function get(k$$45) {\n      return MapTreeModule$$$find(comparer$$22, k$$45, tree$$1);\n    },\n    has: function has(x$$19) {\n      return MapTreeModule$$$mem(comparer$$22, x$$19, tree$$1);\n    },\n    keys: function keys() {\n      var source$$3 = MapTreeModule$$$toSeq(tree$$1);\n      return map$$2(function mapping$$3(kv$$3) {\n        return kv$$3[0];\n      }, source$$3);\n    },\n    set: function set(k$$46, v$$30) {\n      var this$$$9 = this;\n      tree$$1 = MapTreeModule$$$add(comparer$$22, k$$46, v$$30, tree$$1);\n      return this$$$9;\n    },\n    values: function values() {\n      var source$$4 = MapTreeModule$$$toSeq(tree$$1);\n      return map$$2(function mapping$$4(kv$$4) {\n        return kv$$4[1];\n      }, source$$4);\n    }\n  }, _defineProperty(_ref, Symbol.iterator, function () {\n    return toIterator(MapTreeModule$$$mkIEnumerator(tree$$1));\n  }), _defineProperty(_ref, \"GetEnumerator\", function GetEnumerator() {\n    return MapTreeModule$$$mkIEnumerator(tree$$1);\n  }), _ref;\n}\n\nexport function createMutable(source$$5, comparer$$23) {\n  var map$$1 = MutableMap$002400602$0024$0024$0024$0024002Ector$0024$00246623D9B3(source$$5, comparer$$23);\n  return map$$1;\n}\nexport function groupBy(projection, xs, comparer$$24) {\n  var dict = createMutable(empty$$1(), comparer$$24);\n  iterate$$1(function (v$$31) {\n    var key = projection(v$$31);\n\n    if (dict.has(key)) {\n      dict.get(key).push(v$$31);\n    } else {\n      var value = dict.set(key, [v$$31]);\n      value, null;\n    }\n  }, xs);\n  return map$$2(function mapping$$5(kv$$5) {\n    return [kv$$5[0], kv$$5[1]];\n  }, dict);\n}\nexport function countBy(projection$$1, xs$$1, comparer$$25) {\n  var dict$$1 = createMutable(empty$$1(), comparer$$25);\n  iterate$$1(function (value$$1) {\n    var key$$1 = projection$$1(value$$1);\n    var value$$2 = dict$$1.has(key$$1) ? dict$$1.set(key$$1, dict$$1.get(key$$1) + 1) : dict$$1.set(key$$1, 1);\n    value$$2, null;\n  }, xs$$1);\n  return map$$2(function mapping$$6(kv$$6) {\n    return [kv$$6[0], kv$$6[1]];\n  }, dict$$1);\n}\nexport function count(m$$47) {\n  return FSharpMap$$get_Count(m$$47);\n}","import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.find-index\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.splice\";\nimport \"core-js/modules/es.map\";\nimport \"core-js/modules/es.object.define-property\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\nimport { declare, FSharpRef } from \"./Types.js\";\nimport { iterateIndexed, toIterator, getEnumerator, delay, collect, map, sumBy, iterate } from \"./Seq.js\";\nimport { type } from \"./Reflection.js\";\nimport { getItemFromDict, tryGetValue } from \"./Util.js\";\nimport { some } from \"./Option.js\";\nexport var MutableSet$00601 = declare(function Fable_Collections_MutableSet(items, comparer) {\n  var $this$$1 = this;\n  var this$ = new FSharpRef(null);\n  $this$$1.comparer = comparer;\n  this$.contents = $this$$1;\n  $this$$1[\"entries@24\"] = new Map([]);\n  $this$$1[\"init@21-2\"] = 1;\n  iterate(function (item) {\n    var value = MutableSet$00601$$Add$$2B595(this$.contents, item);\n    value, null;\n  }, items);\n});\nexport function MutableSet$00601$reflection($gen$$4) {\n  return type(\"Fable.Collections.MutableSet`1\", [$gen$$4]);\n}\nexport function MutableSet$00601$$$$002Ector$$Z6150332D(items, comparer) {\n  return this instanceof MutableSet$00601 ? MutableSet$00601.call(this, items, comparer) : new MutableSet$00601(items, comparer);\n}\n\nfunction MutableSet$00601$$TryFindIndex$$2B595(this$$$1, k) {\n  var h = this$$$1.comparer.GetHashCode(k) | 0;\n  var matchValue = tryGetValue(this$$$1[\"entries@24\"], h, null);\n\n  if (matchValue[0]) {\n    return [true, h, matchValue[1].findIndex(function (v) {\n      return this$$$1.comparer.Equals(k, v);\n    })];\n  } else {\n    return [false, h, -1];\n  }\n}\n\nfunction MutableSet$00601$$TryFind$$2B595(this$$$2, k$$1) {\n  var matchValue$$1 = MutableSet$00601$$TryFindIndex$$2B595(this$$$2, k$$1);\n  var $target$$9;\n\n  if (matchValue$$1[0]) {\n    if (matchValue$$1[2] > -1) {\n      $target$$9 = 0;\n    } else {\n      $target$$9 = 1;\n    }\n  } else {\n    $target$$9 = 1;\n  }\n\n  switch ($target$$9) {\n    case 0:\n      {\n        return some(getItemFromDict(this$$$2[\"entries@24\"], matchValue$$1[1])[matchValue$$1[2]]);\n      }\n\n    case 1:\n      {\n        return null;\n      }\n  }\n}\n\nexport function MutableSet$00601$$get_Comparer(this$$$3) {\n  return this$$$3.comparer;\n}\nexport function MutableSet$00601$$Clear(this$$$4) {\n  this$$$4[\"entries@24\"].clear();\n}\nexport function MutableSet$00601$$get_Count(this$$$5) {\n  var source = this$$$5[\"entries@24\"].values();\n  return sumBy(function projection(pairs) {\n    return pairs.length;\n  }, source, {\n    GetZero: function GetZero() {\n      return 0;\n    },\n    Add: function Add($x$$2, $y$$3) {\n      return $x$$2 + $y$$3;\n    }\n  }) | 0;\n}\nexport function MutableSet$00601$$Add$$2B595(this$$$6, k$$2) {\n  var matchValue$$2 = MutableSet$00601$$TryFindIndex$$2B595(this$$$6, k$$2);\n  var $target$$16;\n\n  if (matchValue$$2[0]) {\n    if (matchValue$$2[2] > -1) {\n      $target$$16 = 0;\n    } else {\n      $target$$16 = 1;\n    }\n  } else {\n    $target$$16 = 1;\n  }\n\n  switch ($target$$16) {\n    case 0:\n      {\n        return false;\n      }\n\n    case 1:\n      {\n        if (matchValue$$2[0]) {\n          var value$$1 = getItemFromDict(this$$$6[\"entries@24\"], matchValue$$2[1]).push(k$$2);\n          null, null;\n          return true;\n        } else {\n          this$$$6[\"entries@24\"].set(matchValue$$2[1], [k$$2]);\n          return true;\n        }\n      }\n  }\n}\nexport function MutableSet$00601$$Contains$$2B595(this$$$7, k$$3) {\n  var matchValue$$3 = MutableSet$00601$$TryFindIndex$$2B595(this$$$7, k$$3);\n  var $target$$19;\n\n  if (matchValue$$3[0]) {\n    if (matchValue$$3[2] > -1) {\n      $target$$19 = 0;\n    } else {\n      $target$$19 = 1;\n    }\n  } else {\n    $target$$19 = 1;\n  }\n\n  switch ($target$$19) {\n    case 0:\n      {\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n}\nexport function MutableSet$00601$$Remove$$2B595(this$$$8, k$$4) {\n  var matchValue$$4 = MutableSet$00601$$TryFindIndex$$2B595(this$$$8, k$$4);\n  var $target$$22;\n\n  if (matchValue$$4[0]) {\n    if (matchValue$$4[2] > -1) {\n      $target$$22 = 0;\n    } else {\n      $target$$22 = 1;\n    }\n  } else {\n    $target$$22 = 1;\n  }\n\n  switch ($target$$22) {\n    case 0:\n      {\n        getItemFromDict(this$$$8[\"entries@24\"], matchValue$$4[1]).splice(matchValue$$4[2], 1);\n        return true;\n      }\n\n    case 1:\n      {\n        return false;\n      }\n  }\n}\n\nMutableSet$00601.prototype[Symbol.iterator] = function () {\n  var elems;\n  var this$$$9 = this;\n  return toIterator((elems = delay(function () {\n    return collect(function (values$$1) {\n      return map(function (value$$2) {\n        return value$$2;\n      }, values$$1);\n    }, this$$$9[\"entries@24\"].values());\n  }), getEnumerator(elems)));\n};\n\nMutableSet$00601.prototype.Add = function (item$$1) {\n  var this$$$10 = this;\n  var value$$3 = MutableSet$00601$$Add$$2B595(this$$$10, item$$1);\n  value$$3, null;\n};\n\nMutableSet$00601.prototype.Clear = function () {\n  var this$$$11 = this;\n  MutableSet$00601$$Clear(this$$$11);\n};\n\nMutableSet$00601.prototype.Contains = function (item$$2) {\n  var this$$$12 = this;\n  return MutableSet$00601$$Contains$$2B595(this$$$12, item$$2);\n};\n\nMutableSet$00601.prototype.CopyTo = function (array, arrayIndex) {\n  var this$$$13 = this;\n  iterateIndexed(function action(i$$8, e) {\n    array[arrayIndex + i$$8] = e;\n  }, this$$$13);\n};\n\nObject.defineProperty(MutableSet$00601.prototype, \"Count\", {\n  \"get\": function get() {\n    var this$$$14 = this;\n    return MutableSet$00601$$get_Count(this$$$14) | 0;\n  }\n});\nObject.defineProperty(MutableSet$00601.prototype, \"IsReadOnly\", {\n  \"get\": function get() {\n    return false;\n  }\n});\n\nMutableSet$00601.prototype.Remove = function (item$$3) {\n  var this$$$16 = this;\n  return MutableSet$00601$$Remove$$2B595(this$$$16, item$$3);\n};\n\nObject.defineProperty(MutableSet$00601.prototype, \"size\", {\n  \"get\": function get() {\n    var this$$$17 = this;\n    return MutableSet$00601$$get_Count(this$$$17) | 0;\n  }\n});\n\nMutableSet$00601.prototype.add = function (k$$5) {\n  var this$$$18 = this;\n  var value$$4 = MutableSet$00601$$Add$$2B595(this$$$18, k$$5);\n  value$$4, null;\n  return this$$$18;\n};\n\nMutableSet$00601.prototype.add_ = function (k$$6) {\n  var this$$$19 = this;\n  return MutableSet$00601$$Add$$2B595(this$$$19, k$$6);\n};\n\nMutableSet$00601.prototype.clear = function () {\n  var this$$$20 = this;\n  MutableSet$00601$$Clear(this$$$20);\n};\n\nMutableSet$00601.prototype[\"delete\"] = function (k$$7) {\n  var this$$$21 = this;\n  return MutableSet$00601$$Remove$$2B595(this$$$21, k$$7);\n};\n\nMutableSet$00601.prototype.has = function (k$$8) {\n  var this$$$22 = this;\n  return MutableSet$00601$$Contains$$2B595(this$$$22, k$$8);\n};\n\nMutableSet$00601.prototype.keys = function () {\n  var this$$$23 = this;\n  return map(function mapping(x) {\n    return x;\n  }, this$$$23);\n};\n\nMutableSet$00601.prototype.values = function () {\n  var this$$$24 = this;\n  return map(function mapping$$1(x$$1) {\n    return x$$1;\n  }, this$$$24);\n};\n\nMutableSet$00601.prototype.entries = function () {\n  var this$$$25 = this;\n  return map(function mapping$$2(v$$1) {\n    return [v$$1, v$$1];\n  }, this$$$25);\n};","import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.date.to-string\";\nimport \"core-js/modules/es.object.define-property\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { List, Record, declare, Union } from \"./Types.js\";\nimport { type, record, bool, list, union as union$$1, int32 } from \"./Reflection.js\";\nimport { value as value$$2, some, Choice } from \"./Option.js\";\nimport { iterate as iterate$$1, delay, collect, singleton as singleton$$1, empty as empty$$1, fold as fold$$1, toIterator, map as map$$1, reduce, getEnumerator, unfold } from \"./Seq.js\";\nimport { structuralHash, isDisposable } from \"./Util.js\";\nimport { join } from \"./String.js\";\nimport { MutableSet$00601$$Add$$2B595 as MutableSet$002400601$0024$0024Add$0024$00242B595, MutableSet$00601$$$$002Ector$$Z6150332D as MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D } from \"./MutableSet\";\nexport var SetTree$00601 = declare(function Set_SetTree(tag, name) {\n  for (var _len = arguments.length, fields = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    fields[_key - 2] = arguments[_key];\n  }\n\n  Union.call.apply(Union, [this, tag, name].concat(fields));\n}, Union);\nexport function SetTree$00601$reflection($gen$$3) {\n  return union$$1(\"Set.SetTree`1\", [$gen$$3], SetTree$00601, function () {\n    return [\"SetEmpty\", [\"SetNode\", [$gen$$3, SetTree$00601$reflection($gen$$3), SetTree$00601$reflection($gen$$3), int32]], [\"SetOne\", [$gen$$3]]];\n  });\n}\nexport function SetTreeModule$$$countAux($s$$4, $acc$$5) {\n  SetTreeModule$$$countAux: while (true) {\n    var s = $s$$4,\n        acc = $acc$$5;\n\n    switch (s.tag) {\n      case 2:\n        {\n          return acc + 1 | 0;\n        }\n\n      case 0:\n        {\n          return acc | 0;\n        }\n\n      default:\n        {\n          $s$$4 = s.fields[1];\n          $acc$$5 = SetTreeModule$$$countAux(s.fields[2], acc + 1);\n          continue SetTreeModule$$$countAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$count(s$$1) {\n  return SetTreeModule$$$countAux(s$$1, 0);\n}\nexport function SetTreeModule$$$SetOne(n) {\n  return new SetTree$00601(2, \"SetOne\", n);\n}\nexport function SetTreeModule$$$SetNode(x, l$$1, r$$1, h) {\n  return new SetTree$00601(1, \"SetNode\", x, l$$1, r$$1, h);\n}\nexport function SetTreeModule$$$height(t) {\n  switch (t.tag) {\n    case 2:\n      {\n        return 1;\n      }\n\n    case 1:\n      {\n        return t.fields[3] | 0;\n      }\n\n    default:\n      {\n        return 0;\n      }\n  }\n}\nexport var SetTreeModule$$$tolerance = 2;\nexport function SetTreeModule$$$mk(l$$2, k, r$$2) {\n  var $target$$16;\n\n  if (l$$2.tag === 0) {\n    if (r$$2.tag === 0) {\n      $target$$16 = 0;\n    } else {\n      $target$$16 = 1;\n    }\n  } else {\n    $target$$16 = 1;\n  }\n\n  switch ($target$$16) {\n    case 0:\n      {\n        return SetTreeModule$$$SetOne(k);\n      }\n\n    case 1:\n      {\n        var hl = SetTreeModule$$$height(l$$2) | 0;\n        var hr = SetTreeModule$$$height(r$$2) | 0;\n        var m = (hl < hr ? hr : hl) | 0;\n        return SetTreeModule$$$SetNode(k, l$$2, r$$2, m + 1);\n      }\n  }\n}\nexport function SetTreeModule$$$rebalance(t1, k$$1, t2) {\n  var t1h = SetTreeModule$$$height(t1) | 0;\n  var t2h = SetTreeModule$$$height(t2) | 0;\n\n  if (t2h > t1h + SetTreeModule$$$tolerance) {\n    if (t2.tag === 1) {\n      if (SetTreeModule$$$height(t2.fields[1]) > t1h + 1) {\n        if (t2.fields[1].tag === 1) {\n          return SetTreeModule$$$mk(SetTreeModule$$$mk(t1, k$$1, t2.fields[1].fields[1]), t2.fields[1].fields[0], SetTreeModule$$$mk(t2.fields[1].fields[2], t2.fields[0], t2.fields[2]));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return SetTreeModule$$$mk(SetTreeModule$$$mk(t1, k$$1, t2.fields[1]), t2.fields[0], t2.fields[2]);\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else if (t1h > t2h + SetTreeModule$$$tolerance) {\n    if (t1.tag === 1) {\n      if (SetTreeModule$$$height(t1.fields[2]) > t2h + 1) {\n        if (t1.fields[2].tag === 1) {\n          return SetTreeModule$$$mk(SetTreeModule$$$mk(t1.fields[1], t1.fields[0], t1.fields[2].fields[1]), t1.fields[2].fields[0], SetTreeModule$$$mk(t1.fields[2].fields[2], k$$1, t2));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return SetTreeModule$$$mk(t1.fields[1], t1.fields[0], SetTreeModule$$$mk(t1.fields[2], k$$1, t2));\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else {\n    return SetTreeModule$$$mk(t1, k$$1, t2);\n  }\n}\nexport function SetTreeModule$$$add(comparer, k$$2, t$$1) {\n  switch (t$$1.tag) {\n    case 2:\n      {\n        var c$$1 = comparer.Compare(k$$2, t$$1.fields[0]) | 0;\n\n        if (c$$1 < 0) {\n          return SetTreeModule$$$SetNode(k$$2, new SetTree$00601(0, \"SetEmpty\"), t$$1, 2);\n        } else if (c$$1 === 0) {\n          return t$$1;\n        } else {\n          return SetTreeModule$$$SetNode(k$$2, t$$1, new SetTree$00601(0, \"SetEmpty\"), 2);\n        }\n      }\n\n    case 0:\n      {\n        return SetTreeModule$$$SetOne(k$$2);\n      }\n\n    default:\n      {\n        var c = comparer.Compare(k$$2, t$$1.fields[0]) | 0;\n\n        if (c < 0) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$add(comparer, k$$2, t$$1.fields[1]), t$$1.fields[0], t$$1.fields[2]);\n        } else if (c === 0) {\n          return t$$1;\n        } else {\n          return SetTreeModule$$$rebalance(t$$1.fields[1], t$$1.fields[0], SetTreeModule$$$add(comparer, k$$2, t$$1.fields[2]));\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$balance(comparer$$1, t1$$1, k$$3, t2$$1) {\n  var $target$$27, t2$$2, t1$$2, k1, t2$$3, k2$$2, t1$$3, h1, h2, k1$$1, k2$$3, t11, t12, t21, t22;\n\n  if (t1$$1.tag === 2) {\n    if (t2$$1.tag === 0) {\n      $target$$27 = 1;\n      t1$$2 = t1$$1;\n    } else if (t2$$1.tag === 2) {\n      $target$$27 = 2;\n      k1 = t1$$1.fields[0];\n      t2$$3 = t2$$1;\n    } else {\n      $target$$27 = 2;\n      k1 = t1$$1.fields[0];\n      t2$$3 = t2$$1;\n    }\n  } else if (t1$$1.tag === 1) {\n    if (t2$$1.tag === 2) {\n      $target$$27 = 3;\n      k2$$2 = t2$$1.fields[0];\n      t1$$3 = t1$$1;\n    } else if (t2$$1.tag === 1) {\n      $target$$27 = 4;\n      h1 = t1$$1.fields[3];\n      h2 = t2$$1.fields[3];\n      k1$$1 = t1$$1.fields[0];\n      k2$$3 = t2$$1.fields[0];\n      t11 = t1$$1.fields[1];\n      t12 = t1$$1.fields[2];\n      t21 = t2$$1.fields[1];\n      t22 = t2$$1.fields[2];\n    } else {\n      $target$$27 = 1;\n      t1$$2 = t1$$1;\n    }\n  } else {\n    $target$$27 = 0;\n    t2$$2 = t2$$1;\n  }\n\n  switch ($target$$27) {\n    case 0:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, t2$$2);\n      }\n\n    case 1:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, t1$$2);\n      }\n\n    case 2:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, SetTreeModule$$$add(comparer$$1, k1, t2$$3));\n      }\n\n    case 3:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, SetTreeModule$$$add(comparer$$1, k2$$2, t1$$3));\n      }\n\n    case 4:\n      {\n        if (h1 + SetTreeModule$$$tolerance < h2) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$balance(comparer$$1, t1$$1, k$$3, t21), k2$$3, t22);\n        } else if (h2 + SetTreeModule$$$tolerance < h1) {\n          return SetTreeModule$$$rebalance(t11, k1$$1, SetTreeModule$$$balance(comparer$$1, t12, k$$3, t2$$1));\n        } else {\n          return SetTreeModule$$$mk(t1$$1, k$$3, t2$$1);\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$split(comparer$$2, pivot, t$$2) {\n  switch (t$$2.tag) {\n    case 2:\n      {\n        var c$$3 = comparer$$2.Compare(t$$2.fields[0], pivot) | 0;\n\n        if (c$$3 < 0) {\n          return [t$$2, false, new SetTree$00601(0, \"SetEmpty\")];\n        } else if (c$$3 === 0) {\n          return [new SetTree$00601(0, \"SetEmpty\"), true, new SetTree$00601(0, \"SetEmpty\")];\n        } else {\n          return [new SetTree$00601(0, \"SetEmpty\"), false, t$$2];\n        }\n      }\n\n    case 0:\n      {\n        return [new SetTree$00601(0, \"SetEmpty\"), false, new SetTree$00601(0, \"SetEmpty\")];\n      }\n\n    default:\n      {\n        var c$$2 = comparer$$2.Compare(pivot, t$$2.fields[0]) | 0;\n\n        if (c$$2 < 0) {\n          var patternInput = SetTreeModule$$$split(comparer$$2, pivot, t$$2.fields[1]);\n          return [patternInput[0], patternInput[1], SetTreeModule$$$balance(comparer$$2, patternInput[2], t$$2.fields[0], t$$2.fields[2])];\n        } else if (c$$2 === 0) {\n          return [t$$2.fields[1], true, t$$2.fields[2]];\n        } else {\n          var patternInput$$1 = SetTreeModule$$$split(comparer$$2, pivot, t$$2.fields[2]);\n          return [SetTreeModule$$$balance(comparer$$2, t$$2.fields[1], t$$2.fields[0], patternInput$$1[0]), patternInput$$1[1], patternInput$$1[2]];\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$spliceOutSuccessor(t$$3) {\n  switch (t$$3.tag) {\n    case 2:\n      {\n        return [t$$3.fields[0], new SetTree$00601(0, \"SetEmpty\")];\n      }\n\n    case 1:\n      {\n        if (t$$3.fields[1].tag === 0) {\n          return [t$$3.fields[0], t$$3.fields[2]];\n        } else {\n          var patternInput$$2 = SetTreeModule$$$spliceOutSuccessor(t$$3.fields[1]);\n          return [patternInput$$2[0], SetTreeModule$$$mk(patternInput$$2[1], t$$3.fields[0], t$$3.fields[2])];\n        }\n      }\n\n    default:\n      {\n        throw new Error(\"internal error: Set.spliceOutSuccessor\");\n      }\n  }\n}\nexport function SetTreeModule$$$remove(comparer$$3, k$$4, t$$4) {\n  switch (t$$4.tag) {\n    case 2:\n      {\n        var c$$4 = comparer$$3.Compare(k$$4, t$$4.fields[0]) | 0;\n\n        if (c$$4 === 0) {\n          return new SetTree$00601(0, \"SetEmpty\");\n        } else {\n          return t$$4;\n        }\n      }\n\n    case 1:\n      {\n        var c$$5 = comparer$$3.Compare(k$$4, t$$4.fields[0]) | 0;\n\n        if (c$$5 < 0) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$remove(comparer$$3, k$$4, t$$4.fields[1]), t$$4.fields[0], t$$4.fields[2]);\n        } else if (c$$5 === 0) {\n          if (t$$4.fields[1].tag === 0) {\n            return t$$4.fields[2];\n          } else if (t$$4.fields[2].tag === 0) {\n            return t$$4.fields[1];\n          } else {\n            var patternInput$$3 = SetTreeModule$$$spliceOutSuccessor(t$$4.fields[2]);\n            return SetTreeModule$$$mk(t$$4.fields[1], patternInput$$3[0], patternInput$$3[1]);\n          }\n        } else {\n          return SetTreeModule$$$rebalance(t$$4.fields[1], t$$4.fields[0], SetTreeModule$$$remove(comparer$$3, k$$4, t$$4.fields[2]));\n        }\n      }\n\n    default:\n      {\n        return t$$4;\n      }\n  }\n}\nexport function SetTreeModule$$$mem($comparer$$4$$35, $k$$5$$36, $t$$5$$37) {\n  SetTreeModule$$$mem: while (true) {\n    var comparer$$4 = $comparer$$4$$35,\n        k$$5 = $k$$5$$36,\n        t$$5 = $t$$5$$37;\n\n    switch (t$$5.tag) {\n      case 2:\n        {\n          return comparer$$4.Compare(k$$5, t$$5.fields[0]) === 0;\n        }\n\n      case 0:\n        {\n          return false;\n        }\n\n      default:\n        {\n          var c$$6 = comparer$$4.Compare(k$$5, t$$5.fields[0]) | 0;\n\n          if (c$$6 < 0) {\n            $comparer$$4$$35 = comparer$$4;\n            $k$$5$$36 = k$$5;\n            $t$$5$$37 = t$$5.fields[1];\n            continue SetTreeModule$$$mem;\n          } else if (c$$6 === 0) {\n            return true;\n          } else {\n            $comparer$$4$$35 = comparer$$4;\n            $k$$5$$36 = k$$5;\n            $t$$5$$37 = t$$5.fields[2];\n            continue SetTreeModule$$$mem;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$iter($f$$38, $t$$6$$39) {\n  SetTreeModule$$$iter: while (true) {\n    var f = $f$$38,\n        t$$6 = $t$$6$$39;\n\n    switch (t$$6.tag) {\n      case 2:\n        {\n          f(t$$6.fields[0]);\n          break;\n        }\n\n      case 0:\n        {\n          break;\n        }\n\n      default:\n        {\n          SetTreeModule$$$iter(f, t$$6.fields[1]);\n          f(t$$6.fields[0]);\n          $f$$38 = f;\n          $t$$6$$39 = t$$6.fields[2];\n          continue SetTreeModule$$$iter;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$foldBack($f$$1$$40, $m$$1$$41, $x$$1$$42) {\n  SetTreeModule$$$foldBack: while (true) {\n    var f$$1 = $f$$1$$40,\n        m$$1 = $m$$1$$41,\n        x$$1 = $x$$1$$42;\n\n    switch (m$$1.tag) {\n      case 2:\n        {\n          return f$$1(m$$1.fields[0], x$$1);\n        }\n\n      case 0:\n        {\n          return x$$1;\n        }\n\n      default:\n        {\n          $f$$1$$40 = f$$1;\n          $m$$1$$41 = m$$1.fields[1];\n          $x$$1$$42 = f$$1(m$$1.fields[0], SetTreeModule$$$foldBack(f$$1, m$$1.fields[2], x$$1));\n          continue SetTreeModule$$$foldBack;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$fold($f$$2$$43, $x$$2$$44, $m$$2$$45) {\n  SetTreeModule$$$fold: while (true) {\n    var f$$2 = $f$$2$$43,\n        x$$2 = $x$$2$$44,\n        m$$2 = $m$$2$$45;\n\n    switch (m$$2.tag) {\n      case 2:\n        {\n          return f$$2(x$$2, m$$2.fields[0]);\n        }\n\n      case 0:\n        {\n          return x$$2;\n        }\n\n      default:\n        {\n          var x$$3 = SetTreeModule$$$fold(f$$2, x$$2, m$$2.fields[1]);\n          var x$$4 = f$$2(x$$3, m$$2.fields[0]);\n          $f$$2$$43 = f$$2;\n          $x$$2$$44 = x$$4;\n          $m$$2$$45 = m$$2.fields[2];\n          continue SetTreeModule$$$fold;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$forall($f$$3$$46, $m$$3$$47) {\n  SetTreeModule$$$forall: while (true) {\n    var f$$3 = $f$$3$$46,\n        m$$3 = $m$$3$$47;\n\n    switch (m$$3.tag) {\n      case 2:\n        {\n          return f$$3(m$$3.fields[0]);\n        }\n\n      case 0:\n        {\n          return true;\n        }\n\n      default:\n        {\n          if (f$$3(m$$3.fields[0]) ? SetTreeModule$$$forall(f$$3, m$$3.fields[1]) : false) {\n            $f$$3$$46 = f$$3;\n            $m$$3$$47 = m$$3.fields[2];\n            continue SetTreeModule$$$forall;\n          } else {\n            return false;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$exists($f$$4$$48, $m$$4$$49) {\n  SetTreeModule$$$exists: while (true) {\n    var f$$4 = $f$$4$$48,\n        m$$4 = $m$$4$$49;\n\n    switch (m$$4.tag) {\n      case 2:\n        {\n          return f$$4(m$$4.fields[0]);\n        }\n\n      case 0:\n        {\n          return false;\n        }\n\n      default:\n        {\n          if (f$$4(m$$4.fields[0]) ? true : SetTreeModule$$$exists(f$$4, m$$4.fields[1])) {\n            return true;\n          } else {\n            $f$$4$$48 = f$$4;\n            $m$$4$$49 = m$$4.fields[2];\n            continue SetTreeModule$$$exists;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$isEmpty(m$$5) {\n  if (m$$5.tag === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function SetTreeModule$$$subset(comparer$$5, a, b) {\n  return SetTreeModule$$$forall(function (x$$5) {\n    return SetTreeModule$$$mem(comparer$$5, x$$5, b);\n  }, a);\n}\nexport function SetTreeModule$$$psubset(comparer$$6, a$$1, b$$1) {\n  if (SetTreeModule$$$forall(function (x$$6) {\n    return SetTreeModule$$$mem(comparer$$6, x$$6, b$$1);\n  }, a$$1)) {\n    return SetTreeModule$$$exists(function (x$$7) {\n      return !SetTreeModule$$$mem(comparer$$6, x$$7, a$$1);\n    }, b$$1);\n  } else {\n    return false;\n  }\n}\nexport function SetTreeModule$$$filterAux($comparer$$7$$57, $f$$5$$58, $s$$2$$59, $acc$$1$$60) {\n  SetTreeModule$$$filterAux: while (true) {\n    var comparer$$7 = $comparer$$7$$57,\n        f$$5 = $f$$5$$58,\n        s$$2 = $s$$2$$59,\n        acc$$1 = $acc$$1$$60;\n\n    switch (s$$2.tag) {\n      case 2:\n        {\n          if (f$$5(s$$2.fields[0])) {\n            return SetTreeModule$$$add(comparer$$7, s$$2.fields[0], acc$$1);\n          } else {\n            return acc$$1;\n          }\n        }\n\n      case 0:\n        {\n          return acc$$1;\n        }\n\n      default:\n        {\n          var acc$$2 = f$$5(s$$2.fields[0]) ? SetTreeModule$$$add(comparer$$7, s$$2.fields[0], acc$$1) : acc$$1;\n          $comparer$$7$$57 = comparer$$7;\n          $f$$5$$58 = f$$5;\n          $s$$2$$59 = s$$2.fields[1];\n          $acc$$1$$60 = SetTreeModule$$$filterAux(comparer$$7, f$$5, s$$2.fields[2], acc$$2);\n          continue SetTreeModule$$$filterAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$filter(comparer$$8, f$$6, s$$3) {\n  return SetTreeModule$$$filterAux(comparer$$8, f$$6, s$$3, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function SetTreeModule$$$diffAux($comparer$$9$$64, $m$$6$$65, $acc$$3$$66) {\n  SetTreeModule$$$diffAux: while (true) {\n    var comparer$$9 = $comparer$$9$$64,\n        m$$6 = $m$$6$$65,\n        acc$$3 = $acc$$3$$66;\n\n    switch (m$$6.tag) {\n      case 2:\n        {\n          return SetTreeModule$$$remove(comparer$$9, m$$6.fields[0], acc$$3);\n        }\n\n      case 0:\n        {\n          return acc$$3;\n        }\n\n      default:\n        {\n          $comparer$$9$$64 = comparer$$9;\n          $m$$6$$65 = m$$6.fields[1];\n          $acc$$3$$66 = SetTreeModule$$$diffAux(comparer$$9, m$$6.fields[2], SetTreeModule$$$remove(comparer$$9, m$$6.fields[0], acc$$3));\n          continue SetTreeModule$$$diffAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$diff(comparer$$10, a$$2, b$$2) {\n  return SetTreeModule$$$diffAux(comparer$$10, b$$2, a$$2);\n}\nexport function SetTreeModule$$$union(comparer$$11, t1$$4, t2$$4) {\n  var $target$$73, h1$$1, h2$$1, k1$$4, k2$$16, t11$$2, t12$$2, t21$$1, t22$$1, t$$7, t$$8, k1$$5, t2$$5, k2$$17, t1$$5;\n\n  if (t1$$4.tag === 0) {\n    $target$$73 = 1;\n    t$$7 = t2$$4;\n  } else if (t1$$4.tag === 2) {\n    if (t2$$4.tag === 0) {\n      $target$$73 = 2;\n      t$$8 = t1$$4;\n    } else if (t2$$4.tag === 2) {\n      $target$$73 = 3;\n      k1$$5 = t1$$4.fields[0];\n      t2$$5 = t2$$4;\n    } else {\n      $target$$73 = 3;\n      k1$$5 = t1$$4.fields[0];\n      t2$$5 = t2$$4;\n    }\n  } else if (t2$$4.tag === 0) {\n    $target$$73 = 2;\n    t$$8 = t1$$4;\n  } else if (t2$$4.tag === 2) {\n    $target$$73 = 4;\n    k2$$17 = t2$$4.fields[0];\n    t1$$5 = t1$$4;\n  } else {\n    $target$$73 = 0;\n    h1$$1 = t1$$4.fields[3];\n    h2$$1 = t2$$4.fields[3];\n    k1$$4 = t1$$4.fields[0];\n    k2$$16 = t2$$4.fields[0];\n    t11$$2 = t1$$4.fields[1];\n    t12$$2 = t1$$4.fields[2];\n    t21$$1 = t2$$4.fields[1];\n    t22$$1 = t2$$4.fields[2];\n  }\n\n  switch ($target$$73) {\n    case 0:\n      {\n        if (h1$$1 > h2$$1) {\n          var patternInput$$4 = SetTreeModule$$$split(comparer$$11, k1$$4, t2$$4);\n          return SetTreeModule$$$balance(comparer$$11, SetTreeModule$$$union(comparer$$11, t11$$2, patternInput$$4[0]), k1$$4, SetTreeModule$$$union(comparer$$11, t12$$2, patternInput$$4[2]));\n        } else {\n          var patternInput$$5 = SetTreeModule$$$split(comparer$$11, k2$$16, t1$$4);\n          return SetTreeModule$$$balance(comparer$$11, SetTreeModule$$$union(comparer$$11, t21$$1, patternInput$$5[0]), k2$$16, SetTreeModule$$$union(comparer$$11, t22$$1, patternInput$$5[2]));\n        }\n      }\n\n    case 1:\n      {\n        return t$$7;\n      }\n\n    case 2:\n      {\n        return t$$8;\n      }\n\n    case 3:\n      {\n        return SetTreeModule$$$add(comparer$$11, k1$$5, t2$$5);\n      }\n\n    case 4:\n      {\n        return SetTreeModule$$$add(comparer$$11, k2$$17, t1$$5);\n      }\n  }\n}\nexport function SetTreeModule$$$intersectionAux($comparer$$12$$74, $b$$3$$75, $m$$7$$76, $acc$$4$$77) {\n  SetTreeModule$$$intersectionAux: while (true) {\n    var comparer$$12 = $comparer$$12$$74,\n        b$$3 = $b$$3$$75,\n        m$$7 = $m$$7$$76,\n        acc$$4 = $acc$$4$$77;\n\n    switch (m$$7.tag) {\n      case 2:\n        {\n          if (SetTreeModule$$$mem(comparer$$12, m$$7.fields[0], b$$3)) {\n            return SetTreeModule$$$add(comparer$$12, m$$7.fields[0], acc$$4);\n          } else {\n            return acc$$4;\n          }\n        }\n\n      case 0:\n        {\n          return acc$$4;\n        }\n\n      default:\n        {\n          var acc$$5 = SetTreeModule$$$intersectionAux(comparer$$12, b$$3, m$$7.fields[2], acc$$4);\n          var acc$$6 = SetTreeModule$$$mem(comparer$$12, m$$7.fields[0], b$$3) ? SetTreeModule$$$add(comparer$$12, m$$7.fields[0], acc$$5) : acc$$5;\n          $comparer$$12$$74 = comparer$$12;\n          $b$$3$$75 = b$$3;\n          $m$$7$$76 = m$$7.fields[1];\n          $acc$$4$$77 = acc$$6;\n          continue SetTreeModule$$$intersectionAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$intersection(comparer$$13, a$$3, b$$4) {\n  return SetTreeModule$$$intersectionAux(comparer$$13, b$$4, a$$3, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function SetTreeModule$$$partition1(comparer$$14, f$$7, k$$16, acc1, acc2) {\n  if (f$$7(k$$16)) {\n    return [SetTreeModule$$$add(comparer$$14, k$$16, acc1), acc2];\n  } else {\n    return [acc1, SetTreeModule$$$add(comparer$$14, k$$16, acc2)];\n  }\n}\nexport function SetTreeModule$$$partitionAux($comparer$$15$$86, $f$$8$$87, $s$$4$$88, $acc_0$$89, $acc_1$$90) {\n  SetTreeModule$$$partitionAux: while (true) {\n    var comparer$$15 = $comparer$$15$$86,\n        f$$8 = $f$$8$$87,\n        s$$4 = $s$$4$$88,\n        acc_0 = $acc_0$$89,\n        acc_1 = $acc_1$$90;\n\n    switch (s$$4.tag) {\n      case 2:\n        {\n          return SetTreeModule$$$partition1(comparer$$15, f$$8, s$$4.fields[0], acc_0, acc_1);\n        }\n\n      case 0:\n        {\n          return [acc_0, acc_1];\n        }\n\n      default:\n        {\n          var acc$$8 = SetTreeModule$$$partitionAux(comparer$$15, f$$8, s$$4.fields[2], acc_0, acc_1);\n          var acc$$9 = SetTreeModule$$$partition1(comparer$$15, f$$8, s$$4.fields[0], acc$$8[0], acc$$8[1]);\n          $comparer$$15$$86 = comparer$$15;\n          $f$$8$$87 = f$$8;\n          $s$$4$$88 = s$$4.fields[1];\n          $acc_0$$89 = acc$$9[0];\n          $acc_1$$90 = acc$$9[1];\n          continue SetTreeModule$$$partitionAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$partition(comparer$$16, f$$9, s$$5) {\n  var seed = [new SetTree$00601(0, \"SetEmpty\"), new SetTree$00601(0, \"SetEmpty\")];\n  return SetTreeModule$$$partitionAux(comparer$$16, f$$9, s$$5, seed[0], seed[1]);\n}\nexport function SetTreeModule$$$$007CMatchSetNode$007CMatchSetEmpty$007C(s$$6) {\n  switch (s$$6.tag) {\n    case 2:\n      {\n        return new Choice(0, \"Choice1Of2\", [s$$6.fields[0], new SetTree$00601(0, \"SetEmpty\"), new SetTree$00601(0, \"SetEmpty\")]);\n      }\n\n    case 0:\n      {\n        return new Choice(1, \"Choice2Of2\", null);\n      }\n\n    default:\n      {\n        return new Choice(0, \"Choice1Of2\", [s$$6.fields[0], s$$6.fields[1], s$$6.fields[2]]);\n      }\n  }\n}\nexport function SetTreeModule$$$minimumElementAux($s$$7$$95, $n$$1$$96) {\n  SetTreeModule$$$minimumElementAux: while (true) {\n    var s$$7 = $s$$7$$95,\n        n$$1 = $n$$1$$96;\n\n    switch (s$$7.tag) {\n      case 2:\n        {\n          return s$$7.fields[0];\n        }\n\n      case 0:\n        {\n          return n$$1;\n        }\n\n      default:\n        {\n          $s$$7$$95 = s$$7.fields[1];\n          $n$$1$$96 = s$$7.fields[0];\n          continue SetTreeModule$$$minimumElementAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$minimumElementOpt(s$$8) {\n  switch (s$$8.tag) {\n    case 2:\n      {\n        return some(s$$8.fields[0]);\n      }\n\n    case 0:\n      {\n        return null;\n      }\n\n    default:\n      {\n        return some(SetTreeModule$$$minimumElementAux(s$$8.fields[1], s$$8.fields[0]));\n      }\n  }\n}\nexport function SetTreeModule$$$maximumElementAux($s$$9$$98, $n$$2$$99) {\n  SetTreeModule$$$maximumElementAux: while (true) {\n    var s$$9 = $s$$9$$98,\n        n$$2 = $n$$2$$99;\n\n    switch (s$$9.tag) {\n      case 2:\n        {\n          return s$$9.fields[0];\n        }\n\n      case 0:\n        {\n          return n$$2;\n        }\n\n      default:\n        {\n          $s$$9$$98 = s$$9.fields[2];\n          $n$$2$$99 = s$$9.fields[0];\n          continue SetTreeModule$$$maximumElementAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$maximumElementOpt(s$$10) {\n  switch (s$$10.tag) {\n    case 2:\n      {\n        return some(s$$10.fields[0]);\n      }\n\n    case 0:\n      {\n        return null;\n      }\n\n    default:\n      {\n        return some(SetTreeModule$$$maximumElementAux(s$$10.fields[2], s$$10.fields[0]));\n      }\n  }\n}\nexport function SetTreeModule$$$minimumElement(s$$11) {\n  var matchValue$$4 = SetTreeModule$$$minimumElementOpt(s$$11);\n\n  if (matchValue$$4 == null) {\n    throw new Error(\"Set contains no elements\");\n  } else {\n    var k$$27 = value$$2(matchValue$$4);\n    return k$$27;\n  }\n}\nexport function SetTreeModule$$$maximumElement(s$$12) {\n  var matchValue$$5 = SetTreeModule$$$maximumElementOpt(s$$12);\n\n  if (matchValue$$5 == null) {\n    throw new Error(\"Set contains no elements\");\n  } else {\n    var k$$28 = value$$2(matchValue$$5);\n    return k$$28;\n  }\n}\nexport var SetTreeModule$002ESetIterator$00601 = declare(function Set_SetTreeModule_SetIterator(arg1, arg2) {\n  this.stack = arg1;\n  this.started = arg2;\n}, Record);\nexport function SetTreeModule$002ESetIterator$00601$reflection($gen$$103) {\n  return record(\"Set.SetTreeModule.SetIterator`1\", [$gen$$103], SetTreeModule$002ESetIterator$00601, function () {\n    return [[\"stack\", list(SetTree$00601$reflection($gen$$103))], [\"started\", bool]];\n  });\n}\nexport function SetTreeModule$$$collapseLHS($stack$$104) {\n  SetTreeModule$$$collapseLHS: while (true) {\n    var stack = $stack$$104;\n\n    if (stack.tail != null) {\n      if (stack.head.tag === 2) {\n        return stack;\n      } else if (stack.head.tag === 1) {\n        $stack$$104 = new List(stack.head.fields[1], new List(SetTreeModule$$$SetOne(stack.head.fields[0]), new List(stack.head.fields[2], stack.tail)));\n        continue SetTreeModule$$$collapseLHS;\n      } else {\n        $stack$$104 = stack.tail;\n        continue SetTreeModule$$$collapseLHS;\n      }\n    } else {\n      return new List();\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$mkIterator(s$$13) {\n  return new SetTreeModule$002ESetIterator$00601(SetTreeModule$$$collapseLHS(new List(s$$13, new List())), false);\n}\nexport function SetTreeModule$$$notStarted() {\n  throw new Error(\"Enumeration not started\");\n}\nexport function SetTreeModule$$$alreadyFinished() {\n  throw new Error(\"Enumeration already started\");\n}\nexport function SetTreeModule$$$current(i) {\n  if (i.started) {\n    var matchValue$$6 = i.stack;\n\n    if (matchValue$$6.tail == null) {\n      return SetTreeModule$$$alreadyFinished();\n    } else if (matchValue$$6.head.tag === 2) {\n      return matchValue$$6.head.fields[0];\n    } else {\n      throw new Error(\"Please report error: Set iterator, unexpected stack for current\");\n    }\n  } else {\n    return SetTreeModule$$$notStarted();\n  }\n}\nexport function SetTreeModule$$$moveNext(i$$1) {\n  if (i$$1.started) {\n    var matchValue$$7 = i$$1.stack;\n\n    if (matchValue$$7.tail == null) {\n      return false;\n    } else if (matchValue$$7.head.tag === 2) {\n      i$$1.stack = SetTreeModule$$$collapseLHS(matchValue$$7.tail);\n      return !(i$$1.stack.tail == null);\n    } else {\n      throw new Error(\"Please report error: Set iterator, unexpected stack for moveNext\");\n    }\n  } else {\n    i$$1.started = true;\n    return !(i$$1.stack.tail == null);\n  }\n}\nexport var SetTreeModule$002EmkIEnumerator$00601 = declare(function Set_SetTreeModule_mkIEnumerator(s$$14) {\n  var $this$$1 = this;\n  $this$$1.s = s$$14;\n  $this$$1.i = SetTreeModule$$$mkIterator($this$$1.s);\n});\nexport function SetTreeModule$002EmkIEnumerator$00601$reflection($gen$$108) {\n  return type(\"Set.SetTreeModule.mkIEnumerator`1\", [$gen$$108]);\n}\nexport function SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56(s$$14) {\n  return this instanceof SetTreeModule$002EmkIEnumerator$00601 ? SetTreeModule$002EmkIEnumerator$00601.call(this, s$$14) : new SetTreeModule$002EmkIEnumerator$00601(s$$14);\n}\nObject.defineProperty(SetTreeModule$002EmkIEnumerator$00601.prototype, \"Current\", {\n  \"get\": function get() {\n    var __ = this;\n\n    return SetTreeModule$$$current(__.i);\n  }\n});\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.MoveNext = function () {\n  var __$$1 = this;\n\n  return SetTreeModule$$$moveNext(__$$1.i);\n};\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.Reset = function () {\n  var __$$2 = this;\n\n  __$$2.i = SetTreeModule$$$mkIterator(__$$2.s);\n};\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.Dispose = function () {};\n\nexport function SetTreeModule$$$mkIEnumerator(s$$15) {\n  return SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56(s$$15);\n}\nexport function SetTreeModule$$$toSeq(s$$16) {\n  var en = SetTreeModule$$$mkIEnumerator(s$$16);\n  return unfold(function generator(en$$1) {\n    if (en$$1.MoveNext()) {\n      return [en$$1.Current, en$$1];\n    } else {\n      return null;\n    }\n  }, en);\n}\nexport function SetTreeModule$$$compareStacks($comparer$$17$$112, $l1$$113, $l2$$114) {\n  SetTreeModule$$$compareStacks: while (true) {\n    var comparer$$17 = $comparer$$17$$112,\n        l1 = $l1$$113,\n        l2 = $l2$$114;\n    var $target$$115, t1$$6, t2$$6, n1k, n2k, t1$$7, t2$$7, n1k$$1, n2k$$1, n2r, t1$$8, t2$$8, emp, n1k$$2, n1r, n2k$$2, t1$$9, t2$$9, n1k$$3, n1r$$1, n2k$$3, n2r$$1, t1$$10, t2$$10, n1k$$4, t1$$11, n1k$$5, n1l, n1r$$2, t1$$12, n2k$$4, t2$$11, n2k$$5, n2l, n2r$$2, t2$$12;\n\n    if (l1.tail != null) {\n      if (l2.tail != null) {\n        if (l2.head.tag === 2) {\n          if (l1.head.tag === 2) {\n            $target$$115 = 4;\n            n1k = l1.head.fields[0];\n            n2k = l2.head.fields[0];\n            t1$$7 = l1.tail;\n            t2$$7 = l2.tail;\n          } else if (l1.head.tag === 1) {\n            if (l1.head.fields[1].tag === 0) {\n              $target$$115 = 6;\n              emp = l1.head.fields[1];\n              n1k$$2 = l1.head.fields[0];\n              n1r = l1.head.fields[2];\n              n2k$$2 = l2.head.fields[0];\n              t1$$9 = l1.tail;\n              t2$$9 = l2.tail;\n            } else {\n              $target$$115 = 9;\n              n1k$$5 = l1.head.fields[0];\n              n1l = l1.head.fields[1];\n              n1r$$2 = l1.head.fields[2];\n              t1$$12 = l1.tail;\n            }\n          } else {\n            $target$$115 = 10;\n            n2k$$4 = l2.head.fields[0];\n            t2$$11 = l2.tail;\n          }\n        } else if (l2.head.tag === 1) {\n          if (l2.head.fields[1].tag === 0) {\n            if (l1.head.tag === 2) {\n              $target$$115 = 5;\n              n1k$$1 = l1.head.fields[0];\n              n2k$$1 = l2.head.fields[0];\n              n2r = l2.head.fields[2];\n              t1$$8 = l1.tail;\n              t2$$8 = l2.tail;\n            } else if (l1.head.tag === 1) {\n              if (l1.head.fields[1].tag === 0) {\n                $target$$115 = 7;\n                n1k$$3 = l1.head.fields[0];\n                n1r$$1 = l1.head.fields[2];\n                n2k$$3 = l2.head.fields[0];\n                n2r$$1 = l2.head.fields[2];\n                t1$$10 = l1.tail;\n                t2$$10 = l2.tail;\n              } else {\n                $target$$115 = 9;\n                n1k$$5 = l1.head.fields[0];\n                n1l = l1.head.fields[1];\n                n1r$$2 = l1.head.fields[2];\n                t1$$12 = l1.tail;\n              }\n            } else {\n              $target$$115 = 11;\n              n2k$$5 = l2.head.fields[0];\n              n2l = l2.head.fields[1];\n              n2r$$2 = l2.head.fields[2];\n              t2$$12 = l2.tail;\n            }\n          } else if (l1.head.tag === 2) {\n            $target$$115 = 8;\n            n1k$$4 = l1.head.fields[0];\n            t1$$11 = l1.tail;\n          } else if (l1.head.tag === 1) {\n            $target$$115 = 9;\n            n1k$$5 = l1.head.fields[0];\n            n1l = l1.head.fields[1];\n            n1r$$2 = l1.head.fields[2];\n            t1$$12 = l1.tail;\n          } else {\n            $target$$115 = 11;\n            n2k$$5 = l2.head.fields[0];\n            n2l = l2.head.fields[1];\n            n2r$$2 = l2.head.fields[2];\n            t2$$12 = l2.tail;\n          }\n        } else if (l1.head.tag === 2) {\n          $target$$115 = 8;\n          n1k$$4 = l1.head.fields[0];\n          t1$$11 = l1.tail;\n        } else if (l1.head.tag === 1) {\n          $target$$115 = 9;\n          n1k$$5 = l1.head.fields[0];\n          n1l = l1.head.fields[1];\n          n1r$$2 = l1.head.fields[2];\n          t1$$12 = l1.tail;\n        } else {\n          $target$$115 = 3;\n          t1$$6 = l1.tail;\n          t2$$6 = l2.tail;\n        }\n      } else {\n        $target$$115 = 2;\n      }\n    } else if (l2.tail != null) {\n      $target$$115 = 1;\n    } else {\n      $target$$115 = 0;\n    }\n\n    switch ($target$$115) {\n      case 0:\n        {\n          return 0;\n        }\n\n      case 1:\n        {\n          return -1 | 0;\n        }\n\n      case 2:\n        {\n          return 1;\n        }\n\n      case 3:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = t1$$6;\n          $l2$$114 = t2$$6;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 4:\n        {\n          var c$$7 = comparer$$17.Compare(n1k, n2k) | 0;\n\n          if (c$$7 !== 0) {\n            return c$$7 | 0;\n          } else {\n            $comparer$$17$$112 = comparer$$17;\n            $l1$$113 = t1$$7;\n            $l2$$114 = t2$$7;\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 5:\n        {\n          var c$$8 = comparer$$17.Compare(n1k$$1, n2k$$1) | 0;\n\n          if (c$$8 !== 0) {\n            return c$$8 | 0;\n          } else {\n            $comparer$$17$$112 = comparer$$17;\n            $l1$$113 = new List(new SetTree$00601(0, \"SetEmpty\"), t1$$8);\n            $l2$$114 = new List(n2r, t2$$8);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 6:\n        {\n          var c$$9 = comparer$$17.Compare(n1k$$2, n2k$$2) | 0;\n\n          if (c$$9 !== 0) {\n            return c$$9 | 0;\n          } else {\n            $comparer$$17$$112 = comparer$$17;\n            $l1$$113 = new List(n1r, t1$$9);\n            $l2$$114 = new List(emp, t2$$9);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 7:\n        {\n          var c$$10 = comparer$$17.Compare(n1k$$3, n2k$$3) | 0;\n\n          if (c$$10 !== 0) {\n            return c$$10 | 0;\n          } else {\n            $comparer$$17$$112 = comparer$$17;\n            $l1$$113 = new List(n1r$$1, t1$$10);\n            $l2$$114 = new List(n2r$$1, t2$$10);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 8:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = new List(new SetTree$00601(0, \"SetEmpty\"), new List(SetTreeModule$$$SetOne(n1k$$4), t1$$11));\n          $l2$$114 = l2;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 9:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = new List(n1l, new List(SetTreeModule$$$SetNode(n1k$$5, new SetTree$00601(0, \"SetEmpty\"), n1r$$2, 0), t1$$12));\n          $l2$$114 = l2;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 10:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = l1;\n          $l2$$114 = new List(new SetTree$00601(0, \"SetEmpty\"), new List(SetTreeModule$$$SetOne(n2k$$4), t2$$11));\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 11:\n        {\n          $comparer$$17$$112 = comparer$$17;\n          $l1$$113 = l1;\n          $l2$$114 = new List(n2l, new List(SetTreeModule$$$SetNode(n2k$$5, new SetTree$00601(0, \"SetEmpty\"), n2r$$2, 0), t2$$12));\n          continue SetTreeModule$$$compareStacks;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$compare(comparer$$18, s1, s2) {\n  if (s1.tag === 0) {\n    if (s2.tag === 0) {\n      return 0;\n    } else {\n      return -1 | 0;\n    }\n  } else if (s2.tag === 0) {\n    return 1;\n  } else {\n    return SetTreeModule$$$compareStacks(comparer$$18, new List(s1, new List()), new List(s2, new List())) | 0;\n  }\n}\nexport function SetTreeModule$$$choose(s$$17) {\n  return SetTreeModule$$$minimumElement(s$$17);\n}\nexport function SetTreeModule$$$loop($m$$8$$120, $acc$$10$$121) {\n  SetTreeModule$$$loop: while (true) {\n    var m$$8 = $m$$8$$120,\n        acc$$10 = $acc$$10$$121;\n\n    switch (m$$8.tag) {\n      case 2:\n        {\n          return new List(m$$8.fields[0], acc$$10);\n        }\n\n      case 0:\n        {\n          return acc$$10;\n        }\n\n      default:\n        {\n          $m$$8$$120 = m$$8.fields[1];\n          $acc$$10$$121 = new List(m$$8.fields[0], SetTreeModule$$$loop(m$$8.fields[2], acc$$10));\n          continue SetTreeModule$$$loop;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$toList(s$$18) {\n  return SetTreeModule$$$loop(s$$18, new List());\n}\nexport function SetTreeModule$$$copyToArray(s$$19, arr, i$$2) {\n  var j = i$$2 | 0;\n  SetTreeModule$$$iter(function (x$$8) {\n    arr[j] = x$$8;\n    j = j + 1;\n  }, s$$19);\n}\nexport function SetTreeModule$$$mkFromEnumerator($comparer$$19$$126, $acc$$11$$127, $e$$128) {\n  SetTreeModule$$$mkFromEnumerator: while (true) {\n    var comparer$$19 = $comparer$$19$$126,\n        acc$$11 = $acc$$11$$127,\n        e = $e$$128;\n\n    if (e.MoveNext()) {\n      $comparer$$19$$126 = comparer$$19;\n      $acc$$11$$127 = SetTreeModule$$$add(comparer$$19, e.Current, acc$$11);\n      $e$$128 = e;\n      continue SetTreeModule$$$mkFromEnumerator;\n    } else {\n      return acc$$11;\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$ofSeq(comparer$$20, c$$11) {\n  var ie = getEnumerator(c$$11);\n\n  try {\n    return SetTreeModule$$$mkFromEnumerator(comparer$$20, new SetTree$00601(0, \"SetEmpty\"), ie);\n  } finally {\n    if (isDisposable(ie)) {\n      ie.Dispose();\n    }\n  }\n}\nexport function SetTreeModule$$$ofArray(comparer$$21, arr$$1) {\n  var acc$$12 = new SetTree$00601(0, \"SetEmpty\");\n\n  for (var i$$3 = 0; i$$3 <= arr$$1.length - 1; i$$3++) {\n    acc$$12 = SetTreeModule$$$add(comparer$$21, arr$$1[i$$3], acc$$12);\n  }\n\n  return acc$$12;\n}\nexport var FSharpSet = declare(function Set_Set(comparer$$22, tree) {\n  var $this$$2 = this;\n  $this$$2.comparer = comparer$$22;\n  $this$$2.tree = tree;\n});\nexport function FSharpSet$reflection($gen$$133) {\n  return type(\"Set.FSharpSet\", [$gen$$133]);\n}\nexport function FSharpSet$$$$002Ector$$2528C5CB(comparer$$22, tree) {\n  return this instanceof FSharpSet ? FSharpSet.call(this, comparer$$22, tree) : new FSharpSet(comparer$$22, tree);\n}\nexport function FSharpSet$$get_Comparer(__$$4) {\n  return __$$4.comparer;\n}\nexport function FSharpSet$$get_Tree(__$$5) {\n  return __$$5.tree;\n}\nexport function FSharpSet$$Add$$2B595(s$$20, x$$9) {\n  return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$20), SetTreeModule$$$add(FSharpSet$$get_Comparer(s$$20), x$$9, FSharpSet$$get_Tree(s$$20)));\n}\nexport function FSharpSet$$Remove$$2B595(s$$21, x$$10) {\n  return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$21), SetTreeModule$$$remove(FSharpSet$$get_Comparer(s$$21), x$$10, FSharpSet$$get_Tree(s$$21)));\n}\nexport function FSharpSet$$get_Count(s$$22) {\n  return SetTreeModule$$$count(FSharpSet$$get_Tree(s$$22));\n}\nexport function FSharpSet$$Contains$$2B595(s$$23, x$$11) {\n  return SetTreeModule$$$mem(FSharpSet$$get_Comparer(s$$23), x$$11, FSharpSet$$get_Tree(s$$23));\n}\nexport function FSharpSet$$Iterate$$5028453F(s$$24, x$$12) {\n  SetTreeModule$$$iter(x$$12, FSharpSet$$get_Tree(s$$24));\n}\nexport function FSharpSet$$Fold(s$$25, f$$10, z) {\n  return SetTreeModule$$$fold(function (x$$13, z$$1) {\n    return f$$10(z$$1, x$$13);\n  }, z, FSharpSet$$get_Tree(s$$25));\n}\nexport function FSharpSet$$get_IsEmpty(s$$26) {\n  return SetTreeModule$$$isEmpty(FSharpSet$$get_Tree(s$$26));\n}\nexport function FSharpSet$$Partition$$Z1D55A0D7(s$$27, f$$11) {\n  var matchValue$$10 = FSharpSet$$get_Tree(s$$27);\n\n  if (matchValue$$10.tag === 0) {\n    return [s$$27, s$$27];\n  } else {\n    var patternInput$$6 = SetTreeModule$$$partition(FSharpSet$$get_Comparer(s$$27), f$$11, FSharpSet$$get_Tree(s$$27));\n    return [FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$27), patternInput$$6[0]), FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$27), patternInput$$6[1])];\n  }\n}\nexport function FSharpSet$$Filter$$Z1D55A0D7(s$$28, f$$12) {\n  var matchValue$$11 = FSharpSet$$get_Tree(s$$28);\n\n  if (matchValue$$11.tag === 0) {\n    return s$$28;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$28), SetTreeModule$$$filter(FSharpSet$$get_Comparer(s$$28), f$$12, FSharpSet$$get_Tree(s$$28)));\n  }\n}\nexport function FSharpSet$$Map$$7597B8F7(s$$29, f$$13, comparer$$23) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$23, SetTreeModule$$$fold(function (acc$$13, k$$33) {\n    return SetTreeModule$$$add(comparer$$23, f$$13(k$$33), acc$$13);\n  }, new SetTree$00601(0, \"SetEmpty\"), FSharpSet$$get_Tree(s$$29)));\n}\nexport function FSharpSet$$Exists$$Z1D55A0D7(s$$30, f$$14) {\n  return SetTreeModule$$$exists(f$$14, FSharpSet$$get_Tree(s$$30));\n}\nexport function FSharpSet$$ForAll$$Z1D55A0D7(s$$31, f$$15) {\n  return SetTreeModule$$$forall(f$$15, FSharpSet$$get_Tree(s$$31));\n}\nexport function FSharpSet$$$op_Subtraction(a$$4, b$$5) {\n  var matchValue$$12 = FSharpSet$$get_Tree(a$$4);\n\n  if (matchValue$$12.tag === 0) {\n    return a$$4;\n  } else {\n    var matchValue$$13 = FSharpSet$$get_Tree(b$$5);\n\n    if (matchValue$$13.tag === 0) {\n      return a$$4;\n    } else {\n      return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$4), SetTreeModule$$$diff(FSharpSet$$get_Comparer(a$$4), FSharpSet$$get_Tree(a$$4), FSharpSet$$get_Tree(b$$5)));\n    }\n  }\n}\nexport function FSharpSet$$$op_Addition(a$$5, b$$6) {\n  var matchValue$$14 = FSharpSet$$get_Tree(b$$6);\n\n  if (matchValue$$14.tag === 0) {\n    return a$$5;\n  } else {\n    var matchValue$$15 = FSharpSet$$get_Tree(a$$5);\n\n    if (matchValue$$15.tag === 0) {\n      return b$$6;\n    } else {\n      return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$5), SetTreeModule$$$union(FSharpSet$$get_Comparer(a$$5), FSharpSet$$get_Tree(a$$5), FSharpSet$$get_Tree(b$$6)));\n    }\n  }\n}\nexport function FSharpSet$$$Intersection$$Z3BE9BFE0(a$$6, b$$7) {\n  var matchValue$$16 = FSharpSet$$get_Tree(b$$7);\n\n  if (matchValue$$16.tag === 0) {\n    return b$$7;\n  } else {\n    var matchValue$$17 = FSharpSet$$get_Tree(a$$6);\n\n    if (matchValue$$17.tag === 0) {\n      return a$$6;\n    } else {\n      return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$6), SetTreeModule$$$intersection(FSharpSet$$get_Comparer(a$$6), FSharpSet$$get_Tree(a$$6), FSharpSet$$get_Tree(b$$7)));\n    }\n  }\n}\nexport function FSharpSet$$$IntersectionMany$$Z15B59630(sets) {\n  return reduce(FSharpSet$$$Intersection$$Z3BE9BFE0, sets);\n}\nexport function FSharpSet$$$Equality$$Z3BE9BFE0(a$$7, b$$8) {\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(a$$7), FSharpSet$$get_Tree(a$$7), FSharpSet$$get_Tree(b$$8)) === 0;\n}\nexport function FSharpSet$$$Compare$$Z3BE9BFE0(a$$8, b$$9) {\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(a$$8), FSharpSet$$get_Tree(a$$8), FSharpSet$$get_Tree(b$$9));\n}\nexport function FSharpSet$$get_Choose(x$$14) {\n  return SetTreeModule$$$choose(FSharpSet$$get_Tree(x$$14));\n}\nexport function FSharpSet$$get_MinimumElement(x$$15) {\n  return SetTreeModule$$$minimumElement(FSharpSet$$get_Tree(x$$15));\n}\nexport function FSharpSet$$get_MaximumElement(x$$16) {\n  return SetTreeModule$$$maximumElement(FSharpSet$$get_Tree(x$$16));\n}\nexport function FSharpSet$$IsSubsetOf$$6A20B1FF(x$$17, y) {\n  return SetTreeModule$$$subset(FSharpSet$$get_Comparer(x$$17), FSharpSet$$get_Tree(x$$17), FSharpSet$$get_Tree(y));\n}\nexport function FSharpSet$$IsSupersetOf$$6A20B1FF(x$$18, y$$1) {\n  return SetTreeModule$$$subset(FSharpSet$$get_Comparer(x$$18), FSharpSet$$get_Tree(y$$1), FSharpSet$$get_Tree(x$$18));\n}\nexport function FSharpSet$$IsProperSubsetOf$$6A20B1FF(x$$19, y$$2) {\n  return SetTreeModule$$$psubset(FSharpSet$$get_Comparer(x$$19), FSharpSet$$get_Tree(x$$19), FSharpSet$$get_Tree(y$$2));\n}\nexport function FSharpSet$$IsProperSupersetOf$$6A20B1FF(x$$20, y$$3) {\n  return SetTreeModule$$$psubset(FSharpSet$$get_Comparer(x$$20), FSharpSet$$get_Tree(y$$3), FSharpSet$$get_Tree(x$$20));\n}\n\nFSharpSet.prototype.toString = function () {\n  var strings;\n  var this$ = this;\n  return \"set [\" + (strings = map$$1(function (x$$21) {\n    var copyOfStruct = x$$21;\n    return String(copyOfStruct);\n  }, this$), join(\"; \", strings)) + \"]\";\n};\n\nFSharpSet.prototype.GetHashCode = function () {\n  var this$$$1 = this;\n  var res = 0;\n  var e$$1 = SetTreeModule$$$mkIEnumerator(FSharpSet$$get_Tree(this$$$1));\n\n  while (e$$1.MoveNext()) {\n    var x$$22 = res | 0;\n    var y$$4 = structuralHash(e$$1.Current) | 0;\n    res = (x$$22 << 1) + y$$4 + 631;\n  }\n\n  return Math.abs(res) | 0;\n};\n\nFSharpSet.prototype.Equals = function (that) {\n  var this$$$2 = this;\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(this$$$2), FSharpSet$$get_Tree(this$$$2), FSharpSet$$get_Tree(that)) === 0;\n};\n\nFSharpSet.prototype.CompareTo = function (that$$1) {\n  var this$$$3 = this;\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(this$$$3), FSharpSet$$get_Tree(this$$$3), FSharpSet$$get_Tree(that$$1)) | 0;\n};\n\nFSharpSet.prototype[Symbol.iterator] = function () {\n  var s$$32 = this;\n  return toIterator(SetTreeModule$$$mkIEnumerator(FSharpSet$$get_Tree(s$$32)));\n};\n\nexport function isEmpty(s$$33) {\n  return FSharpSet$$get_IsEmpty(s$$33);\n}\nexport function contains(x$$23, s$$34) {\n  return FSharpSet$$Contains$$2B595(s$$34, x$$23);\n}\nexport function add(x$$24, s$$35) {\n  return FSharpSet$$Add$$2B595(s$$35, x$$24);\n}\nexport function singleton(x$$25, comparer$$24) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$24, new SetTree$00601(2, \"SetOne\", x$$25));\n}\nexport function remove(x$$26, s$$36) {\n  return FSharpSet$$Remove$$2B595(s$$36, x$$26);\n}\nexport function union(s1$$2, s2$$2) {\n  return FSharpSet$$$op_Addition(s1$$2, s2$$2);\n}\nexport function unionMany(sets$$1, comparer$$25) {\n  return fold$$1(FSharpSet$$$op_Addition, FSharpSet$$$$002Ector$$2528C5CB(comparer$$25, new SetTree$00601(0, \"SetEmpty\")), sets$$1);\n}\nexport function intersect(s1$$3, s2$$3) {\n  return FSharpSet$$$Intersection$$Z3BE9BFE0(s1$$3, s2$$3);\n}\nexport function intersectMany(sets$$2) {\n  return FSharpSet$$$IntersectionMany$$Z15B59630(sets$$2);\n}\nexport function iterate(f$$16, s$$37) {\n  FSharpSet$$Iterate$$5028453F(s$$37, f$$16);\n}\nexport function empty(comparer$$26) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$26, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function forAll(f$$17, s$$38) {\n  return FSharpSet$$ForAll$$Z1D55A0D7(s$$38, f$$17);\n}\nexport function exists(f$$18, s$$39) {\n  return FSharpSet$$Exists$$Z1D55A0D7(s$$39, f$$18);\n}\nexport function filter(f$$19, s$$40) {\n  return FSharpSet$$Filter$$Z1D55A0D7(s$$40, f$$19);\n}\nexport function partition(f$$20, s$$41) {\n  return FSharpSet$$Partition$$Z1D55A0D7(s$$41, f$$20);\n}\nexport function fold(f$$21, z$$2, s$$42) {\n  return SetTreeModule$$$fold(f$$21, z$$2, FSharpSet$$get_Tree(s$$42));\n}\nexport function foldBack(f$$22, s$$43, z$$3) {\n  return SetTreeModule$$$foldBack(f$$22, FSharpSet$$get_Tree(s$$43), z$$3);\n}\nexport function map(f$$23, s$$44, comparer$$27) {\n  return FSharpSet$$Map$$7597B8F7(s$$44, f$$23, comparer$$27);\n}\nexport function count(s$$45) {\n  return FSharpSet$$get_Count(s$$45);\n}\nexport function minimumElement(s$$46) {\n  return FSharpSet$$get_MinimumElement(s$$46);\n}\nexport function maximumElement(s$$47) {\n  return FSharpSet$$get_MaximumElement(s$$47);\n}\nexport function ofList(li, comparer$$28) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$28, SetTreeModule$$$ofSeq(comparer$$28, li));\n}\nexport function ofArray(arr$$2, comparer$$29) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$29, SetTreeModule$$$ofArray(comparer$$29, arr$$2));\n}\nexport function toList(s$$48) {\n  return SetTreeModule$$$toList(FSharpSet$$get_Tree(s$$48));\n}\nexport function toArray(s$$49, cons) {\n  var n$$3 = count(s$$49) | 0;\n  var res$$1 = new cons(n$$3);\n  SetTreeModule$$$copyToArray(FSharpSet$$get_Tree(s$$49), res$$1, 0);\n  return res$$1;\n}\nexport function toSeq(s$$50) {\n  return SetTreeModule$$$toSeq(FSharpSet$$get_Tree(s$$50));\n}\nexport function ofSeq(elements, comparer$$30) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$30, SetTreeModule$$$ofSeq(comparer$$30, elements));\n}\nexport function difference(x$$28, y$$6) {\n  return FSharpSet$$$op_Subtraction(x$$28, y$$6);\n}\nexport function isSubset(x$$29, y$$7) {\n  return FSharpSet$$IsSubsetOf$$6A20B1FF(x$$29, y$$7);\n}\nexport function isSuperset(x$$30, y$$8) {\n  return FSharpSet$$IsSupersetOf$$6A20B1FF(x$$30, y$$8);\n}\nexport function isProperSubset(x$$31, y$$9) {\n  return FSharpSet$$IsProperSubsetOf$$6A20B1FF(x$$31, y$$9);\n}\nexport function isProperSuperset(x$$32, y$$10) {\n  return FSharpSet$$IsProperSupersetOf$$6A20B1FF(x$$32, y$$10);\n}\nexport function minElement(s$$51) {\n  return FSharpSet$$get_MinimumElement(s$$51);\n}\nexport function maxElement(s$$52) {\n  return FSharpSet$$get_MaximumElement(s$$52);\n}\n\nfunction createMutablePrivate(comparer$$31, tree$0027) {\n  var _ref;\n\n  var tree$$1 = tree$0027;\n  return _ref = {\n    get size() {\n      return SetTreeModule$$$count(tree$$1);\n    },\n\n    add: function add(x$$33) {\n      var this$$$4 = this;\n      tree$$1 = SetTreeModule$$$add(comparer$$31, x$$33, tree$$1);\n      return this$$$4;\n    },\n    add_: function add_(x$$34) {\n      if (SetTreeModule$$$mem(comparer$$31, x$$34, tree$$1)) {\n        return false;\n      } else {\n        tree$$1 = SetTreeModule$$$add(comparer$$31, x$$34, tree$$1);\n        return true;\n      }\n    },\n    clear: function clear() {\n      tree$$1 = new SetTree$00601(0, \"SetEmpty\");\n    },\n    \"delete\": function _delete(x$$35) {\n      if (SetTreeModule$$$mem(comparer$$31, x$$35, tree$$1)) {\n        tree$$1 = SetTreeModule$$$remove(comparer$$31, x$$35, tree$$1);\n        return true;\n      } else {\n        return false;\n      }\n    },\n    has: function has(x$$36) {\n      return SetTreeModule$$$mem(comparer$$31, x$$36, tree$$1);\n    },\n    keys: function keys() {\n      return SetTreeModule$$$toSeq(tree$$1);\n    },\n    values: function values() {\n      return SetTreeModule$$$toSeq(tree$$1);\n    },\n    entries: function entries() {\n      var source = SetTreeModule$$$toSeq(tree$$1);\n      return map$$1(function mapping(v) {\n        return [v, v];\n      }, source);\n    }\n  }, _defineProperty(_ref, Symbol.iterator, function () {\n    return toIterator(SetTreeModule$$$mkIEnumerator(tree$$1));\n  }), _defineProperty(_ref, \"GetEnumerator\", function GetEnumerator() {\n    return SetTreeModule$$$mkIEnumerator(tree$$1);\n  }), _ref;\n}\n\nexport function createMutable(source$$1, comparer$$32) {\n  var set = MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D(source$$1, comparer$$32);\n  return set;\n}\nexport function distinct(xs, comparer$$33) {\n  return delay(function () {\n    var set$$1 = MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D(empty$$1(), comparer$$33);\n    return collect(function (x$$37) {\n      return MutableSet$002400601$0024$0024Add$0024$00242B595(set$$1, x$$37) ? singleton$$1(x$$37) : empty$$1();\n    }, xs);\n  });\n}\nexport function distinctBy(projection, xs$$1, comparer$$34) {\n  return delay(function () {\n    var set$$2 = MutableSet$002400601$0024$0024$0024$0024002Ector$0024$0024Z6150332D(empty$$1(), comparer$$34);\n    return collect(function (x$$38) {\n      return MutableSet$002400601$0024$0024Add$0024$00242B595(set$$2, projection(x$$38)) ? singleton$$1(x$$38) : empty$$1();\n    }, xs$$1);\n  });\n}\nexport function unionWith(s1$$4, s2$$4) {\n  return fold$$1(function folder(acc$$14, x$$39) {\n    return acc$$14.add(x$$39);\n  }, s1$$4, s2$$4);\n}\nexport function intersectWith(s1$$5, s2$$5, comparer$$35) {\n  var s2$$6 = ofSeq(s2$$5, comparer$$35);\n  iterate$$1(function (x$$40) {\n    if (!FSharpSet$$Contains$$2B595(s2$$6, x$$40)) {\n      var value = s1$$5[\"delete\"](x$$40);\n      value, null;\n    }\n  }, s1$$5);\n}\nexport function exceptWith(s1$$6, s2$$7) {\n  iterate$$1(function (x$$41) {\n    var value$$1 = s1$$6[\"delete\"](x$$41);\n    value$$1, null;\n  }, s2$$7);\n}\nexport function isSubsetOf(s1$$7, s2$$8, comparer$$36) {\n  return isSubset(ofSeq(s1$$7, comparer$$36), ofSeq(s2$$8, comparer$$36));\n}\nexport function isSupersetOf(s1$$8, s2$$9, comparer$$37) {\n  return isSuperset(ofSeq(s1$$8, comparer$$37), ofSeq(s2$$9, comparer$$37));\n}\nexport function isProperSubsetOf(s1$$9, s2$$10, comparer$$38) {\n  return isProperSubset(ofSeq(s1$$9, comparer$$38), ofSeq(s2$$10, comparer$$38));\n}\nexport function isProperSupersetOf(s1$$10, s2$$11, comparer$$39) {\n  return isProperSuperset(ofSeq(s1$$10, comparer$$39), ofSeq(s2$$11, comparer$$39));\n}","import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.concat\";\nimport \"core-js/modules/es.array.every\";\nimport \"core-js/modules/es.array.fill\";\nimport \"core-js/modules/es.array.filter\";\nimport \"core-js/modules/es.array.find\";\nimport \"core-js/modules/es.array.find-index\";\nimport \"core-js/modules/es.array.from\";\nimport \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.is-array\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.array.map\";\nimport \"core-js/modules/es.array.reduce\";\nimport \"core-js/modules/es.array.reduce-right\";\nimport \"core-js/modules/es.array.reverse\";\nimport \"core-js/modules/es.array.slice\";\nimport \"core-js/modules/es.array.sort\";\nimport \"core-js/modules/es.array.splice\";\nimport \"core-js/modules/es.array-buffer.constructor\";\nimport \"core-js/modules/es.array-buffer.is-view\";\nimport \"core-js/modules/es.array-buffer.slice\";\nimport \"core-js/modules/es.date.to-string\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nimport { defaultArg, value as value$$12, some } from \"./Option.js\";\nimport { compare, addToDict, addToSet, getItemFromDict, tryGetValue, max as max$$1, comparePrimitives } from \"./Util.js\";\nimport { createMutable } from \"./Map.js\";\nimport { createMutable as createMutable$$1 } from \"./Set.js\";\nimport { List } from \"./Types.js\";\nimport { iterate as iterate$$1 } from \"./Seq.js\";\n\nfunction indexNotFound() {\n  throw new Error(\"An index satisfying the predicate was not found in the collection.\");\n}\n\nexport function append(array1, array2, cons) {\n  if (ArrayBuffer.isView(array1)) {\n    var len1 = array1.length | 0;\n    var len2 = array2.length | 0;\n    var newArray = new cons(len1 + len2);\n\n    for (var i = 0; i <= len1 - 1; i++) {\n      newArray[i] = array1[i];\n    }\n\n    for (var i$$1 = 0; i$$1 <= len2 - 1; i$$1++) {\n      newArray[i$$1 + len1] = array2[i$$1];\n    }\n\n    return newArray;\n  } else {\n    return array1.concat(array2);\n  }\n}\nexport function filter(predicate, array) {\n  return array.filter(predicate);\n}\nexport function fill(target, targetIndex, count, value) {\n  target.fill(value, targetIndex, targetIndex + count);\n  return target;\n}\nexport function getSubArray(array$$3, start$$1, count$$2) {\n  return array$$3.slice(start$$1, start$$1 + count$$2);\n}\nexport function last(array$$5) {\n  if (array$$5.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  }\n\n  return array$$5[array$$5.length - 1];\n}\nexport function tryLast(array$$6) {\n  if (array$$6.length === 0) {\n    return null;\n  } else {\n    return some(array$$6[array$$6.length - 1]);\n  }\n}\nexport function mapIndexed(f, source, cons$$1) {\n  if (ArrayBuffer.isView(source)) {\n    var len = source.length | 0;\n    var target$$1 = new cons$$1(len);\n\n    for (var i$$2 = 0; i$$2 <= len - 1; i$$2++) {\n      target$$1[i$$2] = f(i$$2, source[i$$2]);\n    }\n\n    return target$$1;\n  } else {\n    return source.map(function (delegateArg0, delegateArg1) {\n      return f(delegateArg1, delegateArg0);\n    });\n  }\n}\nexport function map(f$$1, source$$1, cons$$2) {\n  if (ArrayBuffer.isView(source$$1)) {\n    var len$$1 = source$$1.length | 0;\n    var target$$2 = new cons$$2(len$$1);\n\n    for (var i$$4 = 0; i$$4 <= len$$1 - 1; i$$4++) {\n      target$$2[i$$4] = f$$1(source$$1[i$$4]);\n    }\n\n    return target$$2;\n  } else {\n    return source$$1.map(function mapping$$1(x$$1) {\n      return f$$1(x$$1);\n    });\n  }\n}\nexport function mapIndexed2(f$$2, source1, source2, cons$$3) {\n  if (source1.length !== source2.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  var result = new cons$$3(source1.length);\n\n  for (var i$$5 = 0; i$$5 <= source1.length - 1; i$$5++) {\n    result[i$$5] = f$$2(i$$5, source1[i$$5], source2[i$$5]);\n  }\n\n  return result;\n}\nexport function map2(f$$3, source1$$1, source2$$1, cons$$4) {\n  if (source1$$1.length !== source2$$1.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  var result$$1 = new cons$$4(source1$$1.length);\n\n  for (var i$$6 = 0; i$$6 <= source1$$1.length - 1; i$$6++) {\n    result$$1[i$$6] = f$$3(source1$$1[i$$6], source2$$1[i$$6]);\n  }\n\n  return result$$1;\n}\nexport function mapIndexed3(f$$4, source1$$2, source2$$2, source3, cons$$5) {\n  if (source1$$2.length !== source2$$2.length ? true : source2$$2.length !== source3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  var result$$2 = new cons$$5(source1$$2.length);\n\n  for (var i$$7 = 0; i$$7 <= source1$$2.length - 1; i$$7++) {\n    result$$2[i$$7] = f$$4(i$$7, source1$$2[i$$7], source2$$2[i$$7], source3[i$$7]);\n  }\n\n  return result$$2;\n}\nexport function map3(f$$5, source1$$3, source2$$3, source3$$1, cons$$6) {\n  if (source1$$3.length !== source2$$3.length ? true : source2$$3.length !== source3$$1.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  var result$$3 = new cons$$6(source1$$3.length);\n\n  for (var i$$8 = 0; i$$8 <= source1$$3.length - 1; i$$8++) {\n    result$$3[i$$8] = f$$5(source1$$3[i$$8], source2$$3[i$$8], source3$$1[i$$8]);\n  }\n\n  return result$$3;\n}\nexport function mapFold(mapping$$2, state, array$$9, cons$$7) {\n  var matchValue = array$$9.length | 0;\n\n  if (matchValue === 0) {\n    return [[], state];\n  } else {\n    var acc = state;\n    var res = new cons$$7(matchValue);\n\n    for (var i$$9 = 0; i$$9 <= array$$9.length - 1; i$$9++) {\n      var patternInput = mapping$$2(acc, array$$9[i$$9]);\n      res[i$$9] = patternInput[0];\n      acc = patternInput[1];\n    }\n\n    return [res, acc];\n  }\n}\nexport function mapFoldBack(mapping$$3, array$$10, state$$1, cons$$8) {\n  var matchValue$$1 = array$$10.length | 0;\n\n  if (matchValue$$1 === 0) {\n    return [[], state$$1];\n  } else {\n    var acc$$1 = state$$1;\n    var res$$1 = new cons$$8(matchValue$$1);\n\n    for (var i$$10 = array$$10.length - 1; i$$10 >= 0; i$$10--) {\n      var patternInput$$1 = mapping$$3(array$$10[i$$10], acc$$1);\n      res$$1[i$$10] = patternInput$$1[0];\n      acc$$1 = patternInput$$1[1];\n    }\n\n    return [res$$1, acc$$1];\n  }\n}\nexport function indexed(source$$2) {\n  var len$$4 = source$$2.length | 0;\n  var target$$3 = new Array(len$$4);\n\n  for (var i$$11 = 0; i$$11 <= len$$4 - 1; i$$11++) {\n    target$$3[i$$11] = [i$$11, source$$2[i$$11]];\n  }\n\n  return target$$3;\n}\nexport function truncate(count$$4, array$$11) {\n  var count$$5 = max$$1(comparePrimitives, 0, count$$4) | 0;\n  return array$$11.slice(0, 0 + count$$5);\n}\nexport function concat(arrays, cons$$9) {\n  var arr$$3;\n  var arrays$$1 = Array.from(arrays);\n  var matchValue$$2 = arrays$$1.length | 0;\n\n  switch (matchValue$$2) {\n    case 0:\n      {\n        return new cons$$9(0);\n      }\n\n    case 1:\n      {\n        return arrays$$1[0];\n      }\n\n    default:\n      {\n        if (arr$$3 = arrays$$1[0], ArrayBuffer.isView(arr$$3)) {\n          var totalIdx = 0;\n          var totalLength = 0;\n\n          for (var idx = 0; idx <= arrays$$1.length - 1; idx++) {\n            var arr$$4 = arrays$$1[idx];\n            totalLength = totalLength + arr$$4.length;\n          }\n\n          var result$$4 = new cons$$9(totalLength);\n\n          for (var idx$$1 = 0; idx$$1 <= arrays$$1.length - 1; idx$$1++) {\n            var arr$$5 = arrays$$1[idx$$1];\n\n            for (var j = 0; j <= arr$$5.length - 1; j++) {\n              result$$4[totalIdx] = arr$$5[j];\n              totalIdx = totalIdx + 1;\n            }\n          }\n\n          return result$$4;\n        } else {\n          var _arrays$$1$;\n\n          return (_arrays$$1$ = arrays$$1[0]).concat.apply(_arrays$$1$, _toConsumableArray(arrays$$1.slice(1)));\n        }\n      }\n  }\n}\nexport function collect(mapping$$4, array$$14, cons$$10) {\n  var mapped = map(mapping$$4, array$$14, Array);\n  return concat(mapped, cons$$10);\n}\nexport function countBy(projection, array$$15, eq) {\n  var dict = createMutable([], eq);\n  var keys = [];\n\n  for (var idx$$2 = 0; idx$$2 <= array$$15.length - 1; idx$$2++) {\n    var value$$2 = array$$15[idx$$2];\n    var key = projection(value$$2);\n    var matchValue$$3 = tryGetValue(dict, key, 0);\n\n    if (matchValue$$3[0]) {\n      dict.set(key, matchValue$$3[1] + 1);\n    } else {\n      dict.set(key, 1);\n      var value$$3 = keys.push(key);\n      value$$3, null;\n    }\n  }\n\n  var result$$5 = map(function (key$$1) {\n    return [key$$1, getItemFromDict(dict, key$$1)];\n  }, keys, Array);\n  return result$$5;\n}\nexport function distinctBy(projection$$1, array$$17, eq$$1) {\n  var hashSet = createMutable$$1([], eq$$1);\n  return filter(function predicate$$2($arg$$3) {\n    var arg00 = projection$$1($arg$$3);\n    return addToSet(arg00, hashSet);\n  }, array$$17);\n}\nexport function distinct(array$$19, eq$$2) {\n  return distinctBy(function (x$$2) {\n    return x$$2;\n  }, array$$19, eq$$2);\n}\nexport function where(predicate$$3, array$$20) {\n  return array$$20.filter(predicate$$3);\n}\nexport function contains(value$$4, array$$22, eq$$3) {\n  var loop = function loop($i$$12$$75) {\n    loop: while (true) {\n      var i$$12 = $i$$12$$75;\n\n      if (i$$12 >= array$$22.length) {\n        return false;\n      } else if (eq$$3.Equals(value$$4, array$$22[i$$12])) {\n        return true;\n      } else {\n        $i$$12$$75 = i$$12 + 1;\n        continue loop;\n      }\n\n      break;\n    }\n  };\n\n  return loop(0);\n}\nexport function except(itemsToExclude, array$$23, eq$$4) {\n  if (array$$23.length === 0) {\n    return array$$23;\n  } else {\n    var cached = createMutable$$1(itemsToExclude, eq$$4);\n    return array$$23.filter(function predicate$$5(arg00$$1) {\n      return addToSet(arg00$$1, cached);\n    });\n  }\n}\nexport function groupBy(projection$$2, array$$26, cons$$11, eq$$5) {\n  var dict$$1 = createMutable([], eq$$5);\n  var keys$$1 = [];\n\n  for (var idx$$3 = 0; idx$$3 <= array$$26.length - 1; idx$$3++) {\n    var v = array$$26[idx$$3];\n    var key$$2 = projection$$2(v);\n    var matchValue$$4 = tryGetValue(dict$$1, key$$2, null);\n\n    if (matchValue$$4[0]) {\n      dict$$1.set(key$$2, new List(v, matchValue$$4[1]));\n    } else {\n      addToDict(dict$$1, key$$2, new List(v, new List()));\n      var value$$5 = keys$$1.push(key$$2);\n      value$$5, null;\n    }\n  }\n\n  var result$$6 = map(function (key$$3) {\n    var array$$28;\n    return [key$$3, (array$$28 = cons$$11.from(getItemFromDict(dict$$1, key$$3)), array$$28.reverse())];\n  }, keys$$1, Array);\n  return result$$6;\n}\nexport function empty(cons$$12) {\n  return new cons$$12(0);\n}\nexport function singleton(value$$6, cons$$14) {\n  var ar = new cons$$14(1);\n  ar[0] = value$$6;\n  return ar;\n}\nexport function initialize(count$$8, initializer, cons$$15) {\n  if (count$$8 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  }\n\n  var result$$7 = new cons$$15(count$$8);\n\n  for (var i$$13 = 0; i$$13 <= count$$8 - 1; i$$13++) {\n    result$$7[i$$13] = initializer(i$$13);\n  }\n\n  return result$$7;\n}\nexport function pairwise(array$$30) {\n  if (array$$30.length < 2) {\n    return [];\n  } else {\n    var count$$9 = array$$30.length - 1 | 0;\n    var result$$8 = new Array(count$$9);\n\n    for (var i$$14 = 0; i$$14 <= count$$9 - 1; i$$14++) {\n      result$$8[i$$14] = [array$$30[i$$14], array$$30[i$$14 + 1]];\n    }\n\n    return result$$8;\n  }\n}\nexport function replicate(count$$10, initial, cons$$16) {\n  if (count$$10 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  }\n\n  var result$$9 = new cons$$16(count$$10);\n\n  for (var i$$15 = 0; i$$15 <= result$$9.length - 1; i$$15++) {\n    result$$9[i$$15] = initial;\n  }\n\n  return result$$9;\n}\nexport function copy(array$$31, cons$$17) {\n  return array$$31.slice();\n}\nexport function reverse(array$$33, cons$$18) {\n  var array$$35 = array$$33.slice();\n  return array$$35.reverse();\n}\nexport function scan(folder, state$$2, array$$37, cons$$19) {\n  var res$$2 = new cons$$19(array$$37.length + 1);\n  res$$2[0] = state$$2;\n\n  for (var i$$16 = 0; i$$16 <= array$$37.length - 1; i$$16++) {\n    res$$2[i$$16 + 1] = folder(res$$2[i$$16], array$$37[i$$16]);\n  }\n\n  return res$$2;\n}\nexport function scanBack(folder$$1, array$$38, state$$3, cons$$20) {\n  var res$$3 = new cons$$20(array$$38.length + 1);\n  res$$3[array$$38.length] = state$$3;\n\n  for (var i$$17 = array$$38.length - 1; i$$17 >= 0; i$$17--) {\n    res$$3[i$$17] = folder$$1(array$$38[i$$17], res$$3[i$$17 + 1]);\n  }\n\n  return res$$3;\n}\nexport function skip(count$$11, array$$39, cons$$21) {\n  if (count$$11 > array$$39.length) {\n    throw new Error(\"count is greater than array length\\\\nParameter name: count\");\n  }\n\n  if (count$$11 === array$$39.length) {\n    return new cons$$21(0);\n  } else {\n    var count$$12 = (count$$11 < 0 ? 0 : count$$11) | 0;\n    return array$$39.slice(count$$12);\n  }\n}\nexport function skipWhile(predicate$$7, array$$41, cons$$23) {\n  var count$$14 = 0;\n\n  while (count$$14 < array$$41.length ? predicate$$7(array$$41[count$$14]) : false) {\n    count$$14 = count$$14 + 1;\n  }\n\n  if (count$$14 === array$$41.length) {\n    return new cons$$23(0);\n  } else {\n    var count$$15 = count$$14 | 0;\n    return array$$41.slice(count$$15);\n  }\n}\nexport function take(count$$16, array$$43, cons$$25) {\n  if (count$$16 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  }\n\n  if (count$$16 > array$$43.length) {\n    throw new Error(\"count is greater than array length\\\\nParameter name: count\");\n  }\n\n  if (count$$16 === 0) {\n    return new cons$$25(0);\n  } else {\n    return array$$43.slice(0, 0 + count$$16);\n  }\n}\nexport function takeWhile(predicate$$8, array$$45, cons$$27) {\n  var count$$18 = 0;\n\n  while (count$$18 < array$$45.length ? predicate$$8(array$$45[count$$18]) : false) {\n    count$$18 = count$$18 + 1;\n  }\n\n  if (count$$18 === 0) {\n    return new cons$$27(0);\n  } else {\n    var count$$19 = count$$18 | 0;\n    return array$$45.slice(0, 0 + count$$19);\n  }\n}\nexport function addRangeInPlace(range, array$$47) {\n  iterate$$1(function (x$$3) {\n    var value$$7 = array$$47.push(x$$3);\n    value$$7, null;\n  }, range);\n}\nexport function removeInPlace(item$$4, array$$49) {\n  var i$$18 = array$$49.indexOf(item$$4);\n\n  if (i$$18 > -1) {\n    var value$$8 = array$$49.splice(i$$18, 1);\n    value$$8, null;\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function removeAllInPlace(predicate$$9, array$$52) {\n  var countRemoveAll = function countRemoveAll(count$$20) {\n    var i$$19 = array$$52.findIndex(predicate$$9);\n\n    if (i$$19 > -1) {\n      var value$$9 = array$$52.splice(i$$19, 1);\n      value$$9, null;\n      return countRemoveAll(count$$20) + 1 | 0;\n    } else {\n      return count$$20 | 0;\n    }\n  };\n\n  return countRemoveAll(0) | 0;\n}\nexport function copyTo(source$$3, sourceIndex, target$$4, targetIndex$$1, count$$21) {\n  var diff = targetIndex$$1 - sourceIndex | 0;\n\n  for (var i$$20 = sourceIndex; i$$20 <= sourceIndex + count$$21 - 1; i$$20++) {\n    target$$4[i$$20 + diff] = source$$3[i$$20];\n  }\n}\nexport function partition(f$$6, source$$4, cons$$29) {\n  var len$$7 = source$$4.length | 0;\n  var res1 = new cons$$29(len$$7);\n  var res2 = new cons$$29(len$$7);\n  var iTrue = 0;\n  var iFalse = 0;\n\n  for (var i$$21 = 0; i$$21 <= len$$7 - 1; i$$21++) {\n    if (f$$6(source$$4[i$$21])) {\n      res1[iTrue] = source$$4[i$$21];\n      iTrue = iTrue + 1;\n    } else {\n      res2[iFalse] = source$$4[i$$21];\n      iFalse = iFalse + 1;\n    }\n  }\n\n  return [truncate(iTrue, res1), truncate(iFalse, res2)];\n}\nexport function find(predicate$$11, array$$57) {\n  var matchValue$$5 = array$$57.find(predicate$$11);\n\n  if (matchValue$$5 == null) {\n    return indexNotFound();\n  } else {\n    var res$$4 = value$$12(matchValue$$5);\n    return res$$4;\n  }\n}\nexport function tryFind(predicate$$13, array$$59) {\n  return array$$59.find(predicate$$13);\n}\nexport function findIndex(predicate$$15, array$$61) {\n  var matchValue$$6 = array$$61.findIndex(predicate$$15);\n\n  if (matchValue$$6 > -1) {\n    return matchValue$$6 | 0;\n  } else {\n    return indexNotFound() | 0;\n  }\n}\nexport function tryFindIndex(predicate$$17, array$$63) {\n  var matchValue$$7 = array$$63.findIndex(predicate$$17);\n\n  if (matchValue$$7 > -1) {\n    return matchValue$$7;\n  } else {\n    return null;\n  }\n}\nexport function pick(chooser, array$$65) {\n  var loop$$1 = function loop$$1($i$$22$$143) {\n    loop$$1: while (true) {\n      var i$$22 = $i$$22$$143;\n\n      if (i$$22 >= array$$65.length) {\n        return indexNotFound();\n      } else {\n        var matchValue$$8 = chooser(array$$65[i$$22]);\n\n        if (matchValue$$8 != null) {\n          var res$$5 = value$$12(matchValue$$8);\n          return res$$5;\n        } else {\n          $i$$22$$143 = i$$22 + 1;\n          continue loop$$1;\n        }\n      }\n\n      break;\n    }\n  };\n\n  return loop$$1(0);\n}\nexport function tryPick(chooser$$1, array$$66) {\n  var loop$$2 = function loop$$2($i$$23$$146) {\n    loop$$2: while (true) {\n      var i$$23 = $i$$23$$146;\n\n      if (i$$23 >= array$$66.length) {\n        return null;\n      } else {\n        var matchValue$$9 = chooser$$1(array$$66[i$$23]);\n\n        if (matchValue$$9 == null) {\n          $i$$23$$146 = i$$23 + 1;\n          continue loop$$2;\n        } else {\n          return matchValue$$9;\n        }\n      }\n\n      break;\n    }\n  };\n\n  return loop$$2(0);\n}\nexport function findBack(predicate$$19, array$$67) {\n  var loop$$3 = function loop$$3($i$$24$$149) {\n    loop$$3: while (true) {\n      var i$$24 = $i$$24$$149;\n\n      if (i$$24 < 0) {\n        return indexNotFound();\n      } else if (predicate$$19(array$$67[i$$24])) {\n        return array$$67[i$$24];\n      } else {\n        $i$$24$$149 = i$$24 - 1;\n        continue loop$$3;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$3(array$$67.length - 1);\n}\nexport function tryFindBack(predicate$$20, array$$68) {\n  var loop$$4 = function loop$$4($i$$25$$152) {\n    loop$$4: while (true) {\n      var i$$25 = $i$$25$$152;\n\n      if (i$$25 < 0) {\n        return null;\n      } else if (predicate$$20(array$$68[i$$25])) {\n        return some(array$$68[i$$25]);\n      } else {\n        $i$$25$$152 = i$$25 - 1;\n        continue loop$$4;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$4(array$$68.length - 1);\n}\nexport function findLastIndex(predicate$$21, array$$69) {\n  var loop$$5 = function loop$$5($i$$26$$155) {\n    loop$$5: while (true) {\n      var i$$26 = $i$$26$$155;\n\n      if (i$$26 < 0) {\n        return -1 | 0;\n      } else if (predicate$$21(array$$69[i$$26])) {\n        return i$$26 | 0;\n      } else {\n        $i$$26$$155 = i$$26 - 1;\n        continue loop$$5;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$5(array$$69.length - 1) | 0;\n}\nexport function findIndexBack(predicate$$22, array$$70) {\n  var loop$$6 = function loop$$6($i$$27$$158) {\n    loop$$6: while (true) {\n      var i$$27 = $i$$27$$158;\n\n      if (i$$27 < 0) {\n        return indexNotFound() | 0;\n      } else if (predicate$$22(array$$70[i$$27])) {\n        return i$$27 | 0;\n      } else {\n        $i$$27$$158 = i$$27 - 1;\n        continue loop$$6;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$6(array$$70.length - 1) | 0;\n}\nexport function tryFindIndexBack(predicate$$23, array$$71) {\n  var loop$$7 = function loop$$7($i$$28$$161) {\n    loop$$7: while (true) {\n      var i$$28 = $i$$28$$161;\n\n      if (i$$28 < 0) {\n        return null;\n      } else if (predicate$$23(array$$71[i$$28])) {\n        return i$$28;\n      } else {\n        $i$$28$$161 = i$$28 - 1;\n        continue loop$$7;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$7(array$$71.length - 1);\n}\nexport function choose(chooser$$2, array$$72, cons$$30) {\n  var arr$$6 = array$$72.filter(function f$$7(x$$4) {\n    var option = chooser$$2(x$$4);\n    return option != null;\n  });\n  return map(function g(x$$5) {\n    var option$$1 = chooser$$2(x$$5);\n    return value$$12(option$$1);\n  }, arr$$6, cons$$30);\n}\nexport function foldIndexed(folder$$2, state$$4, array$$74) {\n  return array$$74.reduce(function (delegateArg0$$1, delegateArg1$$1, delegateArg2) {\n    return folder$$2(delegateArg2, delegateArg0$$1, delegateArg1$$1);\n  }, state$$4);\n}\nexport function fold(folder$$4, state$$6, array$$76) {\n  return array$$76.reduce(function (delegateArg0$$2, delegateArg1$$2) {\n    return folder$$4(delegateArg0$$2, delegateArg1$$2);\n  }, state$$6);\n}\nexport function iterate(action, array$$78) {\n  for (var i$$30 = 0; i$$30 <= array$$78.length - 1; i$$30++) {\n    action(array$$78[i$$30]);\n  }\n}\nexport function iterateIndexed(action$$1, array$$79) {\n  for (var i$$31 = 0; i$$31 <= array$$79.length - 1; i$$31++) {\n    action$$1(i$$31, array$$79[i$$31]);\n  }\n}\nexport function iterate2(action$$2, array1$$2, array2$$2) {\n  if (array1$$2.length !== array2$$2.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  for (var i$$32 = 0; i$$32 <= array1$$2.length - 1; i$$32++) {\n    action$$2(array1$$2[i$$32], array2$$2[i$$32]);\n  }\n}\nexport function iterateIndexed2(action$$3, array1$$3, array2$$3) {\n  if (array1$$3.length !== array2$$3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  for (var i$$33 = 0; i$$33 <= array1$$3.length - 1; i$$33++) {\n    action$$3(i$$33, array1$$3[i$$33], array2$$3[i$$33]);\n  }\n}\nexport function isEmpty(array$$80) {\n  return array$$80.length === 0;\n}\nexport function forAll(predicate$$25, array$$81) {\n  return array$$81.every(predicate$$25);\n}\nexport function permute(f$$8, array$$83) {\n  var size = array$$83.length | 0;\n  var res$$7 = new array$$83.constructor(array$$83.length);\n  var checkFlags = new Array(size);\n  iterateIndexed(function (i$$34, x$$8) {\n    var j$$1 = f$$8(i$$34) | 0;\n\n    if (j$$1 < 0 ? true : j$$1 >= size) {\n      throw new Error(\"Not a valid permutation\");\n    }\n\n    res$$7[j$$1] = x$$8;\n    checkFlags[j$$1] = 1;\n  }, array$$83);\n  var isValid = forAll(function (y) {\n    return 1 === y;\n  }, checkFlags);\n\n  if (!isValid) {\n    throw new Error(\"Not a valid permutation\");\n  }\n\n  return res$$7;\n}\nexport function setSlice(target$$5, lower, upper, source$$5) {\n  var lower$$1 = defaultArg(lower, 0) | 0;\n  var upper$$1 = defaultArg(upper, 0) | 0;\n  var length = (upper$$1 > 0 ? upper$$1 : target$$5.length - 1) - lower$$1 | 0;\n\n  if (ArrayBuffer.isView(target$$5) ? source$$5.length <= length : false) {\n    var target$$6 = target$$5;\n    var source$$6 = source$$5;\n    return target$$6.set(source$$6, lower$$1);\n  } else {\n    for (var i$$35 = 0; i$$35 <= length; i$$35++) {\n      target$$5[i$$35 + lower$$1] = source$$5[i$$35];\n    }\n  }\n}\nexport function sortInPlaceBy(projection$$3, xs, comparer) {\n  xs.sort(function (x$$10, y$$1) {\n    return comparer.Compare(projection$$3(x$$10), projection$$3(y$$1));\n  });\n}\nexport function sortInPlace(xs$$1, comparer$$1) {\n  xs$$1.sort(function (x$$11, y$$2) {\n    return comparer$$1.Compare(x$$11, y$$2);\n  });\n}\n\nfunction copyArray(array$$84) {\n  var result$$10 = new array$$84.constructor(array$$84.length);\n\n  for (var i$$36 = 0; i$$36 <= array$$84.length - 1; i$$36++) {\n    result$$10[i$$36] = array$$84[i$$36];\n  }\n\n  return result$$10;\n}\n\nexport function sort(xs$$2, comparer$$2) {\n  var xs$$3 = copyArray(xs$$2);\n  xs$$3.sort(function comparer$$3(x$$12, y$$3) {\n    return comparer$$2.Compare(x$$12, y$$3);\n  });\n  return xs$$3;\n}\nexport function sortBy(projection$$4, xs$$4, comparer$$4) {\n  var xs$$5 = copyArray(xs$$4);\n  xs$$5.sort(function comparer$$5(x$$13, y$$4) {\n    return comparer$$4.Compare(projection$$4(x$$13), projection$$4(y$$4));\n  });\n  return xs$$5;\n}\nexport function sortDescending(xs$$6, comparer$$6) {\n  var xs$$7 = copyArray(xs$$6);\n  xs$$7.sort(function comparer$$7(x$$14, y$$5) {\n    return comparer$$6.Compare(x$$14, y$$5) * -1;\n  });\n  return xs$$7;\n}\nexport function sortByDescending(projection$$5, xs$$8, comparer$$8) {\n  var xs$$9 = copyArray(xs$$8);\n  xs$$9.sort(function comparer$$9(x$$15, y$$6) {\n    return comparer$$8.Compare(projection$$5(x$$15), projection$$5(y$$6)) * -1;\n  });\n  return xs$$9;\n}\nexport function sortWith(comparer$$10, xs$$10) {\n  var xs$$11 = copyArray(xs$$10);\n  xs$$11.sort(comparer$$10);\n  return xs$$11;\n}\nexport function unfold(generator, state$$8) {\n  var res$$8 = [];\n\n  var loop$$8 = function loop$$8($state$$9$$220) {\n    loop$$8: while (true) {\n      var state$$9 = $state$$9$$220;\n      var matchValue$$10 = generator(state$$9);\n\n      if (matchValue$$10 != null) {\n        var x$$16 = matchValue$$10[0];\n        var s$0027$$2 = matchValue$$10[1];\n        var value$$10 = res$$8.push(x$$16);\n        value$$10, null;\n        $state$$9$$220 = s$0027$$2;\n        continue loop$$8;\n      }\n\n      break;\n    }\n  };\n\n  loop$$8(state$$8);\n  return res$$8;\n}\nexport function unzip(array$$86) {\n  var len$$9 = array$$86.length | 0;\n  var res1$$1 = new Array(len$$9);\n  var res2$$1 = new Array(len$$9);\n  iterateIndexed(function (i$$37, tupledArg) {\n    res1$$1[i$$37] = tupledArg[0];\n    res2$$1[i$$37] = tupledArg[1];\n  }, array$$86);\n  return [res1$$1, res2$$1];\n}\nexport function unzip3(array$$87) {\n  var len$$12 = array$$87.length | 0;\n  var res1$$2 = new Array(len$$12);\n  var res2$$2 = new Array(len$$12);\n  var res3 = new Array(len$$12);\n  iterateIndexed(function (i$$38, tupledArg$$1) {\n    res1$$2[i$$38] = tupledArg$$1[0];\n    res2$$2[i$$38] = tupledArg$$1[1];\n    res3[i$$38] = tupledArg$$1[2];\n  }, array$$87);\n  return [res1$$2, res2$$2, res3];\n}\nexport function zip(array1$$4, array2$$4) {\n  if (array1$$4.length !== array2$$4.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  var result$$11;\n  var len$$16 = array1$$4.length | 0;\n  result$$11 = new Array(len$$16);\n\n  for (var i$$39 = 0; i$$39 <= array1$$4.length - 1; i$$39++) {\n    result$$11[i$$39] = [array1$$4[i$$39], array2$$4[i$$39]];\n  }\n\n  return result$$11;\n}\nexport function zip3(array1$$5, array2$$5, array3) {\n  if (array1$$5.length !== array2$$5.length ? true : array2$$5.length !== array3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  var result$$12;\n  var len$$17 = array1$$5.length | 0;\n  result$$12 = new Array(len$$17);\n\n  for (var i$$40 = 0; i$$40 <= array1$$5.length - 1; i$$40++) {\n    result$$12[i$$40] = [array1$$5[i$$40], array2$$5[i$$40], array3[i$$40]];\n  }\n\n  return result$$12;\n}\nexport function chunkBySize(chunkSize, array$$88) {\n  if (chunkSize < 1) {\n    throw new Error(\"The input must be positive.\\\\nParameter name: size\");\n  }\n\n  if (array$$88.length === 0) {\n    return [[]];\n  } else {\n    var result$$13 = [];\n\n    for (var x$$17 = 0; x$$17 <= ~~Math.ceil(array$$88.length / chunkSize) - 1; x$$17++) {\n      var start$$8 = x$$17 * chunkSize | 0;\n      var slice = array$$88.slice(start$$8, start$$8 + chunkSize);\n      var value$$11 = result$$13.push(slice);\n      value$$11, null;\n    }\n\n    return result$$13;\n  }\n}\nexport function splitAt(index$$4, array$$91) {\n  if (index$$4 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: index\");\n  }\n\n  if (index$$4 > array$$91.length) {\n    throw new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\");\n  }\n\n  return [array$$91.slice(0, 0 + index$$4), array$$91.slice(index$$4)];\n}\nexport function compareWith(comparer$$12, array1$$6, array2$$6) {\n  if (array1$$6 == null) {\n    if (array2$$6 == null) {\n      return 0;\n    } else {\n      return -1 | 0;\n    }\n  } else if (array2$$6 == null) {\n    return 1;\n  } else {\n    var i$$41 = 0;\n    var result$$14 = 0;\n    var length1 = array1$$6.length | 0;\n    var length2 = array2$$6.length | 0;\n\n    if (length1 > length2) {\n      return 1;\n    } else if (length1 < length2) {\n      return -1 | 0;\n    } else {\n      while (i$$41 < length1 ? result$$14 === 0 : false) {\n        result$$14 = comparer$$12(array1$$6[i$$41], array2$$6[i$$41]);\n        i$$41 = i$$41 + 1;\n      }\n\n      return result$$14 | 0;\n    }\n  }\n}\nexport function equalsWith(comparer$$13, array1$$7, array2$$7) {\n  return compareWith(compare, array1$$7, array2$$7) === 0;\n}\nexport function exactlyOne(array$$94) {\n  if (array$$94.length === 1) {\n    return array$$94[0];\n  } else if (array$$94.length === 0) {\n    throw new Error(\"The input sequence was empty\\\\nParameter name: array\");\n  } else {\n    throw new Error(\"Input array too long\\\\nParameter name: array\");\n  }\n}\nexport function head(array$$95) {\n  if (array$$95.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  } else {\n    return array$$95[0];\n  }\n}\nexport function tryHead(array$$96) {\n  if (array$$96.length === 0) {\n    return null;\n  } else {\n    return some(array$$96[0]);\n  }\n}\nexport function tail(array$$97) {\n  if (array$$97.length === 0) {\n    throw new Error(\"Not enough elements\\\\nParameter name: array\");\n  }\n\n  return array$$97.slice(1);\n}\nexport function item(index$$5, array$$99) {\n  return array$$99[index$$5];\n}\nexport function tryItem(index$$6, array$$100) {\n  if (index$$6 < 0 ? true : index$$6 >= array$$100.length) {\n    return null;\n  } else {\n    return some(array$$100[index$$6]);\n  }\n}\nexport function foldBackIndexed(folder$$6, array$$101, state$$10) {\n  return array$$101.reduceRight(function (delegateArg0$$3, delegateArg1$$3, delegateArg2$$1) {\n    return folder$$6(delegateArg2$$1, delegateArg1$$3, delegateArg0$$3);\n  }, state$$10);\n}\nexport function foldBack(folder$$8, array$$103, state$$12) {\n  return array$$103.reduceRight(function (delegateArg0$$4, delegateArg1$$4) {\n    return folder$$8(delegateArg1$$4, delegateArg0$$4);\n  }, state$$12);\n}\nexport function foldIndexed2(folder$$10, state$$14, array1$$8, array2$$8) {\n  var acc$$6 = state$$14;\n\n  if (array1$$8.length !== array2$$8.length) {\n    throw new Error(\"Arrays have different lengths\");\n  }\n\n  for (var i$$43 = 0; i$$43 <= array1$$8.length - 1; i$$43++) {\n    acc$$6 = folder$$10(i$$43, acc$$6, array1$$8[i$$43], array2$$8[i$$43]);\n  }\n\n  return acc$$6;\n}\nexport function fold2(folder$$11, state$$15, array1$$9, array2$$9) {\n  return foldIndexed2(function (_arg1, acc$$7, x$$20, y$$7) {\n    return folder$$11(acc$$7, x$$20, y$$7);\n  }, state$$15, array1$$9, array2$$9);\n}\nexport function foldBackIndexed2(folder$$12, array1$$10, array2$$10, state$$16) {\n  var acc$$8 = state$$16;\n\n  if (array1$$10.length !== array2$$10.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  var size$$1 = array1$$10.length | 0;\n\n  for (var i$$44 = 1; i$$44 <= size$$1; i$$44++) {\n    acc$$8 = folder$$12(i$$44 - 1, array1$$10[size$$1 - i$$44], array2$$10[size$$1 - i$$44], acc$$8);\n  }\n\n  return acc$$8;\n}\nexport function foldBack2(f$$9, array1$$11, array2$$11, state$$17) {\n  return foldBackIndexed2(function (_arg1$$1, x$$21, y$$8, acc$$9) {\n    return f$$9(x$$21, y$$8, acc$$9);\n  }, array1$$11, array2$$11, state$$17);\n}\nexport function reduce(reduction, array$$105) {\n  if (array$$105.length === 0) {\n    throw new Error(\"The input array was empty\");\n  }\n\n  return array$$105.reduce(reduction);\n}\nexport function reduceBack(reduction$$2, array$$107) {\n  if (array$$107.length === 0) {\n    throw new Error(\"The input array was empty\");\n  }\n\n  return array$$107.reduceRight(reduction$$2);\n}\nexport function forAll2(predicate$$27, array1$$12, array2$$12) {\n  return fold2(function (acc$$10, x$$22, y$$9) {\n    return acc$$10 ? predicate$$27(x$$22, y$$9) : false;\n  }, true, array1$$12, array2$$12);\n}\nexport function existsOffset($predicate$$28$$275, $array$$109$$276, $index$$7$$277) {\n  existsOffset: while (true) {\n    var predicate$$28 = $predicate$$28$$275,\n        array$$109 = $array$$109$$276,\n        index$$7 = $index$$7$$277;\n\n    if (index$$7 === array$$109.length) {\n      return false;\n    } else if (predicate$$28(array$$109[index$$7])) {\n      return true;\n    } else {\n      $predicate$$28$$275 = predicate$$28;\n      $array$$109$$276 = array$$109;\n      $index$$7$$277 = index$$7 + 1;\n      continue existsOffset;\n    }\n\n    break;\n  }\n}\nexport function exists(predicate$$29, array$$110) {\n  return existsOffset(predicate$$29, array$$110, 0);\n}\nexport function existsOffset2($predicate$$30$$280, $array1$$13$$281, $array2$$13$$282, $index$$8$$283) {\n  existsOffset2: while (true) {\n    var predicate$$30 = $predicate$$30$$280,\n        array1$$13 = $array1$$13$$281,\n        array2$$13 = $array2$$13$$282,\n        index$$8 = $index$$8$$283;\n\n    if (index$$8 === array1$$13.length) {\n      return false;\n    } else if (predicate$$30(array1$$13[index$$8], array2$$13[index$$8])) {\n      return true;\n    } else {\n      $predicate$$30$$280 = predicate$$30;\n      $array1$$13$$281 = array1$$13;\n      $array2$$13$$282 = array2$$13;\n      $index$$8$$283 = index$$8 + 1;\n      continue existsOffset2;\n    }\n\n    break;\n  }\n}\nexport function exists2(predicate$$31, array1$$14, array2$$14) {\n  if (array1$$14.length !== array2$$14.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  return existsOffset2(predicate$$31, array1$$14, array2$$14, 0);\n}\nexport function sum(array$$111, adder) {\n  var acc$$11 = adder.GetZero();\n\n  for (var i$$45 = 0; i$$45 <= array$$111.length - 1; i$$45++) {\n    acc$$11 = adder.Add(acc$$11, array$$111[i$$45]);\n  }\n\n  return acc$$11;\n}\nexport function sumBy(projection$$6, array$$112, adder$$1) {\n  var acc$$12 = adder$$1.GetZero();\n\n  for (var i$$46 = 0; i$$46 <= array$$112.length - 1; i$$46++) {\n    acc$$12 = adder$$1.Add(acc$$12, projection$$6(array$$112[i$$46]));\n  }\n\n  return acc$$12;\n}\nexport function maxBy(projection$$7, xs$$12, comparer$$14) {\n  return reduce(function (x$$23, y$$10) {\n    return comparer$$14.Compare(projection$$7(y$$10), projection$$7(x$$23)) > 0 ? y$$10 : x$$23;\n  }, xs$$12);\n}\nexport function max(xs$$13, comparer$$15) {\n  return reduce(function (x$$24, y$$11) {\n    return comparer$$15.Compare(y$$11, x$$24) > 0 ? y$$11 : x$$24;\n  }, xs$$13);\n}\nexport function minBy(projection$$8, xs$$14, comparer$$16) {\n  return reduce(function (x$$25, y$$12) {\n    return comparer$$16.Compare(projection$$8(y$$12), projection$$8(x$$25)) > 0 ? x$$25 : y$$12;\n  }, xs$$14);\n}\nexport function min(xs$$15, comparer$$17) {\n  return reduce(function (x$$26, y$$13) {\n    return comparer$$17.Compare(y$$13, x$$26) > 0 ? x$$26 : y$$13;\n  }, xs$$15);\n}\nexport function average(array$$113, averager) {\n  if (array$$113.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  }\n\n  var total = averager.GetZero();\n\n  for (var i$$47 = 0; i$$47 <= array$$113.length - 1; i$$47++) {\n    total = averager.Add(total, array$$113[i$$47]);\n  }\n\n  return averager.DivideByInt(total, array$$113.length);\n}\nexport function averageBy(projection$$9, array$$114, averager$$1) {\n  if (array$$114.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  }\n\n  var total$$1 = averager$$1.GetZero();\n\n  for (var i$$48 = 0; i$$48 <= array$$114.length - 1; i$$48++) {\n    total$$1 = averager$$1.Add(total$$1, projection$$9(array$$114[i$$48]));\n  }\n\n  return averager$$1.DivideByInt(total$$1, array$$114.length);\n}\nexport function ofSeq(source$$7, cons$$31) {\n  return cons$$31.from(source$$7);\n}\nexport function ofList(source$$8, cons$$32) {\n  return cons$$32.from(source$$8);\n}\nexport function toList(source$$9) {\n  var len$$18 = source$$9.length | 0;\n  var target$$7 = new List();\n\n  for (var i$$49 = len$$18 - 1; i$$49 >= 0; i$$49--) {\n    target$$7 = new List(source$$9[i$$49], target$$7);\n  }\n\n  return target$$7;\n}\nexport function windowed(windowSize, source$$10) {\n  if (windowSize <= 0) {\n    throw new Error(\"windowSize must be positive\");\n  }\n\n  var res$$9;\n  var len$$19 = max$$1(comparePrimitives, 0, source$$10.length - windowSize) | 0;\n  res$$9 = new Array(len$$19);\n\n  for (var i$$50 = windowSize; i$$50 <= source$$10.length; i$$50++) {\n    res$$9[i$$50 - windowSize] = source$$10.slice(i$$50 - windowSize, i$$50 - 1 + 1);\n  }\n\n  return res$$9;\n}","import \"core-js/modules/es.array.sort\";\nimport { defaultArg, value as value$$1, some } from \"./Option.js\";\nimport { List } from \"./Types.js\";\nimport { collect as collect$$1, scanBack as scanBack$$1, scan as scan$$1, foldBack2 as foldBack2$$1, fold2 as fold2$$1, fold as fold$$1, map as map$$1 } from \"./Seq.js\";\nimport { partialApply, getItemFromDict, addToDict, tryGetValue, addToSet, count } from \"./Util.js\";\nimport { ofList } from \"./Array.js\";\nimport { permute as permute$$1, findIndexBack as findIndexBack$$1, tryFindIndexBack as tryFindIndexBack$$1 } from \"./Array\";\nimport { createMutable } from \"./Set.js\";\nimport { createMutable as createMutable$$1 } from \"./Map.js\";\nexport function head(_arg1) {\n  if (_arg1.tail != null) {\n    return _arg1.head;\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function tryHead(_arg1$$1) {\n  if (_arg1$$1.tail != null) {\n    return some(_arg1$$1.head);\n  } else {\n    return null;\n  }\n}\nexport function tail(_arg1$$2) {\n  if (_arg1$$2.tail != null) {\n    return _arg1$$2.tail;\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function last($_arg1$$3$$5) {\n  last: while (true) {\n    var _arg1$$3 = $_arg1$$3$$5;\n\n    if (_arg1$$3.tail != null) {\n      if (_arg1$$3.tail.tail == null) {\n        return _arg1$$3.head;\n      } else {\n        $_arg1$$3$$5 = _arg1$$3.tail;\n        continue last;\n      }\n    } else {\n      throw new Error(\"List was empty\");\n    }\n\n    break;\n  }\n}\nexport function tryLast($_arg1$$4$$6) {\n  tryLast: while (true) {\n    var _arg1$$4 = $_arg1$$4$$6;\n\n    if (_arg1$$4.tail != null) {\n      if (_arg1$$4.tail.tail == null) {\n        return some(_arg1$$4.head);\n      } else {\n        $_arg1$$4$$6 = _arg1$$4.tail;\n        continue tryLast;\n      }\n    } else {\n      return null;\n    }\n\n    break;\n  }\n}\nexport function compareWith(comparer, xs$$3, ys) {\n  if (xs$$3 === ys) {\n    return 0;\n  } else {\n    var loop = function loop($xs$$4$$10, $ys$$1$$11) {\n      loop: while (true) {\n        var xs$$4 = $xs$$4$$10,\n            ys$$1 = $ys$$1$$11;\n\n        if (xs$$4.tail != null) {\n          if (ys$$1.tail != null) {\n            var matchValue$$1 = comparer(xs$$4.head, ys$$1.head) | 0;\n\n            if (matchValue$$1 === 0) {\n              $xs$$4$$10 = xs$$4.tail;\n              $ys$$1$$11 = ys$$1.tail;\n              continue loop;\n            } else {\n              return matchValue$$1 | 0;\n            }\n          } else {\n            return 1;\n          }\n        } else if (ys$$1.tail == null) {\n          return 0;\n        } else {\n          return -1 | 0;\n        }\n\n        break;\n      }\n    };\n\n    return loop(xs$$3, ys) | 0;\n  }\n}\nexport function foldIndexedAux($f$$12, $i$$13, $acc$$14, $_arg1$$5$$15) {\n  foldIndexedAux: while (true) {\n    var f = $f$$12,\n        i = $i$$13,\n        acc = $acc$$14,\n        _arg1$$5 = $_arg1$$5$$15;\n\n    if (_arg1$$5.tail != null) {\n      $f$$12 = f;\n      $i$$13 = i + 1;\n      $acc$$14 = f(i, acc, _arg1$$5.head);\n      $_arg1$$5$$15 = _arg1$$5.tail;\n      continue foldIndexedAux;\n    } else {\n      return acc;\n    }\n\n    break;\n  }\n}\nexport function foldIndexed(f$$1, state, xs$$7) {\n  return foldIndexedAux(f$$1, 0, state, xs$$7);\n}\nexport function fold($f$$2$$19, $state$$1$$20, $xs$$8$$21) {\n  fold: while (true) {\n    var f$$2 = $f$$2$$19,\n        state$$1 = $state$$1$$20,\n        xs$$8 = $xs$$8$$21;\n\n    if (xs$$8.tail != null) {\n      $f$$2$$19 = f$$2;\n      $state$$1$$20 = f$$2(state$$1, xs$$8.head);\n      $xs$$8$$21 = xs$$8.tail;\n      continue fold;\n    } else {\n      return state$$1;\n    }\n\n    break;\n  }\n}\nexport function reverse(xs$$9) {\n  return fold(function (acc$$1, x$$6) {\n    return new List(x$$6, acc$$1);\n  }, new List(), xs$$9);\n}\nexport function foldBack(f$$3, xs$$10, state$$2) {\n  return fold(function (acc$$2, x$$7) {\n    return f$$3(x$$7, acc$$2);\n  }, state$$2, reverse(xs$$10));\n}\nexport function toSeq(xs$$11) {\n  return map$$1(function (x$$8) {\n    return x$$8;\n  }, xs$$11);\n}\nexport function ofSeq(xs$$12) {\n  var xs$$13 = fold$$1(function (acc$$3, x$$9) {\n    return new List(x$$9, acc$$3);\n  }, new List(), xs$$12);\n  return reverse(xs$$13);\n}\nexport function concat(lists) {\n  var xs$$15 = fold$$1(function (state$$3, xs$$14) {\n    return fold(function f$$4(acc$$4, x$$10) {\n      return new List(x$$10, acc$$4);\n    }, state$$3, xs$$14);\n  }, new List(), lists);\n  return reverse(xs$$15);\n}\nexport function foldIndexed2Aux($f$$5$$31, $i$$1$$32, $acc$$5$$33, $bs$$34, $cs$$35) {\n  foldIndexed2Aux: while (true) {\n    var f$$5 = $f$$5$$31,\n        i$$1 = $i$$1$$32,\n        acc$$5 = $acc$$5$$33,\n        bs = $bs$$34,\n        cs = $cs$$35;\n    var $target$$36, x$$11, xs$$16, y$$1, ys$$3;\n\n    if (bs.tail != null) {\n      if (cs.tail != null) {\n        $target$$36 = 1;\n        x$$11 = bs.head;\n        xs$$16 = bs.tail;\n        y$$1 = cs.head;\n        ys$$3 = cs.tail;\n      } else {\n        $target$$36 = 2;\n      }\n    } else if (cs.tail == null) {\n      $target$$36 = 0;\n    } else {\n      $target$$36 = 2;\n    }\n\n    switch ($target$$36) {\n      case 0:\n        {\n          return acc$$5;\n        }\n\n      case 1:\n        {\n          $f$$5$$31 = f$$5;\n          $i$$1$$32 = i$$1 + 1;\n          $acc$$5$$33 = f$$5(i$$1, acc$$5, x$$11, y$$1);\n          $bs$$34 = xs$$16;\n          $cs$$35 = ys$$3;\n          continue foldIndexed2Aux;\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function foldIndexed2(f$$6, state$$4, xs$$17, ys$$4) {\n  return foldIndexed2Aux(f$$6, 0, state$$4, xs$$17, ys$$4);\n}\nexport function fold2(f$$7, state$$5, xs$$18, ys$$5) {\n  return fold2$$1(f$$7, state$$5, xs$$18, ys$$5);\n}\nexport function foldBack2(f$$8, xs$$19, ys$$6, state$$6) {\n  return foldBack2$$1(f$$8, xs$$19, ys$$6, state$$6);\n}\nexport function unfold(f$$9, state$$7) {\n  var unfoldInner = function unfoldInner($acc$$6$$51, $state$$8$$52) {\n    unfoldInner: while (true) {\n      var acc$$6 = $acc$$6$$51,\n          state$$8 = $state$$8$$52;\n      var matchValue$$3 = f$$9(state$$8);\n\n      if (matchValue$$3 != null) {\n        var x$$12 = matchValue$$3[0];\n        var state$$9 = matchValue$$3[1];\n        $acc$$6$$51 = new List(x$$12, acc$$6);\n        $state$$8$$52 = state$$9;\n        continue unfoldInner;\n      } else {\n        return reverse(acc$$6);\n      }\n\n      break;\n    }\n  };\n\n  return unfoldInner(new List(), state$$7);\n}\nexport function foldIndexed3Aux($f$$10$$53, $i$$2$$54, $acc$$7$$55, $bs$$1$$56, $cs$$1$$57, $ds$$58) {\n  foldIndexed3Aux: while (true) {\n    var f$$10 = $f$$10$$53,\n        i$$2 = $i$$2$$54,\n        acc$$7 = $acc$$7$$55,\n        bs$$1 = $bs$$1$$56,\n        cs$$1 = $cs$$1$$57,\n        ds = $ds$$58;\n    var $target$$59, x$$13, xs$$20, y$$2, ys$$7, z, zs;\n\n    if (bs$$1.tail != null) {\n      if (cs$$1.tail != null) {\n        if (ds.tail != null) {\n          $target$$59 = 1;\n          x$$13 = bs$$1.head;\n          xs$$20 = bs$$1.tail;\n          y$$2 = cs$$1.head;\n          ys$$7 = cs$$1.tail;\n          z = ds.head;\n          zs = ds.tail;\n        } else {\n          $target$$59 = 2;\n        }\n      } else {\n        $target$$59 = 2;\n      }\n    } else if (cs$$1.tail == null) {\n      if (ds.tail == null) {\n        $target$$59 = 0;\n      } else {\n        $target$$59 = 2;\n      }\n    } else {\n      $target$$59 = 2;\n    }\n\n    switch ($target$$59) {\n      case 0:\n        {\n          return acc$$7;\n        }\n\n      case 1:\n        {\n          $f$$10$$53 = f$$10;\n          $i$$2$$54 = i$$2 + 1;\n          $acc$$7$$55 = f$$10(i$$2, acc$$7, x$$13, y$$2, z);\n          $bs$$1$$56 = xs$$20;\n          $cs$$1$$57 = ys$$7;\n          $ds$$58 = zs;\n          continue foldIndexed3Aux;\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function foldIndexed3(f$$11, seed, xs$$21, ys$$8, zs$$1) {\n  return foldIndexed3Aux(f$$11, 0, seed, xs$$21, ys$$8, zs$$1);\n}\nexport function fold3(f$$12, state$$10, xs$$22, ys$$9, zs$$2) {\n  return foldIndexed3(function (_arg1$$6, acc$$8, x$$14, y$$3, z$$1) {\n    return f$$12(acc$$8, x$$14, y$$3, z$$1);\n  }, state$$10, xs$$22, ys$$9, zs$$2);\n}\nexport function scan(f$$13, state$$11, xs$$23) {\n  var xs$$24 = scan$$1(f$$13, state$$11, xs$$23);\n  return ofSeq(xs$$24);\n}\nexport function scanBack(f$$14, xs$$25, state$$12) {\n  var xs$$26 = scanBack$$1(f$$14, xs$$25, state$$12);\n  return ofSeq(xs$$26);\n}\nexport function length(xs$$27) {\n  return fold(function (acc$$9, _arg1$$7) {\n    return acc$$9 + 1;\n  }, 0, xs$$27);\n}\nexport function append(xs$$28, ys$$10) {\n  return fold(function (acc$$10, x$$15) {\n    return new List(x$$15, acc$$10);\n  }, ys$$10, reverse(xs$$28));\n}\nexport function collect(f$$15, xs$$29) {\n  var xs$$30 = collect$$1(f$$15, xs$$29);\n  return ofSeq(xs$$30);\n}\nexport function map(f$$16, xs$$31) {\n  var xs$$32 = fold(function (acc$$11, x$$16) {\n    return new List(f$$16(x$$16), acc$$11);\n  }, new List(), xs$$31);\n  return reverse(xs$$32);\n}\nexport function mapIndexed(f$$17, xs$$33) {\n  var xs$$34 = foldIndexed(function (i$$3, acc$$12, x$$17) {\n    return new List(f$$17(i$$3, x$$17), acc$$12);\n  }, new List(), xs$$33);\n  return reverse(xs$$34);\n}\nexport function indexed(xs$$35) {\n  return mapIndexed(function (i$$4, x$$18) {\n    return [i$$4, x$$18];\n  }, xs$$35);\n}\nexport function map2(f$$18, xs$$36, ys$$11) {\n  var xs$$37 = fold2(function (acc$$13, x$$19, y$$4) {\n    return new List(f$$18(x$$19, y$$4), acc$$13);\n  }, new List(), xs$$36, ys$$11);\n  return reverse(xs$$37);\n}\nexport function mapIndexed2(f$$19, xs$$38, ys$$12) {\n  var xs$$39 = foldIndexed2(function (i$$5, acc$$14, x$$20, y$$5) {\n    return new List(f$$19(i$$5, x$$20, y$$5), acc$$14);\n  }, new List(), xs$$38, ys$$12);\n  return reverse(xs$$39);\n}\nexport function map3(f$$20, xs$$40, ys$$13, zs$$3) {\n  var xs$$41 = fold3(function (acc$$15, x$$21, y$$6, z$$2) {\n    return new List(f$$20(x$$21, y$$6, z$$2), acc$$15);\n  }, new List(), xs$$40, ys$$13, zs$$3);\n  return reverse(xs$$41);\n}\nexport function mapIndexed3(f$$21, xs$$42, ys$$14, zs$$4) {\n  var xs$$43 = foldIndexed3(function (i$$6, acc$$16, x$$22, y$$7, z$$3) {\n    return new List(f$$21(i$$6, x$$22, y$$7, z$$3), acc$$16);\n  }, new List(), xs$$42, ys$$14, zs$$4);\n  return reverse(xs$$43);\n}\nexport function mapFold(f$$22, s, xs$$44) {\n  var patternInput$$1 = fold(function foldFn(tupledArg, x$$23) {\n    var patternInput = f$$22(tupledArg[1], x$$23);\n    return [new List(patternInput[0], tupledArg[0]), patternInput[1]];\n  }, [new List(), s], xs$$44);\n  return [reverse(patternInput$$1[0]), patternInput$$1[1]];\n}\nexport function mapFoldBack(f$$23, xs$$45, s$$2) {\n  return mapFold(function (s$$3, v) {\n    return f$$23(v, s$$3);\n  }, s$$2, reverse(xs$$45));\n}\nexport function iterate(f$$24, xs$$46) {\n  fold(function (unitVar0, x$$24) {\n    f$$24(x$$24);\n  }, null, xs$$46);\n}\nexport function iterate2(f$$25, xs$$47, ys$$15) {\n  fold2(function (unitVar0$$1, x$$25, y$$8) {\n    f$$25(x$$25, y$$8);\n  }, null, xs$$47, ys$$15);\n}\nexport function iterateIndexed(f$$26, xs$$48) {\n  foldIndexed(function (i$$7, unitVar1, x$$26) {\n    f$$26(i$$7, x$$26);\n  }, null, xs$$48);\n}\nexport function iterateIndexed2(f$$27, xs$$49, ys$$16) {\n  foldIndexed2(function (i$$8, unitVar1$$1, x$$27, y$$9) {\n    f$$27(i$$8, x$$27, y$$9);\n  }, null, xs$$49, ys$$16);\n}\nexport function ofArray(xs$$50) {\n  var res$$1 = new List();\n\n  for (var i$$9 = count(xs$$50) - 1; i$$9 >= 0; i$$9--) {\n    res$$1 = new List(xs$$50[i$$9], res$$1);\n  }\n\n  return res$$1;\n}\nexport function empty() {\n  return new List();\n}\nexport function isEmpty(_arg1$$8) {\n  if (_arg1$$8.tail == null) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function tryPickIndexedAux($f$$28$$120, $i$$10$$121, $_arg1$$9$$122) {\n  tryPickIndexedAux: while (true) {\n    var f$$28 = $f$$28$$120,\n        i$$10 = $i$$10$$121,\n        _arg1$$9 = $_arg1$$9$$122;\n\n    if (_arg1$$9.tail != null) {\n      var result = f$$28(i$$10, _arg1$$9.head);\n\n      if (result == null) {\n        $f$$28$$120 = f$$28;\n        $i$$10$$121 = i$$10 + 1;\n        $_arg1$$9$$122 = _arg1$$9.tail;\n        continue tryPickIndexedAux;\n      } else {\n        return result;\n      }\n    } else {\n      return null;\n    }\n\n    break;\n  }\n}\nexport function tryPickIndexed(f$$29, xs$$52) {\n  return tryPickIndexedAux(f$$29, 0, xs$$52);\n}\nexport function tryPick(f$$30, xs$$53) {\n  return tryPickIndexed(function (_arg1$$10, x$$29) {\n    return f$$30(x$$29);\n  }, xs$$53);\n}\nexport function pick(f$$31, xs$$54) {\n  var matchValue$$5 = tryPick(f$$31, xs$$54);\n\n  if (matchValue$$5 != null) {\n    var x$$30 = value$$1(matchValue$$5);\n    return x$$30;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function tryFindIndexed(f$$32, xs$$55) {\n  return tryPickIndexed(function (i$$11, x$$31) {\n    return f$$32(i$$11, x$$31) ? some(x$$31) : null;\n  }, xs$$55);\n}\nexport function tryFind(f$$33, xs$$56) {\n  return tryPickIndexed(function (_arg1$$11, x$$32) {\n    return f$$33(x$$32) ? some(x$$32) : null;\n  }, xs$$56);\n}\nexport function findIndexed(f$$34, xs$$57) {\n  var matchValue$$6 = tryFindIndexed(f$$34, xs$$57);\n\n  if (matchValue$$6 != null) {\n    var x$$33 = value$$1(matchValue$$6);\n    return x$$33;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function find(f$$35, xs$$58) {\n  return findIndexed(function (_arg1$$12, x$$34) {\n    return f$$35(x$$34);\n  }, xs$$58);\n}\nexport function findBack(f$$36, xs$$59) {\n  var xs$$61;\n  xs$$61 = reverse(xs$$59);\n  return find(f$$36, xs$$61);\n}\nexport function tryFindBack(f$$37, xs$$62) {\n  var xs$$64;\n  xs$$64 = reverse(xs$$62);\n  return tryFind(f$$37, xs$$64);\n}\nexport function tryFindIndex(f$$38, xs$$65) {\n  return tryPickIndexed(function (i$$12, x$$35) {\n    return f$$38(x$$35) ? i$$12 : null;\n  }, xs$$65);\n}\nexport function tryFindIndexBack(f$$39, xs$$66) {\n  var array = ofList(xs$$66, Array);\n  return tryFindIndexBack$$1(f$$39, array);\n}\nexport function findIndex(f$$40, xs$$67) {\n  var matchValue$$7 = tryFindIndex(f$$40, xs$$67);\n\n  if (matchValue$$7 != null) {\n    var x$$36 = matchValue$$7 | 0;\n    return x$$36 | 0;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function findIndexBack(f$$41, xs$$68) {\n  var array$$1 = ofList(xs$$68, Array);\n  return findIndexBack$$1(f$$41, array$$1) | 0;\n}\nexport function item(n, xs$$69) {\n  return findIndexed(function (i$$13, _arg1$$13) {\n    return n === i$$13;\n  }, xs$$69);\n}\nexport function tryItem(n$$1, xs$$70) {\n  return tryFindIndexed(function (i$$14, _arg1$$14) {\n    return n$$1 === i$$14;\n  }, xs$$70);\n}\nexport function filter(f$$42, xs$$71) {\n  var xs$$72 = fold(function (acc$$17, x$$37) {\n    return f$$42(x$$37) ? new List(x$$37, acc$$17) : acc$$17;\n  }, new List(), xs$$71);\n  return reverse(xs$$72);\n}\nexport function partition(f$$43, xs$$73) {\n  return fold(function (tupledArg$$1, x$$38) {\n    return f$$43(x$$38) ? [new List(x$$38, tupledArg$$1[0]), tupledArg$$1[1]] : [tupledArg$$1[0], new List(x$$38, tupledArg$$1[1])];\n  }, [new List(), new List()], reverse(xs$$73));\n}\nexport function choose(f$$44, xs$$74) {\n  var xs$$75 = fold(function (acc$$18, x$$39) {\n    var matchValue$$8 = f$$44(x$$39);\n\n    if (matchValue$$8 == null) {\n      return acc$$18;\n    } else {\n      var y$$10 = value$$1(matchValue$$8);\n      return new List(y$$10, acc$$18);\n    }\n  }, new List(), xs$$74);\n  return reverse(xs$$75);\n}\nexport function contains(value, list, eq) {\n  var loop$$1 = function loop$$1($xs$$76$$162) {\n    loop$$1: while (true) {\n      var xs$$76 = $xs$$76$$162;\n\n      if (xs$$76.tail != null) {\n        if (eq.Equals(value, xs$$76.head)) {\n          return true;\n        } else {\n          $xs$$76$$162 = xs$$76.tail;\n          continue loop$$1;\n        }\n      } else {\n        return false;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$1(list);\n}\nexport function except(itemsToExclude, array$$2, eq$$1) {\n  if (isEmpty(array$$2)) {\n    return array$$2;\n  } else {\n    var cached = createMutable(itemsToExclude, eq$$1);\n    return filter(function f$$45(arg00) {\n      return addToSet(arg00, cached);\n    }, array$$2);\n  }\n}\nexport function initialize(n$$2, f$$46) {\n  var xs$$78 = new List();\n\n  for (var i$$15 = 1; i$$15 <= n$$2; i$$15++) {\n    xs$$78 = new List(f$$46(n$$2 - i$$15), xs$$78);\n  }\n\n  return xs$$78;\n}\nexport function replicate(n$$3, x$$40) {\n  return initialize(n$$3, function (_arg1$$15) {\n    return x$$40;\n  });\n}\nexport function reduce(f$$47, _arg1$$16) {\n  if (_arg1$$16.tail != null) {\n    return fold(f$$47, _arg1$$16.head, _arg1$$16.tail);\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function reduceBack(f$$48, _arg1$$17) {\n  if (_arg1$$17.tail != null) {\n    return foldBack(f$$48, _arg1$$17.tail, _arg1$$17.head);\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function forAll(f$$49, xs$$79) {\n  return fold(function (acc$$19, x$$41) {\n    return acc$$19 ? f$$49(x$$41) : false;\n  }, true, xs$$79);\n}\nexport function forAll2(f$$50, xs$$80, ys$$17) {\n  return fold2(function (acc$$20, x$$42, y$$11) {\n    return acc$$20 ? f$$50(x$$42, y$$11) : false;\n  }, true, xs$$80, ys$$17);\n}\nexport function exists($f$$51$$180, $_arg1$$18$$181) {\n  exists: while (true) {\n    var f$$51 = $f$$51$$180,\n        _arg1$$18 = $_arg1$$18$$181;\n\n    if (_arg1$$18.tail != null) {\n      if (f$$51(_arg1$$18.head)) {\n        return true;\n      } else {\n        $f$$51$$180 = f$$51;\n        $_arg1$$18$$181 = _arg1$$18.tail;\n        continue exists;\n      }\n    } else {\n      return false;\n    }\n\n    break;\n  }\n}\nexport function exists2($f$$52$$182, $bs$$2$$183, $cs$$2$$184) {\n  exists2: while (true) {\n    var f$$52 = $f$$52$$182,\n        bs$$2 = $bs$$2$$183,\n        cs$$2 = $cs$$2$$184;\n    var $target$$185, x$$44, xs$$82, y$$12, ys$$18;\n\n    if (bs$$2.tail != null) {\n      if (cs$$2.tail != null) {\n        $target$$185 = 1;\n        x$$44 = bs$$2.head;\n        xs$$82 = bs$$2.tail;\n        y$$12 = cs$$2.head;\n        ys$$18 = cs$$2.tail;\n      } else {\n        $target$$185 = 2;\n      }\n    } else if (cs$$2.tail == null) {\n      $target$$185 = 0;\n    } else {\n      $target$$185 = 2;\n    }\n\n    switch ($target$$185) {\n      case 0:\n        {\n          return false;\n        }\n\n      case 1:\n        {\n          if (f$$52(x$$44, y$$12)) {\n            return true;\n          } else {\n            $f$$52$$182 = f$$52;\n            $bs$$2$$183 = xs$$82;\n            $cs$$2$$184 = ys$$18;\n            continue exists2;\n          }\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function unzip(xs$$83) {\n  return foldBack(function (tupledArg$$2, tupledArg$$3) {\n    return [new List(tupledArg$$2[0], tupledArg$$3[0]), new List(tupledArg$$2[1], tupledArg$$3[1])];\n  }, xs$$83, [new List(), new List()]);\n}\nexport function unzip3(xs$$84) {\n  return foldBack(function (tupledArg$$4, tupledArg$$5) {\n    return [new List(tupledArg$$4[0], tupledArg$$5[0]), new List(tupledArg$$4[1], tupledArg$$5[1]), new List(tupledArg$$4[2], tupledArg$$5[2])];\n  }, xs$$84, [new List(), new List(), new List()]);\n}\nexport function zip(xs$$85, ys$$19) {\n  return map2(function (x$$47, y$$15) {\n    return [x$$47, y$$15];\n  }, xs$$85, ys$$19);\n}\nexport function zip3(xs$$86, ys$$20, zs$$5) {\n  return map3(function (x$$48, y$$16, z$$5) {\n    return [x$$48, y$$16, z$$5];\n  }, xs$$86, ys$$20, zs$$5);\n}\nexport function sort(xs$$87, comparer$$1) {\n  var xs$$89;\n  var xs$$88 = ofList(xs$$87, Array);\n  xs$$88.sort(function comparer$$2(x$$49, y$$17) {\n    return comparer$$1.Compare(x$$49, y$$17);\n  });\n  xs$$89 = xs$$88;\n  return ofArray(xs$$89);\n}\nexport function sortBy(projection, xs$$90, comparer$$3) {\n  var xs$$92;\n  var xs$$91 = ofList(xs$$90, Array);\n  xs$$91.sort(function comparer$$4(x$$50, y$$18) {\n    return comparer$$3.Compare(projection(x$$50), projection(y$$18));\n  });\n  xs$$92 = xs$$91;\n  return ofArray(xs$$92);\n}\nexport function sortDescending(xs$$93, comparer$$5) {\n  var xs$$95;\n  var xs$$94 = ofList(xs$$93, Array);\n  xs$$94.sort(function comparer$$6(x$$51, y$$19) {\n    return comparer$$5.Compare(x$$51, y$$19) * -1;\n  });\n  xs$$95 = xs$$94;\n  return ofArray(xs$$95);\n}\nexport function sortByDescending(projection$$1, xs$$96, comparer$$7) {\n  var xs$$98;\n  var xs$$97 = ofList(xs$$96, Array);\n  xs$$97.sort(function comparer$$8(x$$52, y$$20) {\n    return comparer$$7.Compare(projection$$1(x$$52), projection$$1(y$$20)) * -1;\n  });\n  xs$$98 = xs$$97;\n  return ofArray(xs$$98);\n}\nexport function sortWith(comparer$$9, xs$$99) {\n  var xs$$101;\n  var xs$$100 = ofList(xs$$99, Array);\n  xs$$100.sort(comparer$$9);\n  xs$$101 = xs$$100;\n  return ofArray(xs$$101);\n}\nexport function sum(xs$$102, adder) {\n  return fold(function (acc$$21, x$$53) {\n    return adder.Add(acc$$21, x$$53);\n  }, adder.GetZero(), xs$$102);\n}\nexport function sumBy(f$$53, xs$$103, adder$$1) {\n  return fold(function (acc$$22, x$$54) {\n    return adder$$1.Add(acc$$22, f$$53(x$$54));\n  }, adder$$1.GetZero(), xs$$103);\n}\nexport function maxBy(projection$$2, xs$$104, comparer$$11) {\n  return reduce(function (x$$55, y$$21) {\n    return comparer$$11.Compare(projection$$2(y$$21), projection$$2(x$$55)) > 0 ? y$$21 : x$$55;\n  }, xs$$104);\n}\nexport function max(li, comparer$$12) {\n  return reduce(function (x$$56, y$$22) {\n    return comparer$$12.Compare(y$$22, x$$56) > 0 ? y$$22 : x$$56;\n  }, li);\n}\nexport function minBy(projection$$3, xs$$105, comparer$$13) {\n  return reduce(function (x$$57, y$$23) {\n    return comparer$$13.Compare(projection$$3(y$$23), projection$$3(x$$57)) > 0 ? x$$57 : y$$23;\n  }, xs$$105);\n}\nexport function min(xs$$106, comparer$$14) {\n  return reduce(function (x$$58, y$$24) {\n    return comparer$$14.Compare(y$$24, x$$58) > 0 ? x$$58 : y$$24;\n  }, xs$$106);\n}\nexport function average(xs$$107, averager) {\n  var total = fold(function (acc$$23, x$$59) {\n    return averager.Add(acc$$23, x$$59);\n  }, averager.GetZero(), xs$$107);\n  return averager.DivideByInt(total, length(xs$$107));\n}\nexport function averageBy(f$$54, xs$$108, averager$$1) {\n  var total$$1 = fold(function (acc$$24, x$$60) {\n    return averager$$1.Add(acc$$24, f$$54(x$$60));\n  }, averager$$1.GetZero(), xs$$108);\n  return averager$$1.DivideByInt(total$$1, length(xs$$108));\n}\nexport function permute(f$$55, xs$$109) {\n  var xs$$110;\n  var array$$3;\n  array$$3 = ofList(xs$$109, Array);\n  xs$$110 = permute$$1(f$$55, array$$3);\n  return ofArray(xs$$110);\n}\nexport function skip(i$$16, xs$$111) {\n  var skipInner = function skipInner($i$$17$$237, $xs$$112$$238) {\n    skipInner: while (true) {\n      var i$$17 = $i$$17$$237,\n          xs$$112 = $xs$$112$$238;\n\n      if (i$$17 === 0) {\n        return xs$$112;\n      } else if (xs$$112.tail != null) {\n        $i$$17$$237 = i$$17 - 1;\n        $xs$$112$$238 = xs$$112.tail;\n        continue skipInner;\n      } else {\n        throw new Error(\"The input sequence has an insufficient number of elements.\");\n      }\n\n      break;\n    }\n  };\n\n  if (i$$16 < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$239, i$$20, xs$$115;\n\n    if (i$$16 === 0) {\n      $target$$239 = 0;\n    } else if (i$$16 === 1) {\n      if (xs$$111.tail != null) {\n        $target$$239 = 1;\n      } else {\n        $target$$239 = 2;\n        i$$20 = i$$16;\n        xs$$115 = xs$$111;\n      }\n    } else {\n      $target$$239 = 2;\n      i$$20 = i$$16;\n      xs$$115 = xs$$111;\n    }\n\n    switch ($target$$239) {\n      case 0:\n        {\n          return xs$$111;\n        }\n\n      case 1:\n        {\n          return xs$$111.tail;\n        }\n\n      case 2:\n        {\n          return skipInner(i$$20, xs$$115);\n        }\n    }\n  }\n}\nexport function skipWhile($predicate$$240, $xs$$116$$241) {\n  skipWhile: while (true) {\n    var predicate = $predicate$$240,\n        xs$$116 = $xs$$116$$241;\n    var $target$$242, h$$4, t$$4;\n\n    if (xs$$116.tail != null) {\n      if (predicate(xs$$116.head)) {\n        $target$$242 = 0;\n        h$$4 = xs$$116.head;\n        t$$4 = xs$$116.tail;\n      } else {\n        $target$$242 = 1;\n      }\n    } else {\n      $target$$242 = 1;\n    }\n\n    switch ($target$$242) {\n      case 0:\n        {\n          $predicate$$240 = predicate;\n          $xs$$116$$241 = t$$4;\n          continue skipWhile;\n        }\n\n      case 1:\n        {\n          return xs$$116;\n        }\n    }\n\n    break;\n  }\n}\nexport function takeSplitAux($error$$243, $i$$21$$244, $acc$$25$$245, $xs$$117$$246) {\n  takeSplitAux: while (true) {\n    var error = $error$$243,\n        i$$21 = $i$$21$$244,\n        acc$$25 = $acc$$25$$245,\n        xs$$117 = $xs$$117$$246;\n\n    if (i$$21 === 0) {\n      return [reverse(acc$$25), xs$$117];\n    } else if (xs$$117.tail != null) {\n      $error$$243 = error;\n      $i$$21$$244 = i$$21 - 1;\n      $acc$$25$$245 = new List(xs$$117.head, acc$$25);\n      $xs$$117$$246 = xs$$117.tail;\n      continue takeSplitAux;\n    } else {\n      if (error) {\n        throw new Error(\"The input sequence has an insufficient number of elements.\");\n      } else {\n        return [reverse(acc$$25), xs$$117];\n      }\n    }\n\n    break;\n  }\n}\nexport function take(i$$22, xs$$119) {\n  if (i$$22 < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$249, i$$25, xs$$120;\n\n    if (i$$22 === 0) {\n      $target$$249 = 0;\n    } else if (i$$22 === 1) {\n      if (xs$$119.tail != null) {\n        $target$$249 = 1;\n      } else {\n        $target$$249 = 2;\n        i$$25 = i$$22;\n        xs$$120 = xs$$119;\n      }\n    } else {\n      $target$$249 = 2;\n      i$$25 = i$$22;\n      xs$$120 = xs$$119;\n    }\n\n    switch ($target$$249) {\n      case 0:\n        {\n          return new List();\n        }\n\n      case 1:\n        {\n          return new List(xs$$119.head, new List());\n        }\n\n      case 2:\n        {\n          var tuple = takeSplitAux(true, i$$25, new List(), xs$$120);\n          return tuple[0];\n        }\n    }\n  }\n}\nexport function takeWhile(predicate$$1, xs$$121) {\n  if (xs$$121.tail != null) {\n    if (xs$$121.tail.tail == null) {\n      if (predicate$$1(xs$$121.head)) {\n        return xs$$121;\n      } else {\n        return xs$$121.tail;\n      }\n    } else {\n      if (!predicate$$1(xs$$121.head)) {\n        return new List();\n      } else {\n        return new List(xs$$121.head, takeWhile(predicate$$1, xs$$121.tail));\n      }\n    }\n  } else {\n    return xs$$121;\n  }\n}\nexport function truncate(i$$26, xs$$123) {\n  if (i$$26 < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$254, i$$29, xs$$124;\n\n    if (i$$26 === 0) {\n      $target$$254 = 0;\n    } else if (i$$26 === 1) {\n      if (xs$$123.tail != null) {\n        $target$$254 = 1;\n      } else {\n        $target$$254 = 2;\n        i$$29 = i$$26;\n        xs$$124 = xs$$123;\n      }\n    } else {\n      $target$$254 = 2;\n      i$$29 = i$$26;\n      xs$$124 = xs$$123;\n    }\n\n    switch ($target$$254) {\n      case 0:\n        {\n          return new List();\n        }\n\n      case 1:\n        {\n          return new List(xs$$123.head, new List());\n        }\n\n      case 2:\n        {\n          var tuple$$1 = takeSplitAux(false, i$$29, new List(), xs$$124);\n          return tuple$$1[0];\n        }\n    }\n  }\n}\nexport function splitAt(i$$30, xs$$125) {\n  if (i$$30 < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$257, i$$33, xs$$127;\n\n    if (i$$30 === 0) {\n      $target$$257 = 0;\n    } else if (i$$30 === 1) {\n      if (xs$$125.tail != null) {\n        $target$$257 = 1;\n      } else {\n        $target$$257 = 2;\n        i$$33 = i$$30;\n        xs$$127 = xs$$125;\n      }\n    } else {\n      $target$$257 = 2;\n      i$$33 = i$$30;\n      xs$$127 = xs$$125;\n    }\n\n    switch ($target$$257) {\n      case 0:\n        {\n          return [new List(), xs$$125];\n        }\n\n      case 1:\n        {\n          return [new List(xs$$125.head, new List()), xs$$125.tail];\n        }\n\n      case 2:\n        {\n          return takeSplitAux(true, i$$33, new List(), xs$$127);\n        }\n    }\n  }\n}\nexport function outOfRange() {\n  throw new Error(\"Index out of range\");\n}\nexport function slice(lower, upper, xs$$128) {\n  var lower$$1 = defaultArg(lower, 0) | 0;\n  var hasUpper = upper != null;\n\n  if (lower$$1 < 0) {\n    return outOfRange();\n  } else if (hasUpper ? upper < lower$$1 : false) {\n    return new List();\n  } else {\n    var lastIndex = -1 | 0;\n    var res$$2;\n    var state$$13 = new List();\n    res$$2 = foldIndexed(function f$$56(i$$34, acc$$26, x$$67) {\n      lastIndex = i$$34;\n\n      if (lower$$1 <= i$$34 ? !hasUpper ? true : i$$34 <= upper : false) {\n        return new List(x$$67, acc$$26);\n      } else {\n        return acc$$26;\n      }\n    }, state$$13, xs$$128);\n\n    if (lower$$1 > lastIndex + 1 ? true : hasUpper ? upper > lastIndex : false) {\n      outOfRange();\n    }\n\n    return reverse(res$$2);\n  }\n}\nexport function distinctBy(projection$$4, xs$$130, eq$$2) {\n  var hashSet = createMutable([], eq$$2);\n  return filter(function f$$57($arg$$1) {\n    var arg00$$1 = projection$$4($arg$$1);\n    return addToSet(arg00$$1, hashSet);\n  }, xs$$130);\n}\nexport function distinct(xs$$132, eq$$3) {\n  return distinctBy(function (x$$68) {\n    return x$$68;\n  }, xs$$132, eq$$3);\n}\nexport function exactlyOne(xs$$133) {\n  if (xs$$133.tail != null) {\n    if (xs$$133.tail.tail != null) {\n      throw new Error(\"Input list too long\\\\nParameter name: list\");\n    } else {\n      return xs$$133.head;\n    }\n  } else {\n    throw new Error(\"The input sequence was empty\\\\nParameter name: list\");\n  }\n}\nexport function groupBy(projection$$5, xs$$135, eq$$4) {\n  var dict = createMutable$$1([], eq$$4);\n  var keys = new List();\n  iterate(function f$$58(v$$2) {\n    var key = projection$$5(v$$2);\n    var matchValue$$16 = tryGetValue(dict, key, null);\n\n    if (matchValue$$16[0]) {\n      dict.set(key, new List(v$$2, matchValue$$16[1]));\n    } else {\n      addToDict(dict, key, new List(v$$2, new List()));\n      keys = new List(key, keys);\n    }\n  }, xs$$135);\n  var result$$1 = new List();\n  var xs$$137 = keys;\n  iterate(function f$$59(key$$1) {\n    result$$1 = new List([key$$1, reverse(getItemFromDict(dict, key$$1))], result$$1);\n  }, xs$$137);\n  return result$$1;\n}\nexport function countBy(projection$$6, xs$$138, eq$$5) {\n  var dict$$1 = createMutable$$1([], eq$$5);\n  var keys$$1 = new List();\n  iterate(function f$$60(v$$3) {\n    var key$$2 = projection$$6(v$$3);\n    var matchValue$$17 = tryGetValue(dict$$1, key$$2, 0);\n\n    if (matchValue$$17[0]) {\n      dict$$1.set(key$$2, matchValue$$17[1] + 1);\n    } else {\n      dict$$1.set(key$$2, 1);\n      keys$$1 = new List(key$$2, keys$$1);\n    }\n  }, xs$$138);\n  var result$$2 = new List();\n  var xs$$140 = keys$$1;\n  iterate(function f$$61(key$$3) {\n    result$$2 = new List([key$$3, getItemFromDict(dict$$1, key$$3)], result$$2);\n  }, xs$$140);\n  return result$$2;\n}\nexport function where(predicate$$2, xs$$141) {\n  return filter(predicate$$2, xs$$141);\n}\nexport function pairwise(xs$$142) {\n  var inner = function inner($xs$$143$$284, $acc$$27$$285, $x1$$1$$286) {\n    inner: while (true) {\n      var xs$$143 = $xs$$143$$284,\n          acc$$27 = $acc$$27$$285,\n          x1$$1 = $x1$$1$$286;\n\n      if (xs$$143.tail != null) {\n        var copyOfStruct = acc$$27;\n        copyOfStruct.push([x1$$1, xs$$143.head]);\n        $xs$$143$$284 = xs$$143.tail;\n        $acc$$27$$285 = acc$$27;\n        $x1$$1$$286 = xs$$143.head;\n        continue inner;\n      } else {\n        return ofArray(acc$$27);\n      }\n\n      break;\n    }\n  };\n\n  var $target$$287, x1$$2, x2$$2, xs$$145;\n\n  if (xs$$142.tail != null) {\n    if (xs$$142.tail.tail != null) {\n      $target$$287 = 1;\n      x1$$2 = xs$$142.head;\n      x2$$2 = xs$$142.tail.head;\n      xs$$145 = xs$$142.tail.tail;\n    } else {\n      $target$$287 = 0;\n    }\n  } else {\n    $target$$287 = 0;\n  }\n\n  switch ($target$$287) {\n    case 0:\n      {\n        return new List();\n      }\n\n    case 1:\n      {\n        var acc$$28 = [];\n        acc$$28.push([x1$$2, x2$$2]);\n        var clo1 = partialApply(2, inner, [xs$$145]);\n        var clo2 = clo1(acc$$28);\n        return clo2(x2$$2);\n      }\n  }\n}\nexport function windowed(windowSize, source) {\n  if (windowSize <= 0) {\n    throw new Error(\"windowSize must be positive\");\n  }\n\n  var res$$3 = new List();\n\n  for (var i$$35 = length(source); i$$35 >= windowSize; i$$35--) {\n    res$$3 = new List(slice(i$$35 - windowSize, i$$35 - 1, source), res$$3);\n  }\n\n  return res$$3;\n}","import \"core-js/modules/es.symbol\";\nimport \"core-js/modules/es.symbol.description\";\nimport \"core-js/modules/es.symbol.iterator\";\nimport \"core-js/modules/es.array.index-of\";\nimport \"core-js/modules/es.array.is-array\";\nimport \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.date.to-string\";\nimport \"core-js/modules/es.function.bind\";\nimport \"core-js/modules/es.map\";\nimport \"core-js/modules/es.object.create\";\nimport \"core-js/modules/es.object.define-property\";\nimport \"core-js/modules/es.object.get-prototype-of\";\nimport \"core-js/modules/es.object.set-prototype-of\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.reflect.construct\";\nimport \"core-js/modules/es.regexp.to-string\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\nimport \"core-js/modules/web.timers\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nexport var CancellationToken =\n/*#__PURE__*/\nfunction () {\n  function CancellationToken() {\n    var cancelled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    _classCallCheck(this, CancellationToken);\n\n    this._id = 0;\n    this._cancelled = cancelled;\n    this._listeners = new Map();\n  }\n\n  _createClass(CancellationToken, [{\n    key: \"cancel\",\n    value: function cancel() {\n      if (!this._cancelled) {\n        this._cancelled = true;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this._listeners[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _step$value = _slicedToArray(_step.value, 2),\n                listener = _step$value[1];\n\n            listener();\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"addListener\",\n    value: function addListener(f) {\n      var id = this._id;\n\n      this._listeners.set(this._id++, f);\n\n      return id;\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(id) {\n      return this._listeners[\"delete\"](id);\n    }\n  }, {\n    key: \"register\",\n    value: function register(f, state) {\n      var $ = this;\n      var id = this.addListener(state == null ? f : function () {\n        return f(state);\n      });\n      return {\n        Dispose: function Dispose() {\n          $.removeListener(id);\n        }\n      };\n    }\n  }, {\n    key: \"isCancelled\",\n    get: function get() {\n      return this._cancelled;\n    }\n  }]);\n\n  return CancellationToken;\n}();\nexport var OperationCanceledError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(OperationCanceledError, _Error);\n\n  function OperationCanceledError() {\n    var _this;\n\n    _classCallCheck(this, OperationCanceledError);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OperationCanceledError).call(this, \"The operation was canceled\"));\n    Object.setPrototypeOf(_assertThisInitialized(_this), OperationCanceledError.prototype);\n    return _this;\n  }\n\n  return OperationCanceledError;\n}(_wrapNativeSuper(Error));\nexport var Trampoline =\n/*#__PURE__*/\nfunction () {\n  function Trampoline() {\n    _classCallCheck(this, Trampoline);\n\n    this.callCount = 0;\n  }\n\n  _createClass(Trampoline, [{\n    key: \"incrementAndCheck\",\n    value: function incrementAndCheck() {\n      return this.callCount++ > Trampoline.maxTrampolineCallCount;\n    }\n  }, {\n    key: \"hijack\",\n    value: function hijack(f) {\n      this.callCount = 0;\n      setTimeout(f, 0);\n    }\n  }], [{\n    key: \"maxTrampolineCallCount\",\n    get: function get() {\n      return 2000;\n    }\n  }]);\n\n  return Trampoline;\n}();\nexport function protectedCont(f) {\n  return function (ctx) {\n    if (ctx.cancelToken.isCancelled) {\n      ctx.onCancel(new OperationCanceledError());\n    } else if (ctx.trampoline.incrementAndCheck()) {\n      ctx.trampoline.hijack(function () {\n        try {\n          f(ctx);\n        } catch (err) {\n          ctx.onError(err);\n        }\n      });\n    } else {\n      try {\n        f(ctx);\n      } catch (err) {\n        ctx.onError(err);\n      }\n    }\n  };\n}\nexport function protectedBind(computation, binder) {\n  return protectedCont(function (ctx) {\n    computation({\n      onSuccess: function onSuccess(x) {\n        try {\n          binder(x)(ctx);\n        } catch (ex) {\n          ctx.onError(ex);\n        }\n      },\n      onError: ctx.onError,\n      onCancel: ctx.onCancel,\n      cancelToken: ctx.cancelToken,\n      trampoline: ctx.trampoline\n    });\n  });\n}\nexport function protectedReturn(value) {\n  return protectedCont(function (ctx) {\n    return ctx.onSuccess(value);\n  });\n}\nexport var AsyncBuilder =\n/*#__PURE__*/\nfunction () {\n  function AsyncBuilder() {\n    _classCallCheck(this, AsyncBuilder);\n  }\n\n  _createClass(AsyncBuilder, [{\n    key: \"Bind\",\n    value: function Bind(computation, binder) {\n      return protectedBind(computation, binder);\n    }\n  }, {\n    key: \"Combine\",\n    value: function Combine(computation1, computation2) {\n      return this.Bind(computation1, function () {\n        return computation2;\n      });\n    }\n  }, {\n    key: \"Delay\",\n    value: function Delay(generator) {\n      return protectedCont(function (ctx) {\n        return generator()(ctx);\n      });\n    }\n  }, {\n    key: \"For\",\n    value: function For(sequence, body) {\n      var iter = sequence[Symbol.iterator]();\n      var cur = iter.next();\n      return this.While(function () {\n        return !cur.done;\n      }, this.Delay(function () {\n        var res = body(cur.value);\n        cur = iter.next();\n        return res;\n      }));\n    }\n  }, {\n    key: \"Return\",\n    value: function Return(value) {\n      return protectedReturn(value);\n    }\n  }, {\n    key: \"ReturnFrom\",\n    value: function ReturnFrom(computation) {\n      return computation;\n    }\n  }, {\n    key: \"TryFinally\",\n    value: function TryFinally(computation, compensation) {\n      return protectedCont(function (ctx) {\n        computation({\n          onSuccess: function onSuccess(x) {\n            compensation();\n            ctx.onSuccess(x);\n          },\n          onError: function onError(x) {\n            compensation();\n            ctx.onError(x);\n          },\n          onCancel: function onCancel(x) {\n            compensation();\n            ctx.onCancel(x);\n          },\n          cancelToken: ctx.cancelToken,\n          trampoline: ctx.trampoline\n        });\n      });\n    }\n  }, {\n    key: \"TryWith\",\n    value: function TryWith(computation, catchHandler) {\n      return protectedCont(function (ctx) {\n        computation({\n          onSuccess: ctx.onSuccess,\n          onCancel: ctx.onCancel,\n          cancelToken: ctx.cancelToken,\n          trampoline: ctx.trampoline,\n          onError: function onError(ex) {\n            try {\n              catchHandler(ex)(ctx);\n            } catch (ex2) {\n              ctx.onError(ex2);\n            }\n          }\n        });\n      });\n    }\n  }, {\n    key: \"Using\",\n    value: function Using(resource, binder) {\n      return this.TryFinally(binder(resource), function () {\n        return resource.Dispose();\n      });\n    }\n  }, {\n    key: \"While\",\n    value: function While(guard, computation) {\n      var _this2 = this;\n\n      if (guard()) {\n        return this.Bind(computation, function () {\n          return _this2.While(guard, computation);\n        });\n      } else {\n        return this.Return(void 0);\n      }\n    }\n  }, {\n    key: \"Zero\",\n    value: function Zero() {\n      return protectedCont(function (ctx) {\n        return ctx.onSuccess(void 0);\n      });\n    }\n  }]);\n\n  return AsyncBuilder;\n}();\nexport var singleton = new AsyncBuilder();","import \"core-js/modules/es.array.iterator\";\nimport \"core-js/modules/es.object.to-string\";\nimport \"core-js/modules/es.promise\";\nimport \"core-js/modules/es.string.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\nimport \"core-js/modules/web.timers\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { OperationCanceledError, Trampoline } from \"./AsyncBuilder\";\nimport { CancellationToken } from \"./AsyncBuilder\";\nimport { protectedCont } from \"./AsyncBuilder\";\nimport { protectedBind } from \"./AsyncBuilder\";\nimport { protectedReturn } from \"./AsyncBuilder\";\nimport { choice1, choice2 } from \"./Option\";\nimport { map } from \"./Seq\"; // Implemented just for type references\n\nvar Async = function Async() {\n  _classCallCheck(this, Async);\n};\n\nexport { Async as default };\n\nfunction emptyContinuation(x) {} // NOP\n// MakeAsync: body:(AsyncActivation<'T> -> AsyncReturn) -> Async<'T>\n\n\nexport function makeAsync(body) {\n  return body;\n} // Invoke: computation: Async<'T> -> ctxt:AsyncActivation<'T> -> AsyncReturn\n\nexport function invoke(computation, ctx) {\n  return computation(ctx);\n} // CallThenInvoke: ctxt:AsyncActivation<'T> -> result1:'U -> part2:('U -> Async<'T>) -> AsyncReturn\n\nexport function callThenInvoke(ctx, result1, part2) {\n  return part2(result1)(ctx);\n} // Bind: ctxt:AsyncActivation<'T> -> part1:Async<'U> -> part2:('U -> Async<'T>) -> AsyncReturn\n\nexport function bind(ctx, part1, part2) {\n  return protectedBind(part1, part2)(ctx);\n}\nexport function createCancellationToken(arg) {\n  var token = new CancellationToken(typeof arg === \"boolean\" ? arg : false);\n\n  if (typeof arg === \"number\") {\n    setTimeout(function () {\n      token.cancel();\n    }, arg);\n  }\n\n  return token;\n}\nexport function cancel(token) {\n  token.cancel();\n}\nexport function cancelAfter(token, ms) {\n  setTimeout(function () {\n    token.cancel();\n  }, ms);\n}\nexport function isCancellationRequested(token) {\n  return token != null && token.isCancelled;\n}\nexport function startChild(computation) {\n  var promise = startAsPromise(computation); // JS Promises are hot, computation has already started\n  // but we delay returning the result\n\n  return protectedCont(function (ctx) {\n    return protectedReturn(awaitPromise(promise))(ctx);\n  });\n}\nexport function awaitPromise(p) {\n  return fromContinuations(function (conts) {\n    return p.then(conts[0])[\"catch\"](function (err) {\n      return (err instanceof OperationCanceledError ? conts[2] : conts[1])(err);\n    });\n  });\n}\nexport function cancellationToken() {\n  return protectedCont(function (ctx) {\n    return ctx.onSuccess(ctx.cancelToken);\n  });\n}\nexport var defaultCancellationToken = new CancellationToken();\nexport function catchAsync(work) {\n  return protectedCont(function (ctx) {\n    work({\n      onSuccess: function onSuccess(x) {\n        return ctx.onSuccess(choice1(x));\n      },\n      onError: function onError(ex) {\n        return ctx.onSuccess(choice2(ex));\n      },\n      onCancel: ctx.onCancel,\n      cancelToken: ctx.cancelToken,\n      trampoline: ctx.trampoline\n    });\n  });\n}\nexport function fromContinuations(f) {\n  return protectedCont(function (ctx) {\n    return f([ctx.onSuccess, ctx.onError, ctx.onCancel]);\n  });\n}\nexport function ignore(computation) {\n  return protectedBind(computation, function (x) {\n    return protectedReturn(void 0);\n  });\n}\nexport function parallel(computations) {\n  return awaitPromise(Promise.all(map(function (w) {\n    return startAsPromise(w);\n  }, computations)));\n}\nexport function sleep(millisecondsDueTime) {\n  return protectedCont(function (ctx) {\n    var tokenId;\n    var timeoutId = setTimeout(function () {\n      ctx.cancelToken.removeListener(tokenId);\n      ctx.onSuccess(void 0);\n    }, millisecondsDueTime);\n    tokenId = ctx.cancelToken.addListener(function () {\n      clearTimeout(timeoutId);\n      ctx.onCancel(new OperationCanceledError());\n    });\n  });\n}\nexport function start(computation, cancellationToken) {\n  return startWithContinuations(computation, cancellationToken);\n}\nexport function startImmediate(computation, cancellationToken) {\n  return start(computation, cancellationToken);\n}\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\n  if (typeof continuation !== \"function\") {\n    cancelToken = continuation;\n    continuation = null;\n  }\n\n  var trampoline = new Trampoline();\n  computation({\n    onSuccess: continuation ? continuation : emptyContinuation,\n    onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\n    onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\n    cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\n    trampoline: trampoline\n  });\n}\nexport function startAsPromise(computation, cancellationToken) {\n  return new Promise(function (resolve, reject) {\n    return startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken);\n  });\n}","namespace Elmish\n\n(**\nLog\n---------\nBasic cross-platform logging API.\n\n*)\nmodule internal Log =\n\n#if FABLE_COMPILER\n    open Fable.Core.JS\n\n    let onError (text: string, ex: exn) = console.error (text,ex)\n    let toConsole(text: string, o: #obj) = console.log(text,o)\n\n#else\n#if NETSTANDARD2_0\n    let onError (text: string, ex: exn) = System.Diagnostics.Trace.TraceError(\"{0}: {1}\", text, ex)\n    let toConsole(text: string, o: #obj) = printfn \"%s: %A\" text o\n#else\n    let onError (text: string, ex: exn) = System.Console.Error.WriteLine(\"{0}: {1}\", text, ex)\n    let toConsole(text: string, o: #obj) = printfn \"%s: %A\" text o\n#endif\n#endif\n\n#if FABLE_COMPILER\nmodule internal Timer =\n    open System.Timers\n    let delay interval callback =\n        let t = new Timer(float interval, AutoReset = false)\n        t.Elapsed.Add callback\n        t.Enabled <- true\n        t.Start()\n#endif\n","(**\nCmd\n---------\nCore abstractions for dispatching messages in Elmish.\n\n*)\n\nnamespace Elmish\n\nopen System\n\n/// Dispatch - feed new message into the processing loop\ntype Dispatch<'msg> = 'msg -> unit\n\n/// Subscription - return immediately, but may schedule dispatch of a message at any time\ntype Sub<'msg> = Dispatch<'msg> -> unit\n\n/// Cmd - container for subscriptions that may produce messages\ntype Cmd<'msg> = Sub<'msg> list\n\n/// Cmd module for creating and manipulating commands\n[<RequireQualifiedAccess>]\nmodule Cmd =\n    /// Execute the commands using the supplied dispatcher\n    let internal exec (dispatch:Dispatch<'msg>) (cmd:Cmd<'msg>) =\n        cmd |> List.iter (fun sub -> sub dispatch)\n\n    /// None - no commands, also known as `[]`\n    let none : Cmd<'msg> =\n        []\n\n    /// When emitting the message, map to another type\n    let map (f: 'a -> 'msg) (cmd: Cmd<'a>) : Cmd<'msg> =\n        cmd |> List.map (fun g -> (fun dispatch -> f >> dispatch) >> g)\n\n    /// Aggregate multiple commands\n    let batch (cmds: #seq<Cmd<'msg>>) : Cmd<'msg> =\n        cmds |> List.concat\n\n    /// Command to call the subscriber\n    let ofSub (sub: Sub<'msg>) : Cmd<'msg> =\n        [sub]\n\n    module OfFunc =\n        /// Command to evaluate a simple function and map the result\n        /// into success or error (of exception)\n        let either (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                try\n                    task arg\n                    |> (ofSuccess >> dispatch)\n                with x ->\n                    x |> (ofError >> dispatch)\n            [bind]\n\n        /// Command to evaluate a simple function and map the success to a message\n        /// discarding any possible error\n        let perform (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                try\n                    task arg\n                    |> (ofSuccess >> dispatch)\n                with x ->\n                    ()\n            [bind]\n\n        /// Command to evaluate a simple function and map the error (in case of exception)\n        let attempt (task: 'a -> unit) (arg: 'a) (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                try\n                    task arg\n                with x ->\n                    x |> (ofError >> dispatch)\n            [bind]\n\n        /// Command to issue a specific message\n        let result (msg:'msg) : Cmd<'msg> =\n            [fun dispatch -> dispatch msg]\n\n    module OfAsyncWith =\n        /// Command that will evaluate an async block and map the result\n        /// into success or error (of exception)\n        let either (start: Async<unit> -> unit) \n                   (task: 'a -> Async<_>)\n                   (arg: 'a)\n                   (ofSuccess: _ -> 'msg)\n                   (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task arg |> Async.Catch\n                    dispatch (match r with\n                             | Choice1Of2 x -> ofSuccess x\n                             | Choice2Of2 x -> ofError x)\n                }\n            [bind >> start]\n\n        /// Command that will evaluate an async block and map the success\n        let perform (start: Async<unit> -> unit) \n                    (task: 'a -> Async<_>)\n                    (arg: 'a)\n                    (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task arg |> Async.Catch\n                    match r with\n                    | Choice1Of2 x -> dispatch (ofSuccess x)\n                    | _ -> ()\n                }\n            [bind >> start]\n\n        /// Command that will evaluate an async block and map the error (of exception)\n        let attempt (start: Async<unit> -> unit) \n                    (task: 'a -> Async<_>)\n                    (arg: 'a)\n                    (ofError: _ -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task arg |> Async.Catch\n                    match r with\n                    | Choice2Of2 x -> dispatch (ofError x)\n                    | _ -> ()\n                }\n            [bind >> start]\n\n        /// Command that will evaluate an async block to the message\n        let result (start: Async<unit> -> unit) \n                   (task: Async<'msg>) : Cmd<'msg> =\n            let bind dispatch =\n                async {\n                    let! r = task |> Async.Catch\n                    match r with\n                    | Choice1Of2 x -> dispatch x\n                    | _ -> ()\n                }\n            [bind >> start]\n\n    module OfAsync =\n#if FABLE_COMPILER\n        let start x = Timer.delay 0 (fun _ -> Async.StartImmediate x)\n#else\n        let inline start x = Async.Start x\n#endif    \n        /// Command that will evaluate an async block and map the result\n        /// into success or error (of exception)\n        let inline either (task: 'a -> Async<_>)\n                          (arg: 'a)\n                          (ofSuccess: _ -> 'msg)\n                          (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.either start task arg ofSuccess ofError\n\n        /// Command that will evaluate an async block and map the success\n        let inline perform (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.perform start task arg ofSuccess\n\n        /// Command that will evaluate an async block and map the error (of exception)\n        let inline attempt (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.attempt start task arg ofError\n\n        /// Command that will evaluate an async block to the message\n        let inline result (task: Async<'msg>) : Cmd<'msg> =\n            OfAsyncWith.result start task\n\n    module OfAsyncImmediate =\n        /// Command that will evaluate an async block and map the result\n        /// into success or error (of exception)\n        let inline either (task: 'a -> Async<_>)\n                          (arg: 'a)\n                          (ofSuccess: _ -> 'msg)\n                          (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.either Async.StartImmediate task arg ofSuccess ofError\n\n        /// Command that will evaluate an async block and map the success\n        let inline perform (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.perform Async.StartImmediate task arg ofSuccess\n\n        /// Command that will evaluate an async block and map the error (of exception)\n        let inline attempt (task: 'a -> Async<_>)\n                           (arg: 'a)\n                           (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsyncWith.attempt Async.StartImmediate task arg ofError\n\n        /// Command that will evaluate an async block to the message\n        let inline result (task: Async<'msg>) : Cmd<'msg> =\n            OfAsyncWith.result Async.StartImmediate task\n\n#if FABLE_COMPILER\n    module OfPromise =\n        /// Command to call `promise` block and map the results\n        let either (task: 'a -> Fable.Core.JS.Promise<_>)\n                   (arg:'a)\n                   (ofSuccess: _ -> 'msg)\n                   (ofError: #exn -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                (task arg)\n                    .``then``(ofSuccess >> dispatch)\n                    .catch(unbox >> ofError >> dispatch)\n                    |> ignore\n            [bind]\n\n        /// Command to call `promise` block and map the success\n        let perform (task: 'a -> Fable.Core.JS.Promise<_>)\n                   (arg:'a)\n                   (ofSuccess: _ -> 'msg) =\n            let bind dispatch =\n                (task arg)\n                    .``then``(ofSuccess >> dispatch)\n                    |> ignore\n            [bind]\n\n        /// Command to call `promise` block and map the error\n        let attempt (task: 'a -> Fable.Core.JS.Promise<_>)\n                    (arg:'a)\n                    (ofError: #exn -> 'msg) : Cmd<'msg> =\n            let bind dispatch =\n                (task arg)\n                    .catch(unbox >> ofError >> dispatch)\n                    |> ignore\n            [bind]\n\n        /// Command to dispatch the `promise` result\n        let result (task: Fable.Core.JS.Promise<'msg>) =\n            let bind dispatch =\n                task.``then`` dispatch\n                |> ignore\n            [bind]\n\n    [<Obsolete(\"Use `OfPromise.either` instead\")>]\n    let inline ofPromise (task: 'a -> Fable.Core.JS.Promise<_>)\n                         (arg:'a)\n                         (ofSuccess: _ -> 'msg)\n                         (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfPromise.either task arg ofSuccess ofError                     \n#else\n    open System.Threading.Tasks\n    module OfTask =\n        /// Command to call a task and map the results\n        let inline either (task: 'a -> Task<_>)\n                          (arg:'a)\n                          (ofSuccess: _ -> 'msg)\n                          (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsync.either (task >> Async.AwaitTask) arg ofSuccess ofError\n\n        /// Command to call a task and map the success\n        let inline perform (task: 'a -> Task<_>)\n                           (arg:'a)\n                           (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n            OfAsync.perform (task >> Async.AwaitTask) arg ofSuccess\n\n        /// Command to call a task and map the error\n        let inline attempt (task: 'a -> Task<_>)\n                           (arg:'a)\n                           (ofError: _ -> 'msg) : Cmd<'msg> =\n            OfAsync.attempt (task >> Async.AwaitTask) arg ofError\n\n        /// Command and map the task success\n        let inline result (task: Task<'msg>) : Cmd<'msg> =\n            OfAsync.result (task |> Async.AwaitTask)\n\n    [<Obsolete(\"Use OfTask.either instead\")>]\n    let inline ofTask (task: 'a -> Task<_>)\n                      (arg:'a)\n                      (ofSuccess: _ -> 'msg)\n                      (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfTask.either task arg ofSuccess ofError\n#endif\n\n    // Synonymous with `OfFunc.result`, may be removed in the future\n    let inline ofMsg (msg:'msg) : Cmd<'msg> =\n        OfFunc.result msg\n\n    [<Obsolete(\"Use `Cmd.OfAsync.either` instead\")>]\n    let inline ofAsync (task: 'a -> Async<_>)\n                       (arg: 'a)\n                       (ofSuccess: _ -> 'msg)\n                       (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfAsync.either task arg ofSuccess ofError\n\n    [<Obsolete(\"Use `Cmd.OfFunc.either` instead\")>]\n    let inline ofFunc (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfFunc.either task arg ofSuccess ofError\n\n    [<Obsolete(\"Use `Cmd.OfFunc.perform` instead\")>]\n    let inline performFunc (task: 'a -> _) (arg: 'a) (ofSuccess: _ -> 'msg) : Cmd<'msg> =\n        OfFunc.perform task arg ofSuccess\n\n    [<Obsolete(\"Use `Cmd.OfFunc.attempt` instead\")>]\n    let attemptFunc (task: 'a -> unit) (arg: 'a) (ofError: _ -> 'msg) : Cmd<'msg> =\n        OfFunc.attempt task arg ofError\n\n","namespace Feliz.Plotly\r\n\r\nmodule rec Bindings =\r\n    open Browser.Types\r\n    open Fable.Core.JsInterop\r\n    open Fable.Core\r\n    open Fable.React\r\n    open System\r\n\r\n    module Internal =\r\n        let plotly: obj = importAll \"plotly.js\"\r\n        let plotFactory: obj -> obj = importDefault \"react-plotly.js/factory.js\"\r\n        let plotComponent = plotFactory plotly\r\n        let createPlot props: ReactElement = \r\n            ReactBindings.React.createElement (plotComponent, props, [])\r\n\r\n        let getKV value : string * obj = unbox value\r\n\r\n        let extractData (properties: #IDataProperty list) =\r\n            properties \r\n            |> List.map (getKV >> snd) \r\n            |> ResizeArray \r\n            |> Interop.mkPlotAttr \"data\"\r\n\r\n        let extractDataConditionals (properties: (bool * 'a list) list) =\r\n            properties\r\n            |> List.filter fst\r\n            |> List.collect snd\r\n            |> unbox\r\n            |> extractData\r\n            |> Interop.mkPlotAttr \"data\"\r\n\r\n        let withConditionals (properties: (bool * 'a list) list) =\r\n            properties\r\n            |> List.filter fst\r\n            |> List.collect snd\r\n            |> unbox\r\n            |> createObj\r\n\r\n//    type Datum = U3<string, float, DateTime> option\r\n\r\n//    [<RequireQualifiedAccess; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\r\n//    module Datum =\r\n//        let ofStringOption v: Datum = v |> Microsoft.FSharp.Core.Option.map U3.Case1\r\n\r\n//        let ofString v: Datum =\r\n//            v\r\n//            |> U3.Case1\r\n//            |> Some\r\n\r\n//        let isString (v: Datum) =\r\n//            match v with\r\n//            | None -> false\r\n//            | Some o ->\r\n//                match o with\r\n//                | U3.Case1 _ -> true\r\n//                | _ -> false\r\n\r\n//        let asString (v: Datum) =\r\n//            match v with\r\n//            | None -> None\r\n//            | Some o ->\r\n//                match o with\r\n//                | U3.Case1 o -> Some o\r\n//                | _ -> None\r\n\r\n//        let ofFloatOption v: Datum = v |> Microsoft.FSharp.Core.Option.map U3.Case2\r\n\r\n//        let ofFloat v: Datum =\r\n//            v\r\n//            |> U3.Case2\r\n//            |> Some\r\n\r\n//        let isFloat (v: Datum) =\r\n//            match v with\r\n//            | None -> false\r\n//            | Some o ->\r\n//                match o with\r\n//                | U3.Case2 _ -> true\r\n//                | _ -> false\r\n\r\n//        let asFloat (v: Datum) =\r\n//            match v with\r\n//            | None -> None\r\n//            | Some o ->\r\n//                match o with\r\n//                | U3.Case2 o -> Some o\r\n//                | _ -> None\r\n\r\n//        let ofDateTimeOption v: Datum = v |> Microsoft.FSharp.Core.Option.map U3.Case3\r\n\r\n//        let ofDateTime v: Datum =\r\n//            v\r\n//            |> U3.Case3\r\n//            |> Some\r\n\r\n//        let isDateTime (v: Datum) =\r\n//            match v with\r\n//            | None -> false\r\n//            | Some o ->\r\n//                match o with\r\n//                | U3.Case3 _ -> true\r\n//                | _ -> false\r\n\r\n//        let asDateTime (v: Datum) =\r\n//            match v with\r\n//            | None -> None\r\n//            | Some o ->\r\n//                match o with\r\n//                | U3.Case3 o -> Some o\r\n//                | _ -> None\r\n\r\n\r\n//    type ErrorBar = obj\r\n\r\n//    //[<RequireQualifiedAccess; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\r\n//    //module ErrorBar =\r\n//    //    let ofType v: ErrorBar = v |> U6.Case1\r\n//    //    let isType (v: ErrorBar) = match v with U6.Case1 _ -> true | _ -> false\r\n//    //    let asType (v: ErrorBar) = match v with U6.Case1 o -> Some o | _ -> None\r\n//    //    let ofValue v: ErrorBar = v |> U6.Case2\r\n//    //    let isValue (v: ErrorBar) = match v with U6.Case2 _ -> true | _ -> false\r\n//    //    let asValue (v: ErrorBar) = match v with U6.Case2 o -> Some o | _ -> None\r\n//    //    let ofValueminus v: ErrorBar = v |> U6.Case3\r\n//    //    let isValueminus (v: ErrorBar) = match v with U6.Case3 _ -> true | _ -> false\r\n//    //    let asValueminus (v: ErrorBar) = match v with U6.Case3 o -> Some o | _ -> None\r\n//    //    let ofType v: ErrorBar = v |> U6.Case4\r\n//    //    let isType (v: ErrorBar) = match v with U6.Case4 _ -> true | _ -> false\r\n//    //    let asType (v: ErrorBar) = match v with U6.Case4 o -> Some o | _ -> None\r\n//    //    let ofArray v: ErrorBar = v |> U6.Case5\r\n//    //    let isArray (v: ErrorBar) = match v with U6.Case5 _ -> true | _ -> false\r\n//    //    let asArray (v: ErrorBar) = match v with U6.Case5 o -> Some o | _ -> None\r\n//    //    let ofArrayminus v: ErrorBar = v |> U6.Case6\r\n//    //    let isArrayminus (v: ErrorBar) = match v with U6.Case6 _ -> true | _ -> false\r\n//    //    let asArrayminus (v: ErrorBar) = match v with U6.Case6 o -> Some o | _ -> None\r\n\r\n//    type Color = U4<string, float, U2<string, float> [] option, U2<string, float> option [] []>\r\n\r\n//    [<RequireQualifiedAccess; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\r\n//    module Color =\r\n//        let ofString v: Color = v |> U4.Case1\r\n\r\n//        let isString (v: Color) =\r\n//            match v with\r\n//            | U4.Case1 _ -> true\r\n//            | _ -> false\r\n\r\n//        let asString (v: Color) =\r\n//            match v with\r\n//            | U4.Case1 o -> Some o\r\n//            | _ -> None\r\n\r\n//        let ofFloat v: Color = v |> U4.Case2\r\n\r\n//        let isFloat (v: Color) =\r\n//            match v with\r\n//            | U4.Case2 _ -> true\r\n//            | _ -> false\r\n\r\n//        let asFloat (v: Color) =\r\n//            match v with\r\n//            | U4.Case2 o -> Some o\r\n//            | _ -> None\r\n\r\n//        let ofArray v: Color = v |> U4.Case3\r\n//        //let isArray (v: Color) = match v with U4.Case3 _ -> true | _ -> false\r\n//        //let asArray (v: Color) = match v with U4.Case3 o -> Some o | _ -> None\r\n//        let ofArray2D v: Color = v |> U4.Case4\r\n//    //let isArray2D (v: Color) = match v with U4.Case4 _ -> true | _ -> false\r\n//    //let asArray2D (v: Color) = match v with U4.Case4 o -> Some o | _ -> None\r\n\r\n//    type ColorScale = U3<string, ResizeArray<string>, (float * string) []>\r\n\r\n//    [<RequireQualifiedAccess; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\r\n//    module ColorScale =\r\n//        let ofString v: ColorScale = v |> U3.Case1\r\n\r\n//        let isString (v: ColorScale) =\r\n//            match v with\r\n//            | U3.Case1 _ -> true\r\n//            | _ -> false\r\n\r\n//        let asString (v: ColorScale) =\r\n//            match v with\r\n//            | U3.Case1 o -> Some o\r\n//            | _ -> None\r\n\r\n//        let ofStringArray v: ColorScale = v |> U3.Case2\r\n\r\n//        let isStringArray (v: ColorScale) =\r\n//            match v with\r\n//            | U3.Case2 _ -> true\r\n//            | _ -> false\r\n\r\n//        let asStringArray (v: ColorScale) =\r\n//            match v with\r\n//            | U3.Case2 o -> Some o\r\n//            | _ -> None\r\n\r\n//        let ofArray v: ColorScale = v |> U3.Case3\r\n\r\n//        let isArray (v: ColorScale) =\r\n//            match v with\r\n//            | U3.Case3 _ -> true\r\n//            | _ -> false\r\n\r\n//        let asArray (v: ColorScale) =\r\n//            match v with\r\n//            | U3.Case3 o -> Some o\r\n//            | _ -> None\r\n\r\n//    [<StringEnum; RequireQualifiedAccess>]\r\n//    type Dash =\r\n//        | Solid\r\n//        | Dot\r\n//        | Dash\r\n//        | Longdash\r\n//        | Dashdot\r\n//        | Longdashdot\r\n\r\n//    type Data = PlotData // Partial<PlotData>\r\n\r\n//    type DataTransform = Transform // Partial<Transform>\r\n\r\n//    type ScatterData = PlotData\r\n\r\n//    [<StringEnum; RequireQualifiedAccess>]\r\n//    type Orientation =\r\n//        | V\r\n//        | H\r\n\r\n//    [<StringEnum; RequireQualifiedAccess>]\r\n//    type MarkerSizeMode =\r\n//        | Diameter\r\n//        | Area\r\n\r\n//    [<StringEnum; RequireQualifiedAccess>]\r\n//    type LineShape =\r\n//        | Linear\r\n//        | Spline\r\n//        | Hv\r\n//        | Vh\r\n//        | Hvh\r\n//        | Vhv\r\n\r\n//    [<RequireQualifiedAccess; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\r\n//    module Gradient =\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Type =\r\n//            | Radial\r\n//            | Horizontal\r\n//            | Vertical\r\n//            | None\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type Gradient =\r\n//        abstract ``type``: Gradient.Type with get, set\r\n//        abstract color: Color with get, set\r\n//        abstract typesrc: obj option with get, set // any\r\n//        abstract colorsrc: obj option with get, set // any\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type TickFormatStops =\r\n//        abstract dtickrange: ResizeArray<obj option> with get, set //?\r\n//        abstract value: string with get, set\r\n\r\n//    [<RequireQualifiedAccess; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\r\n//    module Transition =\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Easing =\r\n//            | Linear\r\n//            | Quad\r\n//            | Cubic\r\n//            | Sin\r\n//            | Exp\r\n//            | Circle\r\n//            | Elastic\r\n//            | Back\r\n//            | Bounce\r\n//            | [<CompiledName \"linear-in\">] LinearIn\r\n//            | [<CompiledName \"quad-in \">] QuadIn\r\n//            | [<CompiledName \"cubic-in \">] CubicIn\r\n//            | [<CompiledName \"sin-in \">] SinIn\r\n//            | [<CompiledName \"exp-in \">] ExpIn\r\n//            | [<CompiledName \"circle-in \">] CircleIn\r\n//            | [<CompiledName \"elastic-in\">] ElasticIn\r\n//            | [<CompiledName \"back-in\">] BackIn\r\n//            | [<CompiledName \"bounce-in \">] BounceIn\r\n//            | [<CompiledName \"linear-out \">] LinearOut\r\n//            | [<CompiledName \"quad-out \">] QuadOut\r\n//            | [<CompiledName \"cubic-out\">] CubicOut\r\n//            | [<CompiledName \"sin-out \">] SinOut\r\n//            | [<CompiledName \"exp-out \">] ExpOut\r\n//            | [<CompiledName \"circle-out \">] CircleOut\r\n//            | [<CompiledName \"elastic-out \">] ElasticOut\r\n//            | [<CompiledName \"back-out \">] BackOut\r\n//            | [<CompiledName \"bounce-out \">] BounceOut\r\n//            | [<CompiledName \"linear-in-out \">] LinearInOut\r\n//            | [<CompiledName \"quad-in-out \">] QuadInOut\r\n//            | [<CompiledName \"cubic-in-out \">] CubicInOut\r\n//            | [<CompiledName \"sin-in-out \">] SinInOut\r\n//            | [<CompiledName \"exp-in-out \">] ExpInOut\r\n//            | [<CompiledName \"circle-in-out \">] CircleInOut\r\n//            | [<CompiledName \"elastic-in-out \">] ElasticInOut\r\n//            | [<CompiledName \"back-in-out \">] BackInOut\r\n//            | [<CompiledName \"bounce-in-out\">] BounceInOut\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type Transition =\r\n//        /// Sets the duration of the slider transition\r\n//        abstract duration: float with get, set\r\n//        /// Sets the easing function of the slider transition\r\n//        abstract easing: Transition.Easing with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type FrameAnimation =\r\n//        abstract duration: float with get, set\r\n//        abstract redraw: bool with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type Animation =\r\n//        abstract frame: FrameAnimation with get, set\r\n//        abstract transition: Transition with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type XBins =\r\n//        abstract start: U2<float, string> with get, set\r\n//        abstract ``end``: U2<float, string> with get, set\r\n//        abstract size: U2<float, string> with get, set\r\n\r\n//    [<RequireQualifiedAccess; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\r\n//    module PlotData =\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Type =\r\n//            | Bar\r\n//            | Box\r\n//            | Candlestick\r\n//            | Choropleth\r\n//            | Contour\r\n//            | Heatmap\r\n//            | Histogram\r\n//            | Mesh3d\r\n//            | Ohlc\r\n//            | Paroords\r\n//            | Pie\r\n//            | [<CompiledName \"pointcloud\">] PointCloud\r\n//            | Scatter\r\n//            | Scatter3d\r\n//            | [<CompiledName \"scatterternary\">] ScatterGeo\r\n//            | [<CompiledName \"scattergl\">] ScatterGL\r\n//            | [<CompiledName \"scatterpolar\">] ScatterPolar\r\n//            | [<CompiledName \"scatterternary\">] ScatterTernary\r\n//            | Surface\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Mode =\r\n//            | Lines\r\n//            | Markers\r\n//            | Text\r\n//            | [<CompiledName \"lines+markers\">] LinesAndMarkers\r\n//            | [<CompiledName \"text+markers\">] TextAndMarkers\r\n//            | [<CompiledName \"text+lines\">] TextAndLines\r\n//            | [<CompiledName \"text+lines+markers\">] TextLinesAndMarkers\r\n//            | None\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type HoverOn =\r\n//            | Points\r\n//            | Fills\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type HoverInfo =\r\n//            | All\r\n//            | Name\r\n//            | None\r\n//            | Skip\r\n//            | Text\r\n//            | X\r\n//            | [<CompiledName \"x+text\">] XAndText\r\n//            | [<CompiledName \"x+name\">] XAndName\r\n//            | [<CompiledName \"x+y\">] XAndY\r\n//            | [<CompiledName \"x+y+text\">] XYAndText\r\n//            | [<CompiledName \"x+y+name\">] XYAndName\r\n//            | [<CompiledName \"x+y+z\">] XYAndY\r\n//            | [<CompiledName \"x+y+z+text\">] XYZAndText\r\n//            | [<CompiledName \"x+y+z+name\">] XYZAndName\r\n//            | [<CompiledName \"y+name\">] YAndName\r\n//            | [<CompiledName \"y+x\">] YAndX\r\n//            | [<CompiledName \"y+text\">] YAndText\r\n//            | [<CompiledName \"y+x+text\">] YXAndText\r\n//            | [<CompiledName \"y+x+name\">] YXAndName\r\n//            | [<CompiledName \"y+z\">] YAndZ\r\n//            | [<CompiledName \"y+z+text\">] YZAndText\r\n//            | [<CompiledName \"y+z+name\">] YZAndName\r\n//            | [<CompiledName \"y+x+z\">] YXAndZ\r\n//            | [<CompiledName \"y+x+z+text\">] YXZAndText\r\n//            | [<CompiledName \"y+x+z+name\">] YXZAndName\r\n//            | [<CompiledName \"z+x\">] ZAndX\r\n//            | [<CompiledName \"z+x+text\">] ZXAndText\r\n//            | [<CompiledName \"z+x+name\">] ZXAndName\r\n//            | [<CompiledName \"z+y+x\">] ZYAndX\r\n//            | [<CompiledName \"z+y+x+text\">] ZYXandText\r\n//            | [<CompiledName \"z+y+x+name\">] ZYXAndName\r\n//            | [<CompiledName \"z+x+y\">] ZXAndY\r\n//            | [<CompiledName \"z+x+y+text\">] ZXYAndText\r\n//            | [<CompiledName \"z+x+y+name\">] ZXYAndName\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type TextInfo =\r\n//            | Label\r\n//            | [<CompiledName \"label+text\">] LabelAndText\r\n//            | [<CompiledName \"label+value\">] LabelAndValue\r\n//            | [<CompiledName \"label+percent\">] LabelAndPercent\r\n//            | [<CompiledName \"label+text+value\">] LabelTextAndValue\r\n//            | [<CompiledName \"label+text+percent\">] LabelTextAndPercent\r\n//            | [<CompiledName \"label+value+percent\">] LabelValueAndPercent\r\n//            | Text\r\n//            | [<CompiledName \"text+value\">] TextAndValue\r\n//            | [<CompiledName \"text+percent\">] TextAndPercent\r\n//            | [<CompiledName \"text+value+percent\">] TextValueAndPercent\r\n//            | Value\r\n//            | [<CompiledName \"value+percent\">] ValueAndPercent\r\n//            | Percent\r\n//            | None\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type TextPosition =\r\n//            | TopLeft\r\n//            | TopCenter\r\n//            | TopRight\r\n//            | MiddleLeft\r\n//            | MiddleCenter\r\n//            | MiddleRight\r\n//            | BottomLeft\r\n//            | BottomCenter\r\n//            | BottomRight\r\n//            | Inside\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Fill =\r\n//            | None\r\n//            | [<CompiledName \"tozeroy\">] ToZeroY\r\n//            | [<CompiledName \"tozerox\">] ToZeroX\r\n//            | [<CompiledName \"tonexty\">] ToNextY\r\n//            | [<CompiledName \"tonextx\">] ToNextX\r\n//            | [<CompiledName \"toself\">] ToSelf\r\n//            | [<CompiledName \"tonext\">] ToNext\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type BoxMean = Sd\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type ZSmooth =\r\n//            | Fast\r\n//            | Best\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type PlotData =\r\n//        abstract ``type``: PlotData.Type with get, set\r\n//        abstract x: U3<ResizeArray<Datum>, ResizeArray<ResizeArray<Datum>>, 'T []> with get, set\r\n//        abstract y: U3<ResizeArray<Datum>, ResizeArray<ResizeArray<Datum>>, 'T []> with get, set\r\n//        abstract z: U4<ResizeArray<Datum>, ResizeArray<ResizeArray<Datum>>, ResizeArray<ResizeArray<ResizeArray<Datum>>>, 'T []> with get, set\r\n//        abstract xy: obj with get, set\r\n//        abstract error_x: ErrorBar with get, set\r\n//        abstract error_y: ErrorBar with get, set\r\n//        abstract xaxis: string with get, set\r\n//        abstract yaxis: string with get, set\r\n//        abstract text: U2<string, ResizeArray<string>> with get, set\r\n//        abstract line: ScatterLine with get, set // Partial<ScatterLine>\r\n//        abstract ``line.color``: Color with get, set\r\n//        abstract ``line.width``: float with get, set\r\n//        abstract ``line.dash``: Dash with get, set\r\n//        abstract ``line.shape``: LineShape with get, set\r\n//        abstract ``line.smoothing``: float with get, set\r\n//        abstract ``line.simplify``: bool with get, set\r\n//        abstract marker: PlotMarker with get, set // Partial<PlotMarker>\r\n//        abstract ``marker.symbol``: U2<string, ResizeArray<string>> with get, set\r\n//        abstract ``marker.color``: Color with get, set\r\n//        abstract ``marker.opacity``: U2<float, ResizeArray<float>> with get, set\r\n//        abstract ``marker.size``: U2<float, ResizeArray<float>> with get, set\r\n//        abstract ``marker.maxdisplayed``: float with get, set\r\n//        abstract ``marker.sizeref``: float with get, set\r\n//        abstract ``marker.sizemax``: float with get, set\r\n//        abstract ``marker.sizemin``: float with get, set\r\n//        abstract ``marker.sizemode``: MarkerSizeMode with get, set\r\n//        abstract ``marker.showscale``: bool with get, set\r\n//        abstract ``marker.line``: ScatterMarkerLine with get, set // Partial<ScatterMarkerLine>\r\n//        abstract ``marker.colorbar``: ColorBar with get, set\r\n//        abstract mode: PlotData.Mode with get, set\r\n//        abstract hoveron: PlotData.HoverOn with get, set\r\n//        abstract hoverinfo: PlotData.HoverInfo with get, set\r\n//        abstract hoverlabel: HoverLabel with get, set // Partial<HoverLabel>\r\n//        abstract hovertemplate: U2<string, ResizeArray<string>> with get, set\r\n//        abstract textinfo: PlotData.TextInfo with get, set\r\n//        abstract textposition: PlotData.TextPosition with get, set\r\n//        abstract fill: PlotData.Fill with get, set\r\n//        abstract fillcolor: string with get, set\r\n//        abstract legendgroup: string with get, set\r\n//        abstract name: string with get, set\r\n//        abstract stackgroup: string with get, set\r\n//        abstract connectgaps: bool with get, set\r\n//        abstract visible: U2<bool, string> with get, set\r\n//        abstract transforms: ResizeArray<DataTransform> with get, set\r\n//        abstract orientation: Orientation with get, set\r\n//        abstract width: U2<float, ResizeArray<float>> with get, set\r\n//        abstract boxmean: U2<bool, PlotData.BoxMean> with get, set\r\n//        abstract colorscale: ColorScale with get, set\r\n//        abstract zsmooth: U2<PlotData.ZSmooth, bool> with get, set\r\n//        abstract ygap: float with get, set\r\n//        abstract xgap: float with get, set\r\n//        abstract transpose: bool with get, set\r\n//        abstract autobinx: bool with get, set\r\n//        abstract xbins: XBins with get, set\r\n//        abstract values: ResizeArray<Datum> with get, set\r\n//        abstract labels: ResizeArray<Datum> with get, set\r\n//        abstract hole: float with get, set\r\n//        abstract rotation: float with get, set\r\n//        abstract theta: ResizeArray<Datum> with get, set\r\n//        abstract r: ResizeArray<Datum> with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type Point =\r\n//        abstract x: float with get, set\r\n//        abstract y: float with get, set\r\n//        abstract z: float with get, set\r\n\r\n//    [<RequireQualifiedAccess; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\r\n//    module Axis =\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type RangeMode =\r\n//            | Normal\r\n//            | [<CompiledName \"tozero\">] ToZero\r\n//            | [<CompiledName \"nonnegative\">] NonNegative\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Mirror =\r\n//            | Ticks\r\n//            | All\r\n//            | [<CompiledName \"allticks\">] AllTicks\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type CategoryOrder =\r\n//            | Trace\r\n//            | [<CompiledName \"category ascending\">] Ascending\r\n//            | [<CompiledName \"category descending\">] Descending\r\n//            | Array\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Constrain =\r\n//            | Range\r\n//            | Domain\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type ConstrainToward =\r\n//            | Left\r\n//            | Center\r\n//            | Right\r\n//            | Top\r\n//            | Middle\r\n//            | Bottom\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Name =\r\n//            | X\r\n//            | X2\r\n//            | X3\r\n//            | X4\r\n//            | X5\r\n//            | X6\r\n//            | X7\r\n//            | X8\r\n//            | X9\r\n//            | Y\r\n//            | Y2\r\n//            | Y3\r\n//            | Y4\r\n//            | Y5\r\n//            | Y6\r\n//            | Y7\r\n//            | Y8\r\n//            | Y9\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Positioning =\r\n//            | Free\r\n//            | X\r\n//            | X2\r\n//            | X3\r\n//            | X4\r\n//            | X5\r\n//            | X6\r\n//            | X7\r\n//            | X8\r\n//            | X9\r\n//            | Y\r\n//            | Y2\r\n//            | Y3\r\n//            | Y4\r\n//            | Y5\r\n//            | Y6\r\n//            | Y7\r\n//            | Y8\r\n//            | Y9\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Side =\r\n//            | Top\r\n//            | Bottom\r\n//            | Left\r\n//            | Right\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Layer =\r\n//            | [<CompiledName \"above traces\">] AboveTraces\r\n//            | [<CompiledName \"below traces\">] BelowTraces\r\n\r\n//    [<StringEnum; RequireQualifiedAccess>]\r\n//    type AxisType =\r\n//        | [<CompiledName \"-\">] Dash\r\n//        | Linear\r\n//        | Log\r\n//        | Date\r\n//        | Category\r\n\r\n//    [<StringEnum; RequireQualifiedAccess>]\r\n//    type TickMode =\r\n//        | Auto\r\n//        | Linear\r\n//        | Array\r\n\r\n//    [<StringEnum; RequireQualifiedAccess>]\r\n//    type Ticks =\r\n//        | Outside\r\n//        | Inside\r\n//        | [<CompiledName \"\">] None\r\n\r\n//    [<StringEnum; RequireQualifiedAccess>]\r\n//    type ShowOptions =\r\n//        | All\r\n//        | First\r\n//        | Last\r\n//        | None\r\n\r\n//    [<StringEnum; RequireQualifiedAccess>]\r\n//    type ExponentFormat =\r\n//        | None\r\n//        | [<CompiledName \"e\">] LowerE\r\n//        | [<CompiledName \"E\">] UpperE\r\n//        | Power\r\n//        | SI\r\n//        | B\r\n\r\n//    [<StringEnum; RequireQualifiedAccess>]\r\n//    type Calendar =\r\n//        | Gregorian\r\n//        | Chinese\r\n//        | Coptic\r\n//        | Discworld\r\n//        | Ethiopian\r\n//        | Hebrew\r\n//        | Islamic\r\n//        | Julian\r\n//        | Mayan\r\n//        | Nanakshahi\r\n//        | Nepali\r\n//        | Persian\r\n//        | Jalali\r\n//        | Taiwan\r\n//        | Thai\r\n//        | Ummalqura\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type Axis =\r\n//        abstract visible: bool with get, set\r\n//        abstract color: Color with get, set\r\n//        abstract title: string with get, set\r\n//        abstract titlefont: Font with get, set\r\n//        abstract ``type``: AxisType with get, set\r\n//        abstract autorange: U2<bool, string> with get, set\r\n//        abstract rangemode: Axis.RangeMode with get, set\r\n//        abstract range: ResizeArray<Range> with get, set\r\n//        abstract tickmode: TickMode with get, set\r\n//        abstract nticks: float with get, set\r\n//        abstract tick0: U2<float, string> with get, set\r\n//        abstract dtick: U2<float, string> with get, set\r\n//        abstract tickvals: ResizeArray<float> with get, set\r\n//        abstract ticktext: ResizeArray<string> with get, set\r\n//        abstract ticks: Ticks with get, set\r\n//        abstract mirror: U2<bool, Axis.Mirror> with get, set\r\n//        abstract ticklen: float with get, set\r\n//        abstract tickwidth: float with get, set\r\n//        abstract tickcolor: Color with get, set\r\n//        abstract showticklabels: bool with get, set\r\n//        abstract showspikes: bool with get, set\r\n//        abstract spikecolor: Color with get, set\r\n//        abstract spikethickness: float with get, set\r\n//        abstract categoryorder: U4<string, string, string, string> with get, set\r\n//        abstract categoryarray: ResizeArray<obj option> with get, set\r\n//        abstract tickfont: Font with get, set\r\n//        abstract tickangle: float with get, set\r\n//        abstract tickprefix: string with get, set\r\n//        abstract showtickprefix: ShowOptions with get, set\r\n//        abstract ticksuffix: string with get, set\r\n//        abstract showticksuffix: ShowOptions with get, set\r\n//        abstract showexponent: ShowOptions with get, set\r\n//        abstract exponentformat: ExponentFormat with get, set\r\n//        abstract separatethousands: bool with get, set\r\n//        abstract tickformat: string with get, set\r\n//        abstract hoverformat: string with get, set\r\n//        abstract showline: bool with get, set\r\n//        abstract linecolor: Color with get, set\r\n//        abstract linewidth: float with get, set\r\n//        abstract showgrid: bool with get, set\r\n//        abstract gridcolor: Color with get, set\r\n//        abstract gridwidth: float with get, set\r\n//        abstract zeroline: bool with get, set\r\n//        abstract zerolinecolor: Color with get, set\r\n//        abstract zerolinewidth: float with get, set\r\n//        abstract calendar: Calendar with get, set\r\n\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type LayoutAxis =\r\n//        inherit Axis\r\n//        abstract fixedrange: bool with get, set\r\n//        abstract scaleanchor: Axis.Name with get, set\r\n//        abstract scaleratio: float with get, set\r\n//        abstract constrain: Axis.Constrain with get, set\r\n//        abstract constraintoward: Axis.ConstrainToward with get, set\r\n//        abstract spikedash: string with get, set\r\n//        abstract spikemode: string with get, set\r\n//        abstract anchor: Axis.Positioning with get, set\r\n//        abstract side: Axis.Side with get, set\r\n//        abstract overlaying: Axis.Positioning with get, set\r\n//        abstract layer: Axis.Layer with get, set\r\n//        abstract domain: ResizeArray<float> with get, set\r\n//        abstract position: float with get, set\r\n//        abstract rangeslider: RangeSlider with get, set\r\n//        abstract rangeselector: RangeSelector with get, set\r\n//        abstract automargin: bool with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type PlotScatterDataPoint =\r\n//        abstract curveNumber: float with get, set\r\n//        abstract data: PlotData with get, set\r\n//        abstract pointIndex: float with get, set\r\n//        abstract pointNumber: float with get, set\r\n//        abstract x: float with get, set\r\n//        abstract xaxis: LayoutAxis with get, set\r\n//        abstract y: float with get, set\r\n//        abstract yaxis: LayoutAxis with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type PlotDatum =\r\n//        abstract curveNumber: float with get, set\r\n//        abstract data: PlotData with get, set\r\n//        abstract pointIndex: float with get, set\r\n//        abstract pointNumber: float with get, set\r\n//        abstract x: Datum with get, set\r\n//        abstract xaxis: LayoutAxis with get, set\r\n//        abstract y: Datum with get, set\r\n//        abstract yaxis: LayoutAxis with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type PlotMouseEvent =\r\n//        abstract points: ResizeArray<PlotDatum> with get, set\r\n//        abstract event: MouseEvent with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type PlotCoordinate =\r\n//        abstract x: float with get, set\r\n//        abstract y: float with get, set\r\n//        abstract pointNumber: float with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type SelectionRange =\r\n//        abstract x: ResizeArray<float> with get, set\r\n//        abstract y: ResizeArray<float> with get, set\r\n\r\n//    type PlotSelectedData = obj\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type PlotSelectionEvent =\r\n//        inherit Event\r\n//        abstract points: ResizeArray<PlotDatum> with get, set\r\n//        abstract range: SelectionRange option with get, set\r\n//        abstract lassoPoints: SelectionRange option with get, set\r\n\r\n//    type PlotRestyleEvent = obj option * ResizeArray<float>\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type PlotAxis =\r\n//        abstract range: float * float with get, set\r\n//        abstract autorange: bool with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type PlotScene =\r\n//        abstract center: Point with get, set\r\n//        abstract eye: Point with get, set\r\n//        abstract up: Point with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type PlotRelayoutEvent =\r\n//        abstract xaxis: PlotAxis with get, set\r\n//        abstract yaxis: PlotAxis with get, set\r\n//        abstract scene: PlotScene with get, set\r\n\r\n//    [<RequireQualifiedAccess; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\r\n//    module Annotations =\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Align =\r\n//            | Left\r\n//            | Center\r\n//            | Right\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type VAlign =\r\n//            | Top\r\n//            | Middle\r\n//            | Bottom\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type ArrowSide =\r\n//            | End\r\n//            | Start\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type AXRef =\r\n//            | Pixel\r\n//            | X\r\n//            | X2\r\n//            | X3\r\n//            | X4\r\n//            | X5\r\n//            | X6\r\n//            | X7\r\n//            | X8\r\n//            | X9\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type AYRef =\r\n//            | Pixel\r\n//            | Y\r\n//            | Y2\r\n//            | Y3\r\n//            | Y4\r\n//            | Y5\r\n//            | Y6\r\n//            | Y7\r\n//            | Y8\r\n//            | Y9\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type XAnchor =\r\n//            | Auto\r\n//            | Left\r\n//            | Center\r\n//            | Right\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type YAnchor =\r\n//            | Auto\r\n//            | Top\r\n//            | Middle\r\n//            | Bottom\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type ClickToShow =\r\n//            | [<CompiledName \"onoff\">] OnOff\r\n//            | [<CompiledName \"onout\">] OnOut\r\n\r\n//    [<StringEnum; RequireQualifiedAccess>]\r\n//    type XRef =\r\n//        | Paper\r\n//        | X\r\n\r\n//    [<StringEnum; RequireQualifiedAccess>]\r\n//    type YRef =\r\n//        | Paper\r\n//        | Y\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type Annotations =\r\n//        /// Determines whether or not this annotation is visible.\r\n//        abstract visible: bool with get, set\r\n\r\n\r\n//        /// Sets the text associated with this annotation.\r\n//        /// Plotly uses a subset of HTML tags to do things like\r\n//        /// newline (<br>), bold (<b></b>), italics (<i></i>),\r\n//        /// hyperlinks (<a href='...'></a>). Tags <em>, <sup>, <sub>\r\n//        /// <span> are also supported.\r\n//        abstract text: string with get, set\r\n\r\n\r\n//        /// Sets the angle at which the `text` is drawn with respect to the horizontal.\r\n//        abstract textangle: string with get, set\r\n\r\n\r\n//        /// Sets an explicit width for the text box. null (default) lets the\r\n//        /// text set the box width. Wider text will be clipped.\r\n//        /// There is no automatic wrapping; use <br> to start a new line.\r\n//        abstract width: float with get, set\r\n\r\n\r\n//        /// Sets an explicit height for the text box. null (default) lets the\r\n//        /// text set the box height. Taller text will be clipped.\r\n//        abstract height: float with get, set\r\n\r\n\r\n//        /// Sets the opacity of the annotation (text + arrow).\r\n//        abstract opacity: float with get, set\r\n\r\n\r\n//        /// Sets the horizontal alignment of the `text` within the box.\r\n//        /// Has an effect only if `text` spans more two or more lines\r\n//        /// (i.e. `text` contains one or more <br> HTML tags) or if an\r\n//        /// explicit width is set to override the text width.\r\n//        abstract align: Annotations.Align with get, set\r\n\r\n\r\n//        /// Sets the vertical alignment of the `text` within the box.\r\n//        /// Has an effect only if an explicit height is set to override the text height.\r\n//        abstract valign: Annotations.VAlign with get, set\r\n\r\n\r\n//        /// Sets the padding (in px) between the `text` and the enclosing border.\r\n//        abstract borderpad: float with get, set\r\n\r\n\r\n//        /// Sets the width (in px) of the border enclosing the annotation `text`.\r\n//        abstract borderwidth: float with get, set\r\n\r\n\r\n//        /// Determines whether or not the annotation is drawn with an arrow.\r\n//        /// If *true*, `text` is placed near the arrow's tail.\r\n//        /// If *false*, `text` lines up with the `x` and `y` provided.\r\n//        abstract showarrow: bool with get, set\r\n\r\n\r\n//        /// Sets the color of the annotation arrow.\r\n//        abstract arrowcolor: string with get, set\r\n\r\n\r\n//        /// Sets the end annotation arrow head style.\r\n//        abstract arrowhead: float with get, set\r\n\r\n\r\n//        /// Sets the start annotation arrow head style.\r\n//        abstract startarrowhead: float with get, set\r\n\r\n\r\n//        /// Sets the annotation arrow head position.\r\n//        abstract arrowside: Annotations.ArrowSide with get, set\r\n\r\n\r\n//        /// Sets the size of the end annotation arrow head, relative to `arrowwidth`.\r\n//        /// A value of 1 (default) gives a head about 3x as wide as the line.\r\n//        abstract arrowsize: float with get, set\r\n\r\n\r\n//        /// Sets the size of the start annotation arrow head, relative to `arrowwidth`.\r\n//        /// A value of 1 (default) gives a head about 3x as wide as the line.\r\n//        abstract startarrowsize: float with get, set\r\n\r\n\r\n//        /// Sets the width (in px) of annotation arrow line.\r\n//        abstract arrowwidth: float with get, set\r\n\r\n\r\n//        /// Sets a distance, in pixels, to move the end arrowhead away from the\r\n//        /// position it is pointing at, for example to point at the edge of\r\n//        /// a marker independent of zoom. Note that this shortens the arrow\r\n//        /// from the `ax` / `ay` vector, in contrast to `xshift` / `yshift`\r\n//        /// which moves everything by this amount.\r\n//        abstract standoff: float with get, set\r\n\r\n\r\n//        /// Sets a distance, in pixels, to move the start arrowhead away from the\r\n//        /// position it is pointing at, for example to point at the edge of\r\n//        /// a marker independent of zoom. Note that this shortens the arrow\r\n//        /// from the `ax` / `ay` vector, in contrast to `xshift` / `yshift`\r\n//        /// which moves everything by this amount.\r\n//        abstract startstandoff: float with get, set\r\n\r\n\r\n//        /// Sets the x component of the arrow tail about the arrow head.\r\n//        /// If `axref` is `pixel`, a positive (negative)\r\n//        /// component corresponds to an arrow pointing\r\n//        /// from right to left (left to right).\r\n//        /// If `axref` is an axis, this is an absolute value on that axis,\r\n//        /// like `x`, NOT a relative value.\r\n//        abstract ax: float with get, set\r\n\r\n\r\n//        /// Sets the y component of the arrow tail about the arrow head.\r\n//        /// If `ayref` is `pixel`, a positive (negative)\r\n//        /// component corresponds to an arrow pointing\r\n//        /// from bottom to top (top to bottom).\r\n//        /// If `ayref` is an axis, this is an absolute value on that axis,\r\n//        /// like `y`, NOT a relative value.\r\n//        abstract ay: float with get, set\r\n\r\n\r\n//        /// Indicates in what terms the tail of the annotation (ax,ay)\r\n//        /// is specified. If `pixel`, `ax` is a relative offset in pixels\r\n//        /// from `x`. If set to an x axis id (e.g. *x* or *x2*), `ax` is\r\n//        /// specified in the same terms as that axis. This is useful\r\n//        /// for trendline annotations which should continue to indicate\r\n//        /// the correct trend when zoomed.\r\n//        abstract axref: string with get, set\r\n\r\n\r\n//        /// Indicates in what terms the tail of the annotation (ax,ay)\r\n//        /// is specified. If `pixel`, `ay` is a relative offset in pixels\r\n//        /// from `y`. If set to a y axis id (e.g. *y* or *y2*), `ay` is\r\n//        /// specified in the same terms as that axis. This is useful\r\n//        /// for trendline annotations which should continue to indicate\r\n//        /// the correct trend when zoomed.\r\n//        abstract ayref: string with get, set\r\n\r\n\r\n//        /// Sets the annotation's x coordinate axis.\r\n//        /// If set to an x axis id (e.g. *x* or *x2*), the `x` position refers to an x coordinate\r\n//        /// If set to *paper*, the `x` position refers to the distance from\r\n//        /// the left side of the plotting area in normalized coordinates\r\n//        /// where 0 (1) corresponds to the left (right) side.\r\n//        abstract xref: XRef with get, set\r\n\r\n\r\n//        /// Sets the annotation's x position.\r\n//        /// If the axis `type` is *log*, then you must take the log of your desired range.\r\n//        /// If the axis `type` is *date*, it should be date strings, like date data,\r\n//        /// though Date objects and unix milliseconds will be accepted and converted to strings.\r\n//        /// If the axis `type` is *category*, it should be numbers, using the scale where each\r\n//        /// category is assigned a serial number from zero in the order it appears.\r\n//        abstract x: U2<float, string> with get, set\r\n\r\n\r\n//        /// Sets the text box's horizontal position anchor\r\n//        /// This anchor binds the `x` position to the *left*, *center* or *right* of the annotation.\r\n//        /// For example, if `x` is set to 1, `xref` to *paper* and `xanchor` to *right* then the\r\n//        /// right-most portion of the annotation lines up with the right-most edge of the plotting area.\r\n//        /// If *auto*, the anchor is equivalent to *center* for data-referenced annotations or if there\r\n//        /// is an arrow, whereas for paper-referenced with no arrow, the anchor picked corresponds to the closest side.\r\n//        abstract xanchor: Annotations.XAnchor with get, set\r\n\r\n\r\n//        /// Shifts the position of the whole annotation and arrow to the\r\n//        /// right (positive) or left (negative) by this many pixels.\r\n//        abstract xshift: float with get, set\r\n\r\n\r\n//        /// Sets the annotation's y coordinate axis.\r\n//        /// If set to an y axis id (e.g. *y* or *y2*), the `y` position refers to an y coordinate\r\n//        /// If set to *paper*, the `y` position refers to the distance from\r\n//        /// the bottom of the plotting area in normalized coordinates\r\n//        /// where 0 (1) corresponds to the bottom (top).\r\n//        abstract yref: YRef with get, set\r\n\r\n\r\n//        /// Sets the annotation's y position.\r\n//        /// If the axis `type` is *log*, then you must take the log of your desired range.\r\n//        /// If the axis `type` is *date*, it should be date strings, like date data,\r\n//        /// though Date objects and unix milliseconds will be accepted and converted to strings.\r\n//        /// If the axis `type` is *category*, it should be numbers, using the scale where each\r\n//        /// category is assigned a serial number from zero in the order it appears.\r\n//        abstract y: U2<float, string> with get, set\r\n\r\n\r\n//        /// Sets the text box's vertical position anchor\r\n//        /// This anchor binds the `y` position to the *top*, *middle* or *bottom* of the annotation.\r\n//        /// For example, if `y` is set to 1, `yref` to *paper* and `yanchor` to *top* then the\r\n//        /// top-most portion of the annotation lines up with the top-most edge of the plotting area.\r\n//        /// If *auto*, the anchor is equivalent to *middle* for data-referenced annotations or if\r\n//        /// there is an arrow, whereas for paper-referenced with no arrow, the anchor picked\r\n//        /// corresponds to the closest side.\r\n//        abstract yanchor: Annotations.YAnchor with get, set\r\n\r\n\r\n//        /// Shifts the position of the whole annotation and arrow up\r\n//        /// (positive) or down (negative) by this many pixels.\r\n//        abstract yshift: float with get, set\r\n\r\n\r\n//        /// Makes this annotation respond to clicks on the plot.\r\n//        /// If you click a data point that exactly matches the `x` and `y` values of this annotation,\r\n//        /// and it is hidden (visible: false), it will appear. In *onoff* mode, you must click the same\r\n//        /// point again to make it disappear, so if you click multiple points, you can show multiple\r\n//        /// annotations. In *onout* mode, a click anywhere else in the plot (on another data point or not)\r\n//        /// will hide this annotation. If you need to show/hide this annotation in response to different\r\n//        /// `x` or `y` values, you can set `xclick` and/or `yclick`. This is useful for example to label\r\n//        /// the side of a bar. To label markers though, `standoff` is preferred over `xclick` and `yclick`.\r\n//        abstract clicktoshow: U2<bool, Annotations.ClickToShow> with get, set\r\n\r\n\r\n//        /// Toggle this annotation when clicking a data point whose `x` value\r\n//        /// is `xclick` rather than the annotation's `x` value.\r\n//        abstract xclick: obj option with get, set\r\n\r\n\r\n//        /// Toggle this annotation when clicking a data point whose `y` value\r\n//        /// is `yclick` rather than the annotation's `y` value.\r\n//        abstract yclick: obj option with get, set\r\n\r\n\r\n//        /// Sets text to appear when hovering over this annotation.\r\n//        /// If omitted or blank, no hover label will appear.\r\n//        abstract hovertext: string with get, set\r\n\r\n//        abstract hoverlabel: HoverLabel with get, set // Partial<HoverLabel>\r\n//        /// Determines whether the annotation text box captures mouse move and click events,\r\n//        /// or allows those events to pass through to data points in the plot that may be\r\n//        /// behind the annotation. By default `captureevents` is *false* unless `hovertext`\r\n//        /// is provided. If you use the event `plotly_clickannotation` without `hovertext`\r\n//        /// you must explicitly enable `captureevents`.\r\n//        abstract captureevents: bool with get, set\r\n\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type ClickAnnotationEvent =\r\n//        abstract index: float with get, set\r\n//        abstract annotation: Annotations with get, set\r\n//        abstract fullAnnotation: Annotations with get, set\r\n//        abstract event: MouseEvent with get, set\r\n\r\n//    [<StringEnum>]\r\n//    [<RequireQualifiedAccess>]\r\n//    type ImageFormat =\r\n//        | Jpeg\r\n//        | Png\r\n//        | Webp\r\n//        | Svg\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type ToImgopts =\r\n//        abstract format: ImageFormat with get, set\r\n//        abstract width: float with get, set\r\n//        abstract height: float with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type DownloadImgopts =\r\n//        abstract format: ImageFormat with get, set\r\n//        abstract width: float with get, set\r\n//        abstract height: float with get, set\r\n//        abstract filename: string with get, set\r\n\r\n//    type Root = U2<string, HTMLElement>\r\n\r\n//    [<RequireQualifiedAccess; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\r\n//    module Root =\r\n//        let ofString v: Root = v |> U2.Case1\r\n\r\n//        let isString (v: Root) =\r\n//            match v with\r\n//            | U2.Case1 _ -> true\r\n//            | _ -> false\r\n\r\n//        let asString (v: Root) =\r\n//            match v with\r\n//            | U2.Case1 o -> Some o\r\n//            | _ -> None\r\n\r\n//        let ofHTMLElement v: Root = v |> U2.Case2\r\n//    //let isHTMLElement (v: Root) = match v with U2.Case2 _ -> true | _ -> false\r\n//    //let asHTMLElement (v: Root) = match v with U2.Case2 o -> Some o | _ -> None\r\n\r\n//    [<StringEnum>]\r\n//    [<RequireQualifiedAccess>]\r\n//    type XAnchor =\r\n//        | Left\r\n//        | Center\r\n//        | Right\r\n\r\n//    [<StringEnum>]\r\n//    [<RequireQualifiedAccess>]\r\n//    type YAnchor =\r\n//        | Top\r\n//        | Center\r\n//        | Right\r\n\r\n//    [<StringEnum>]\r\n//    [<RequireQualifiedAccess>]\r\n//    type XAnchorAuto =\r\n//        | Auto\r\n//        | Left\r\n//        | Center\r\n//        | Right\r\n\r\n//    [<StringEnum>]\r\n//    [<RequireQualifiedAccess>]\r\n//    type YAnchorAuto =\r\n//        | Auto\r\n//        | Top\r\n//        | Center\r\n//        | Right\r\n\r\n//    [<RequireQualifiedAccess; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\r\n//    module Layout =\r\n//        [<StringEnum>]\r\n//        type Direction =\r\n//            | Clockwise\r\n//            | CounterClockwise\r\n\r\n//        [<StringEnum>]\r\n//        type DragMode =\r\n//            | Zoom\r\n//            | Pan\r\n//            | Select\r\n//            | Lasso\r\n//            | Orbit\r\n//            | Turntable\r\n\r\n//        [<StringEnum>]\r\n//        type BarMode =\r\n//            | Stack\r\n//            | Group\r\n//            | Overlay\r\n//            | Relative\r\n\r\n//        [<StringEnum>]\r\n//        type SelectDirection =\r\n//            | H\r\n//            | V\r\n//            | D\r\n//            | Any\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type Layout =\r\n//        abstract title: U2<string, obj> with get, set\r\n//        abstract titlefont: Font with get, set // Partial<Font>\r\n//        abstract autosize: bool with get, set\r\n//        abstract showlegend: bool with get, set\r\n//        abstract paper_bgcolor: Color with get, set\r\n//        abstract plot_bgcolor: Color with get, set\r\n//        abstract separators: string with get, set\r\n//        abstract hidesources: bool with get, set\r\n//        abstract xaxis: LayoutAxis with get, set // Partial<LayoutAxis> for all *axis methods\r\n//        abstract xaxis2: LayoutAxis with get, set\r\n//        abstract xaxis3: LayoutAxis with get, set\r\n//        abstract xaxis4: LayoutAxis with get, set\r\n//        abstract xaxis5: LayoutAxis with get, set\r\n//        abstract xaxis6: LayoutAxis with get, set\r\n//        abstract xaxis7: LayoutAxis with get, set\r\n//        abstract xaxis8: LayoutAxis with get, set\r\n//        abstract xaxis9: LayoutAxis with get, set\r\n//        abstract yaxis: LayoutAxis with get, set\r\n//        abstract yaxis2: LayoutAxis with get, set\r\n//        abstract yaxis3: LayoutAxis with get, set\r\n//        abstract yaxis4: LayoutAxis with get, set\r\n//        abstract yaxis5: LayoutAxis with get, set\r\n//        abstract yaxis6: LayoutAxis with get, set\r\n//        abstract yaxis7: LayoutAxis with get, set\r\n//        abstract yaxis8: LayoutAxis with get, set\r\n//        abstract yaxis9: LayoutAxis with get, set\r\n//        abstract margin: Margin with get, set // Partial<Margin>\r\n//        abstract height: float with get, set\r\n//        abstract width: float with get, set\r\n//        abstract hovermode: U4<string, string, string, obj> with get, set\r\n//        abstract hoverlabel: HoverLabel with get, set // Partial<HoverLabel>\r\n//        abstract calendar: Calendar with get, set\r\n//        abstract ``xaxis.range``: Datum * Datum with get, set\r\n//        abstract ``xaxis.range[0]``: Datum with get, set\r\n//        abstract ``xaxis.range[1]``: Datum with get, set\r\n//        abstract ``yaxis.range``: Datum * Datum with get, set\r\n//        abstract ``yaxis.range[0]``: Datum with get, set\r\n//        abstract ``yaxis.range[1]``: Datum with get, set\r\n//        abstract ``yaxis.type``: AxisType with get, set\r\n//        abstract ``xaxis.type``: AxisType with get, set\r\n//        abstract ``xaxis.autorange``: bool with get, set\r\n//        abstract ``yaxis.autorange``: bool with get, set\r\n//        abstract ternary: obj with get, set\r\n//        abstract geo: obj with get, set\r\n//        abstract mapbox: obj with get, set\r\n//        abstract radialaxis: Axis with get, set // Partial<Axis>\r\n//        abstract angularaxis: Axis with get, set\r\n//        abstract direction: Layout.Direction with get, set\r\n//        abstract dragmode: Layout.DragMode with get, set\r\n//        abstract orientation: float with get, set\r\n//        abstract annotations: Annotations [] with get, set // Array<Partial<Annotations>>\r\n//        abstract shapes: Shape [] with get, set // Array<Partial<Shape>>\r\n//        abstract images: Image [] with get, set // Array<Partial<Image>>\r\n//        abstract updatemenus: obj with get, set\r\n//        abstract sliders: Slider [] with get, set // Array<Partial<Slider>>\r\n//        abstract legend: Legend with get, set // Partial<Legend>\r\n//        abstract font: Font with get, set // Partial<Font>\r\n//        abstract scene: Scene with get, set // Partial<Scene>\r\n//        abstract barmode: Layout.BarMode with get, set\r\n//        abstract bargap: float with get, set\r\n//        abstract bargroupgap: float with get, set\r\n//        abstract selectdirection: Layout.SelectDirection with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type Frame =\r\n//        /// An identifier that specifies the group to which the frame belongs,\r\n//        /// used by animate to select a subset of frames.\r\n//        abstract group: string with get, set\r\n//        /// A label by which to identify the frame\r\n//        abstract name: string with get, set\r\n//        /// A list of trace indices that identify the respective traces in the\r\n//        /// data attribute\r\n//        abstract traces: ResizeArray<float> with get, set\r\n//        /// The name of the frame into which this frame's properties are merged\r\n//        /// before applying. This is used to unify properties and avoid needing\r\n//        /// to specify the same values for the same properties in multiple frames.\r\n//        abstract baseframe: string with get, set\r\n//        /// A list of traces this frame modifies. The format is identical to the\r\n//        /// normal trace definition.\r\n//        abstract data: ResizeArray<Data> with get, set\r\n//        /// Layout properties which this frame modifies. The format is identical\r\n//        /// to the normal layout definition.\r\n//        abstract layout: Layout with get, set // Partial<Layout>\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type FrameAnimationEvent =\r\n//        abstract name: string with get, set\r\n//        abstract frame: Frame with get, set\r\n//        abstract animation: Animation with get, set\r\n\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type Legend =\r\n//        abstract traceorder: U3<string, string, string> with get, set\r\n//        abstract x: float with get, set\r\n//        abstract y: float with get, set\r\n//        abstract borderwidth: float with get, set\r\n//        abstract orientation: U2<string, string> with get, set\r\n//        abstract tracegroupgap: float with get, set\r\n//        abstract xanchor: XAnchorAuto with get, set\r\n//        abstract yanchor: YAnchorAuto with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type SceneAxis =\r\n//        inherit Axis\r\n//        abstract spikesides: bool with get, set\r\n//        abstract showbackground: bool with get, set\r\n//        abstract backgroundcolor: Color with get, set\r\n//        abstract showaxeslabels: bool with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type ShapeLine =\r\n//        abstract color: string with get, set\r\n//        abstract width: float with get, set\r\n//        abstract dash: Dash with get, set\r\n\r\n//    [<RequireQualifiedAccess; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\r\n//    module Shape =\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Layer =\r\n//            | Below\r\n//            | Above\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Type =\r\n//            | Rect\r\n//            | Circle\r\n//            | Line\r\n//            | Path\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Xref =\r\n//            | X\r\n//            | Paper\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Yref =\r\n//            | Y\r\n//            | Paper\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type Shape =\r\n//        abstract visible: bool with get, set\r\n//        abstract layer: Shape.Layer with get, set\r\n//        abstract ``type``: Shape.Type with get, set\r\n//        abstract path: string with get, set\r\n//        abstract xref: Shape.Xref with get, set\r\n//        abstract yref: Shape.Yref with get, set\r\n//        abstract x0: Datum with get, set\r\n//        abstract y0: Datum with get, set\r\n//        abstract x1: Datum with get, set\r\n//        abstract y1: Datum with get, set\r\n//        abstract fillcolor: string with get, set\r\n//        abstract opacity: float with get, set\r\n//        abstract line: obj with get, set // ?\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type Margin =\r\n//        abstract t: float with get, set\r\n//        abstract b: float with get, set\r\n//        abstract l: float with get, set\r\n//        abstract r: float with get, set\r\n\r\n//    [<StringEnum; RequireQualifiedAccess>]\r\n//    type ModeBarDefaultButtons =\r\n//        | Lasso2d\r\n//        | Select2d\r\n//        | SendDataToCloud\r\n//        | AutoScale2d\r\n//        | Zoom2d\r\n//        | Pan2d\r\n//        | ZoomIn2d\r\n//        | ZoomOut2d\r\n//        | ResetScale2d\r\n//        | HoverClosestCartesian\r\n//        | HoverCompareCartesian\r\n//        | Zoom3d\r\n//        | Pan3d\r\n//        | OrbitRotation\r\n//        | TableRotation\r\n//        | ResetCameraDefault3d\r\n//        | ResetCameraLastSave3d\r\n//        | HoverClosest3d\r\n//        | ZoomInGeo\r\n//        | ZoomOutGeo\r\n//        | ResetGeo\r\n//        | HoverClosestGeo\r\n//        | HoverClosestGl2d\r\n//        | HoverClosestPie\r\n//        | ToggleHover\r\n//        | ToImage\r\n//        | ResetViews\r\n//        | ToggleSpikelines\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type ErrorOptions =\r\n//        abstract visible: bool with get, set\r\n//        abstract symmetric: bool with get, set\r\n//        abstract color: Color with get, set\r\n//        abstract thickness: float with get, set\r\n//        abstract width: float with get, set\r\n//        abstract opacity: float with get, set\r\n\r\n//    /// These interfaces are based on attribute descriptions in\r\n//    /// https://github.com/plotly/plotly.js/tree/9d6144304308fc3007f0facf2535d38ea3e9b26c/src/transforms\r\n//    [<AllowNullLiteral>]\r\n//    type TransformStyle =\r\n//        abstract target: U4<float, string, ResizeArray<float>, ResizeArray<string>> with get, set\r\n//        abstract value: obj with get, set\r\n\r\n//    [<RequireQualifiedAccess; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\r\n//    module TransformAggregation =\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Func =\r\n//            | Count\r\n//            | Sum\r\n//            | Avg\r\n//            | Median\r\n//            | Mode\r\n//            | Rms\r\n//            | Stddev\r\n//            | Min\r\n//            | Max\r\n//            | First\r\n//            | Last\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type FuncMode =\r\n//            | Sample\r\n//            | Population\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type TransformAggregation =\r\n//        abstract target: string with get, set\r\n//        abstract func: TransformAggregation.Func option with get, set\r\n//        abstract funcmode: TransformAggregation.FuncMode option with get, set\r\n//        abstract enabled: bool option with get, set\r\n\r\n//    [<RequireQualifiedAccess; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\r\n//    module Transform =\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Type =\r\n//            | Aggregate\r\n//            | Filter\r\n//            | [<CompiledName \"groupby\">] GroupBy\r\n//            | Sort\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Order =\r\n//            | Ascending\r\n//            | Descending\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type Transform =\r\n//        abstract ``type``: Transform.Type with get, set\r\n//        abstract enabled: bool with get, set\r\n//        abstract target: U4<float, string, ResizeArray<float>, ResizeArray<string>> with get, set\r\n//        abstract operation: string with get, set\r\n//        abstract aggregations: ResizeArray<TransformAggregation> with get, set\r\n//        abstract preservegaps: bool with get, set\r\n//        abstract groups: U3<string, ResizeArray<float>, ResizeArray<string>> with get, set\r\n//        abstract nameformat: string with get, set\r\n//        abstract styles: ResizeArray<TransformStyle> with get, set\r\n//        abstract value: obj option with get, set\r\n//        abstract order: Transform.Order with get, set\r\n\r\n//    [<RequireQualifiedAccess; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\r\n//    module ColorBar =\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type TitleSide =\r\n//            | Right\r\n//            | Top\r\n//            | Bottom\r\n\r\n//    [<StringEnum; RequireQualifiedAccess>]\r\n//    type SizeMode =\r\n//        | Fraction\r\n//        | Pixels\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type Font =\r\n//        /// HTML font family - the typeface that will be applied by the web browser.\r\n//        /// The web browser will only be able to apply a font if it is available on the system\r\n//        /// which it operates. Provide multiple font families, separated by commas, to indicate\r\n//        /// the preference in which to apply fonts if they aren't available on the system.\r\n//        /// The plotly service (at https://plot.ly or on-premise) generates images on a server,\r\n//        /// where only a select number of fonts are installed and supported.\r\n//        /// These include *Arial*, *Balto*, *Courier New*, *Droid Sans*, *Droid Serif*,\r\n//        /// *Droid Sans Mono*, *Gravitas One*, *Old Standard TT*, *Open Sans*, *Overpass*,\r\n//        /// *PT Sans Narrow*, *Raleway*, *Times New Roman*.\r\n//        abstract family: string with get, set\r\n\r\n//        abstract size: float with get, set\r\n//        abstract color: Color with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type ColorBar =\r\n//        abstract thicknessmode: SizeMode with get, set\r\n//        abstract thickness: float with get, set\r\n//        abstract lenmode: SizeMode with get, set\r\n//        abstract len: float with get, set\r\n//        abstract x: float with get, set\r\n//        abstract xanchor: XAnchor with get, set\r\n//        abstract xpad: float with get, set\r\n//        abstract y: float with get, set\r\n//        abstract yanchor: YAnchor with get, set\r\n//        abstract ypad: float with get, set\r\n//        abstract outlinecolor: Color with get, set\r\n//        abstract outlinewidth: float with get, set\r\n//        abstract bordercolor: Color with get, set\r\n//        abstract borderwidth: Color with get, set\r\n//        abstract bgcolor: Color with get, set\r\n//        abstract tickmode: TickMode with get, set\r\n//        abstract nticks: float with get, set\r\n//        abstract tick0: U2<float, string> with get, set\r\n//        abstract dtick: U2<float, string> with get, set\r\n//        abstract tickvals: U4<ResizeArray<Datum>, ResizeArray<ResizeArray<Datum>>, ResizeArray<ResizeArray<ResizeArray<Datum>>>, 'T []> with get, set\r\n//        abstract ticktext: U4<ResizeArray<Datum>, ResizeArray<ResizeArray<Datum>>, ResizeArray<ResizeArray<ResizeArray<Datum>>>, 'T []> with get, set\r\n//        abstract ticks: Ticks with get, set\r\n//        abstract ticklen: float with get, set\r\n//        abstract tickwidth: float with get, set\r\n//        abstract tickcolor: Color with get, set\r\n//        abstract showticklabels: bool with get, set\r\n//        abstract tickfont: Font with get, set\r\n//        abstract tickangle: float with get, set\r\n//        abstract tickformat: string with get, set\r\n//        abstract tickformatstops: TickFormatStops with get, set\r\n//        abstract tickprefix: string with get, set\r\n//        abstract showtickprefix: ShowOptions with get, set\r\n//        abstract ticksuffix: string with get, set\r\n//        abstract showticksuffix: ShowOptions with get, set\r\n//        abstract separatethousands: bool with get, set\r\n//        abstract exponentformat: ExponentFormat with get, set\r\n//        abstract showexponent: ShowOptions with get, set\r\n//        abstract title: string with get, set\r\n//        abstract titlefont: Font with get, set\r\n//        abstract titleside: ColorBar.TitleSide with get, set\r\n//        abstract tickvalssrc: obj option with get, set\r\n//        abstract ticktextsrc: obj option with get, set\r\n\r\n//    /// Any combination of \"x\", \"y\", \"z\", \"text\", \"name\" joined with a \"+\" OR \"all\" or \"none\" or \"skip\".\r\n//    /// examples: \"x\", \"y\", \"x+y\", \"x+y+z\", \"all\"\r\n//    /// default: \"all\"\r\n//    [<AllowNullLiteral>]\r\n//    type PlotMarker =\r\n//        abstract symbol: U2<string, ResizeArray<string>> with get, set\r\n//        abstract color: U2<Color, ResizeArray<Color>> with get, set\r\n//        abstract colors: ResizeArray<Color> with get, set\r\n//        abstract colorscale: ColorScale with get, set\r\n//        abstract cauto: bool with get, set\r\n//        abstract cmax: float with get, set\r\n//        abstract cmin: float with get, set\r\n//        abstract autocolorscale: bool with get, set\r\n//        abstract reversescale: bool with get, set\r\n//        abstract opacity: U2<float, ResizeArray<float>> with get, set\r\n//        abstract size: U2<float, ResizeArray<float>> with get, set\r\n//        abstract maxdisplayed: float with get, set\r\n//        abstract sizeref: float with get, set\r\n//        abstract sizemax: float with get, set\r\n//        abstract sizemin: float with get, set\r\n//        abstract sizemode: MarkerSizeMode with get, set\r\n//        abstract showscale: bool with get, set\r\n//        abstract line: obj with get, set\r\n//        abstract width: float with get, set\r\n//        abstract colorbar: ColorBar with get, set\r\n//        abstract gradient: Gradient with get, set\r\n\r\n//    type ScatterMarker = PlotMarker\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type ScatterMarkerLine =\r\n//        abstract width: U2<float, ResizeArray<float>> with get, set\r\n//        abstract color: Color with get, set\r\n//        abstract colorscale: ColorScale with get, set\r\n//        abstract cauto: bool with get, set\r\n//        abstract cmax: float with get, set\r\n//        abstract cmin: float with get, set\r\n//        abstract autocolorscale: bool with get, set\r\n//        abstract reversescale: bool with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type ScatterLine =\r\n//        abstract color: Color with get, set\r\n//        abstract width: float with get, set\r\n//        abstract dash: Dash with get, set\r\n//        abstract shape: LineShape with get, set\r\n//        abstract smoothing: float with get, set\r\n//        abstract simplify: bool with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type Edits =\r\n//        abstract annotationPosition: bool with get, set\r\n//        abstract annotationTail: bool with get, set\r\n//        abstract annotationText: bool with get, set\r\n//        abstract axisTitleText: bool with get, set\r\n//        abstract colorbarPosition: bool with get, set\r\n//        abstract colorbarTitleText: bool with get, set\r\n//        abstract legendPosition: bool with get, set\r\n//        abstract legendText: bool with get, set\r\n//        abstract shapePosition: bool with get, set\r\n//        abstract titleText: bool with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type Icon =\r\n//        abstract width: float with get, set\r\n//        abstract path: string with get, set\r\n//        abstract ascent: float with get, set\r\n//        abstract descent: float with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type ModeBarButton =\r\n//        /// name / id of the buttons (for tracking)\r\n//        abstract name: string with get, set\r\n//        /// text that appears while hovering over the button,\r\n//        /// enter null, false or '' for no hover text\r\n//        abstract title: string with get, set\r\n//        /// svg icon object associated with the button\r\n//        /// can be linked to Plotly.Icons to use the default plotly icons\r\n//        abstract icon: U2<string, Icon> with get, set\r\n//        /// icon positioning\r\n//        abstract gravity: string option with get, set\r\n//        /// click handler associated with the button, a function of\r\n//        /// 'gd' (the main graph object) and\r\n//        /// 'ev' (the event object)\r\n//        abstract click: (HTMLElement * MouseEvent -> unit) with get, set\r\n//        /// attribute associated with button,\r\n//        /// use this with 'val' to keep track of the state\r\n//        abstract attr: string option with get, set\r\n//        /// initial 'attr' value, can be a function of gd\r\n//        abstract ``val``: obj option with get, set\r\n//        /// is the button a toggle button?\r\n//        abstract toggle: bool option with get, set\r\n\r\n//    [<RequireQualifiedAccess; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\r\n//    module Config =\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type DoubleClick =\r\n//            | Autosize\r\n//            | Reset\r\n//            | [<CompiledName \"reset+autosize\">] ResetAndAutosize\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type DisplayModeBar = Hover\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type Config =\r\n//        /// override the defaults for the toImageButton\r\n//        abstract toImageButtonOptions: Image with get, set\r\n\r\n\r\n//        /// no interactivity, for export or image generation\r\n//        abstract staticPlot: bool with get, set\r\n\r\n\r\n//        /// we can edit titles, move annotations, etc\r\n//        abstract editable: bool with get, set\r\n\r\n//        abstract edits: Edits with get, set // Partial<Edits>\r\n//        /// DO autosize once regardless of layout.autosize (use default width or height values otherwise)\r\n//        abstract autosizable: bool with get, set\r\n//        /// set the length of the undo/redo queue\r\n//        abstract queueLength: float with get, set\r\n//        /// if we DO autosize, do we fill the container or the screen?\r\n//        abstract fillFrame: bool with get, set\r\n//        /// if we DO autosize, set the frame margins in percents of plot size\r\n//        abstract frameMargins: float with get, set\r\n//        /// mousewheel or two-finger scroll zooms the plot\r\n//        abstract scrollZoom: bool with get, set\r\n//        /// double click interaction (false, 'reset', 'autosize' or 'reset+autosize')\r\n//        abstract doubleClick: Config.DoubleClick with get, set\r\n//        /// new users see some hints about interactivity\r\n//        abstract showTips: bool with get, set\r\n//        /// enable axis pan/zoom drag handles\r\n//        abstract showAxisDragHandles: bool with get, set\r\n//        /// enable direct range entry at the pan/zoom drag points (drag handles must be enabled above)\r\n//        abstract showAxisRangeEntryBoxes: bool with get, set\r\n//        /// link to open this plot in plotly\r\n//        abstract showLink: bool with get, set\r\n//        /// if we show a link, does it contain data or just link to a plotly file?\r\n//        abstract sendData: bool with get, set\r\n//        /// text appearing in the sendData link\r\n//        abstract linkText: string with get, set\r\n//        /// false or function adding source(s) to linkText <text>\r\n//        abstract showSources: bool with get, set\r\n//        /// display the mode bar (true, false, or 'hover')\r\n//        abstract displayModeBar: U2<Config.DisplayModeBar, bool> with get, set\r\n//        /// remove mode bar button by name (see ./components/modebar/buttons.js for the list of names)\r\n//        abstract modeBarButtonsToRemove: ResizeArray<ModeBarDefaultButtons> with get, set\r\n//        /// add mode bar button using config objects (see ./components/modebar/buttons.js for list of arguments)\r\n//        abstract modeBarButtonsToAdd: U2<ResizeArray<ModeBarDefaultButtons>, ResizeArray<ModeBarButton>> with get, set\r\n//        /// fully custom mode bar buttons as nested array, where the outer\r\n//        /// arrays represents button groups, and the inner arrays have\r\n//        /// buttons config objects or names of default buttons\r\n//        /// (see ./components/modebar/buttons.js for more info)\r\n//        abstract modeBarButtons: U3<ResizeArray<ResizeArray<ModeBarDefaultButtons>>, ResizeArray<ResizeArray<ModeBarButton>>, obj> with get, set\r\n//        /// add the plotly logo on the end of the mode bar\r\n//        abstract displaylogo: bool with get, set\r\n//        /// increase the pixel ratio for Gl plot images\r\n//        abstract plotGlPixelRatio: float with get, set\r\n//        /// function to add the background color to a different container\r\n//        /// or 'opaque' to ensure there's white behind it\r\n//        /// or 'transparent'\r\n//        abstract setBackground: (unit -> string) with get, set\r\n//        /// URL to topojson files used in geo charts\r\n//        abstract topojsonURL: string with get, set\r\n//        /// Mapbox access token (required to plot mapbox trace types)\r\n//        /// If using an Mapbox Atlas server, set this option to '',\r\n//        /// so that plotly.js won't attempt to authenticate to the public Mapbox server.\r\n//        abstract mapboxAccessToken: string with get, set\r\n//        /// Turn all console logging on or off (errors will be thrown)\r\n//        /// This should ONLY be set via Plotly.setPlotConfig\r\n//        /// only accepts 0, 1, and 2\r\n//        abstract logging: U2<bool, float> with get, set\r\n//        /// Set global transform to be applied to all traces with no specification needed\r\n//        abstract globalTransforms: ResizeArray<Transform option> with get, set\r\n//        /// Which localization should we use? Should be a string like 'en' or 'en-US'\r\n//        abstract locale: string with get, set\r\n//        /// Make the chart responsive to window size\r\n//        abstract responsive: bool with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type RangeSlider =\r\n//        abstract visible: bool with get, set\r\n//        abstract thickness: float with get, set\r\n//        abstract range: Datum * Datum with get, set\r\n//        abstract borderwidth: float with get, set\r\n//        abstract bordercolor: string with get, set\r\n//        abstract bgcolor: string with get, set\r\n\r\n//    [<RequireQualifiedAccess; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\r\n//    module RangeSelectorButton =\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Step =\r\n//            | Second\r\n//            | Minute\r\n//            | Hour\r\n//            | Day\r\n//            | Month\r\n//            | Year\r\n//            | All\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type StepMode =\r\n//            | Backward\r\n//            | [<CompiledName \"todate\">] ToDate\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type RangeSelectorButton =\r\n//        abstract step: RangeSelectorButton.Step with get, set\r\n//        abstract stepmode: RangeSelectorButton.StepMode with get, set\r\n//        abstract count: float with get, set\r\n//        abstract label: string with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type RangeSelector =\r\n//        abstract buttons: RangeSelectorButton [] with get, set // Array<Partial<RangeSelectorButton>>\r\n//        abstract visible: bool with get, set\r\n//        abstract x: float with get, set\r\n//        abstract xanchor: XAnchorAuto with get, set\r\n//        abstract y: float with get, set\r\n//        abstract yanchor: YAnchorAuto with get, set\r\n//        abstract activecolor: string with get, set\r\n//        abstract borderwidth: float with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type Camera =\r\n//        abstract up: Point with get, set // Partial<Point>\r\n//        abstract center: Point with get, set // Partial<Point>\r\n//        abstract eye: Point with get, set // Partial<Point>\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type Label =\r\n//        /// Sets the background color of all hover labels on graph.\r\n//        abstract bgcolor: string with get, set\r\n//        /// Sets the border color of all hover labels on graph.\r\n//        abstract bordercolor: string with get, set\r\n//        /// Sets the default hover label font used by all traces on the graph.\r\n//        abstract font: Font with get, set // Partial<Font>\r\n\r\n//    [<RequireQualifiedAccess; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\r\n//    module HoverLabel =\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Align =\r\n//            | Left\r\n//            | Right\r\n//            | Auto\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type HoverLabel =\r\n//        inherit Label\r\n//        /// Sets the horizontal alignment of the text content within hover label box.\r\n//        abstract align: HoverLabel.Align with get, set\r\n//        /// Sets the default length (in number of characters) (default 15) of the trace name\r\n//        /// in the hover labels for all traces.\r\n//        /// -1 shows the whole name regardless of length.\r\n//        abstract namelength: float with get, set\r\n\r\n//    [<RequireQualifiedAccess; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\r\n//    module Image =\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Layer =\r\n//            | Below\r\n//            | Above\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Sizing =\r\n//            | Fill\r\n//            | Contain\r\n//            | Stretch\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type XAnchor =\r\n//            | Left\r\n//            | Center\r\n//            | Right\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type YAnchor =\r\n//            | Top\r\n//            | Middle\r\n//            | Bottom\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Xref =\r\n//            | X\r\n//            | Paper\r\n\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Yref =\r\n//            | Y\r\n//            | Paper\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type Image =\r\n//        abstract visible: bool with get, set\r\n//        abstract source: string with get, set\r\n//        abstract layer: Image.Layer with get, set\r\n//        abstract sizex: float with get, set\r\n//        abstract sizey: float with get, set\r\n//        abstract sizing: Image.Sizing with get, set\r\n//        abstract opacity: float with get, set\r\n//        abstract x: U2<float, string> with get, set\r\n//        abstract y: U2<float, string> with get, set\r\n//        abstract xanchor: Image.XAnchor with get, set\r\n//        abstract yanchor: Image.YAnchor with get, set\r\n//        abstract xref: Image.Xref with get, set\r\n//        abstract yref: Image.Yref with get, set\r\n\r\n//    [<StringEnum>]\r\n//    [<RequireQualifiedAccess>]\r\n//    type SceneAspectMode =\r\n//        | Auto\r\n//        | Cube\r\n//        | Data\r\n//        | Manual\r\n\r\n//    [<StringEnum>]\r\n//    [<RequireQualifiedAccess>]\r\n//    type SceneDragMode =\r\n//        | Orbit\r\n//        | Turntable\r\n//        | Zoom\r\n//        | Pan\r\n\r\n//    [<StringEnum>]\r\n//    [<RequireQualifiedAccess>]\r\n//    type SceneHoverMode = Closest\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type Domain =\r\n//        abstract x: ResizeArray<float> with get, set\r\n//        abstract y: ResizeArray<float> with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type Scene =\r\n//        abstract bgcolor: string with get, set\r\n//        abstract camera: Camera with get, set // Partial<Camera>\r\n//        abstract domain: Domain with get, set // Partial<Domain>\r\n//        abstract aspectmode: SceneAspectMode with get, set\r\n//        abstract aspectratio: Point with get, set // Partial<Point>\r\n//        abstract xaxis: SceneAxis with get, set // Partial<SceneAxis>\r\n//        abstract yaxis: SceneAxis with get, set // Partial<SceneAxis>\r\n//        abstract zaxis: SceneAxis with get, set // Partial<SceneAxis>\r\n//        abstract dragmode: U2<SceneDragMode, bool> with get, set\r\n//        abstract hovermode: U2<SceneHoverMode, bool> with get, set\r\n//        abstract annotations: U2<Annotations, Annotations []> with get, set // Partial<Annotations> | Array<Partial<Annotations>>\r\n//        abstract captureevents: bool with get, set\r\n\r\n//    [<RequireQualifiedAccess; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\r\n//    module Padding =\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type EditType = ArrayDraw\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type Padding =\r\n//        /// The amount of padding (in px) along the top of the component.\r\n//        abstract t: float with get, set\r\n\r\n//        /// The amount of padding (in px) on the right side of the component.\r\n//        abstract r: float with get, set\r\n\r\n//        /// The amount of padding (in px) along the bottom of the component.\r\n//        abstract b: float with get, set\r\n\r\n//        /// The amount of padding (in px) on the left side of the component.\r\n//        abstract l: float with get, set\r\n//        abstract editType: Padding.EditType with get, set\r\n\r\n//    [<RequireQualifiedAccess; CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\r\n//    module SliderStep =\r\n//        [<StringEnum; RequireQualifiedAccess>]\r\n//        type Method =\r\n//            | Animate\r\n//            | Relayout\r\n//            | Restyle\r\n//            | Skip\r\n//            | Update\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type SliderStep =\r\n//        /// Determines whether or not this step is included in the slider.\r\n//        abstract visible: bool with get, set\r\n//        /// Sets the Plotly method to be called when the slider value is changed.\r\n//        /// If the `skip` method is used, the API slider will function as normal\r\n//        /// but will perform no API calls and will not bind automatically to state\r\n//        /// updates. This may be used to create a component interface and attach to\r\n//        /// slider events manually via JavaScript.\r\n//        abstract method: SliderStep.Method with get, set\r\n//        /// Sets the arguments values to be passed to the Plotly\r\n//        /// method set in `method` on slide.\r\n//        abstract args: ResizeArray<obj option> with get, set\r\n//        /// Sets the text label to appear on the slider\r\n//        abstract label: string with get, set\r\n//        /// Sets the value of the slider step, used to refer to the step programatically.\r\n//        /// Defaults to the slider label if not provided.\r\n//        abstract value: string with get, set\r\n//        /// When true, the API method is executed. When false, all other behaviors are the same\r\n//        /// and command execution is skipped. This may be useful when hooking into, for example,\r\n//        /// the `plotly_sliderchange` method and executing the API command manually without losing\r\n//        /// the benefit of the slider automatically binding to the state of the plot through the\r\n//        /// specification of `method` and `args`.\r\n//        abstract execute: bool with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type SliderValue =\r\n//        /// Shows the currently-selected value above the slider.\r\n//        abstract visible: bool with get, set\r\n//        /// The alignment of the value readout relative to the length of the slider.\r\n//        abstract xanchor: XAnchor with get, set\r\n//        /// The amount of space, in pixels, between the current value label\r\n//        /// and the slider.\r\n//        abstract offset: float with get, set\r\n//        /// When currentvalue.visible is true, this sets the prefix of the label.\r\n//        abstract prefix: string with get, set\r\n//        /// When currentvalue.visible is true, this sets the suffix of the label.\r\n//        abstract suffix: string with get, set\r\n//        /// Sets the font of the current value label text.\r\n//        abstract font: Font with get, set // Partial<Font>\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type Slider =\r\n//        /// Determines whether or not the slider is visible.\r\n//        abstract visible: bool with get, set\r\n//        /// Determines which button (by index starting from 0) is\r\n//        /// considered active.\r\n//        abstract active: float with get, set\r\n//        abstract steps: SliderStep [] with get, set // Array<Partial<SliderStep>>\r\n//        /// Determines whether this slider length\r\n//        /// is set in units of plot *fraction* or in *pixels.\r\n//        /// Use `len` to set the value.\r\n//        abstract lenmode: SizeMode with get, set\r\n//        /// Sets the length of the slider\r\n//        /// This measure excludes the padding of both ends.\r\n//        /// That is, the slider's length is this length minus the\r\n//        /// padding on both ends.\r\n//        abstract len: float with get, set\r\n//        /// Sets the x position (in normalized coordinates) of the slider.\r\n//        abstract x: float with get, set\r\n//        /// Sets the y position (in normalized coordinates) of the slider.\r\n//        abstract y: float with get, set\r\n//        /// Set the padding of the slider component along each side.\r\n//        abstract pad: Padding with get, set // Partial<Padding>\r\n//        /// Sets the slider's horizontal position anchor.\r\n//        /// This anchor binds the `x` position to the *left*, *center*\r\n//        /// or *right* of the range selector.\r\n//        abstract xanchor: XAnchorAuto with get, set\r\n//        /// Sets the slider's vertical position anchor\r\n//        /// This anchor binds the `y` position to the *top*, *middle*\r\n//        /// or *bottom* of the range selector.\r\n//        abstract yanchor: YAnchorAuto with get, set\r\n//        abstract transition: Transition with get, set\r\n//        abstract currentvalue: SliderValue with get, set\r\n//        /// Sets the font of the slider step labels.\r\n//        abstract font: Font with get, set\r\n//        /// Sets the background color of the slider grip\r\n//        /// while dragging.\r\n//        abstract activebgcolor: Color with get, set\r\n//        /// Sets the background color of the slider.\r\n//        abstract bgcolor: Color with get, set\r\n//        /// Sets the color of the border enclosing the slider.\r\n//        abstract bordercolor: Color with get, set\r\n//        /// Sets the width (in px) of the border enclosing the slider.\r\n//        abstract borderwidth: float with get, set\r\n//        /// Sets the length in pixels of step tick marks\r\n//        abstract ticklen: float with get, set\r\n//        /// Sets the color of the border enclosing the slider.\r\n//        abstract tickcolor: Color with get, set\r\n//        /// Sets the tick width (in px).\r\n//        abstract tickwidth: float with get, set\r\n//        /// Sets the length in pixels of minor step tick marks\r\n//        abstract minorticklen: float with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type LegendClickEvent =\r\n//        abstract event: MouseEvent with get, set\r\n//        abstract node: HTMLElement with get, set\r\n//        abstract curveNumber: float with get, set\r\n//        abstract expandedIndex: float with get, set\r\n//        abstract data: ResizeArray<Data> with get, set\r\n//        abstract layout: Layout with get, set\r\n//        abstract frames: ResizeArray<Frame> with get, set\r\n//        abstract config: Config with get, set\r\n//        abstract fullData: ResizeArray<Data> with get, set //what?\r\n//        abstract fullLayout: Layout with get, set //what?\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type SliderChangeEvent =\r\n//        abstract slider: Slider with get, set\r\n//        abstract step: SliderStep with get, set\r\n//        abstract interaction: bool with get, set\r\n//        abstract previousActive: float with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type SliderStartEvent =\r\n//        abstract slider: Slider with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type SliderEndEvent =\r\n//        abstract slider: Slider with get, set\r\n//        abstract step: SliderStep with get, set\r\n\r\n//    [<AllowNullLiteral>]\r\n//    type BeforePlotEvent =\r\n//        abstract data: ResizeArray<Data> with get, set\r\n//        abstract layout: Layout with get, set\r\n//        abstract config: Layout with get, set\r\n","namespace Fable.React\n\nopen Fable.Core\nopen Fable.Core.JsInterop\nopen Browser\nopen Props\n\n#if !FABLE_COMPILER\ntype HTMLNode =\n    | Text of string\n    | RawText of string\n    | Node of string * IProp seq * ReactElement seq\n    | List of ReactElement seq\n    | Empty\nwith interface ReactElement\n\ntype ServerElementType =\n    | Tag\n    | Fragment\n    | Component\n\ntype ReactElementTypeWrapper<'P> =\n    | Comp of obj\n    | Fn of ('P -> ReactElement)\n    | HtmlTag of string\n    interface ReactElementType<'P>\n\n[<RequireQualifiedAccess>]\nmodule ServerRendering =\n    let [<Literal>] private ChildrenName = \"children\"\n\n    let private createServerElementPrivate(tag: obj, props: obj, children: ReactElement seq, elementType: ServerElementType) =\n        match elementType with\n        | ServerElementType.Tag ->\n            HTMLNode.Node (string tag, props :?> IProp seq, children) :> ReactElement\n        | ServerElementType.Fragment ->\n            HTMLNode.List children :> ReactElement\n        | ServerElementType.Component ->\n            let tag = tag :?> System.Type\n            let comp = System.Activator.CreateInstance(tag, props)\n            let childrenProp = tag.GetProperty(ChildrenName)\n            childrenProp.SetValue(comp, children |> Seq.toArray)\n            let render = tag.GetMethod(\"render\")\n            render.Invoke(comp, null) :?> ReactElement\n\n    let private createServerElementByFnPrivate(f, props, children) =\n        let propsType = props.GetType()\n        let props =\n            if propsType.GetProperty (ChildrenName) |> isNull then\n                props\n            else\n                let values = ResizeArray<obj> ()\n                let properties = propsType.GetProperties()\n                for p in properties do\n                    if p.Name = ChildrenName then\n                        values.Add (children |> Seq.toArray)\n                    else\n                        values.Add (FSharp.Reflection.FSharpValue.GetRecordField(props, p))\n                FSharp.Reflection.FSharpValue.MakeRecord(propsType, values.ToArray()) :?> 'P\n        f props\n\n    // In most cases these functions are inlined (mainly for Fable optimizations)\n    // so we create a proxy to avoid inlining big functions every time\n\n    let createServerElement(tag: obj, props: obj, children: ReactElement seq, elementType: ServerElementType) =\n        createServerElementPrivate(tag, props, children, elementType)\n\n    let createServerElementByFn(f, props, children) =\n        createServerElementByFnPrivate(f, props, children)\n#endif\n\n[<RequireQualifiedAccess>]\n[<CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\nmodule ReactElementType =\n    let inline ofComponent<'comp, 'props, 'state when 'comp :> Component<'props, 'state>> : ReactElementType<'props> =\n#if FABLE_REPL_LIB\n        failwith \"Cannot create React components from types in Fable REPL\"\n#else\n#if FABLE_COMPILER\n        jsConstructor<'comp> |> unbox\n#else\n        Comp (typeof<'comp>) :> _\n#endif\n#endif\n\n    let inline ofFunction<'props> (f: 'props -> ReactElement): ReactElementType<'props> =\n#if FABLE_COMPILER\n        f |> unbox\n#else\n        Fn f :> _\n#endif\n\n    let inline ofHtmlElement<'props> (name: string): ReactElementType<'props> =\n#if FABLE_COMPILER\n        unbox name\n#else\n        HtmlTag name :> ReactElementType<'props>\n#endif\n\n    /// Create a ReactElement to be rendered from an element type, props and children\n    let inline create<'props> (comp: ReactElementType<'props>) (props: 'props) (children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n        ReactBindings.React.createElement(comp, props, children)\n#else\n        match (comp :?> ReactElementTypeWrapper<'props>) with\n        | Comp obj -> ServerRendering.createServerElement(obj, props, children, ServerElementType.Component)\n        | Fn f -> ServerRendering.createServerElementByFn(f, props, children)\n        | HtmlTag obj -> ServerRendering.createServerElement(obj, props, children, ServerElementType.Tag)\n#endif\n\n    /// React.memo is a higher order component. It’s similar to React.PureComponent but for function components instead of classes.\n    /// If your function component renders the same result given the same props, you can wrap it in a call to React.memo.\n    /// React will skip rendering the component, and reuse the last rendered result.\n    /// By default it will only shallowly compare complex objects in the props object. If you want control over the comparison, you can use `memoWith`.\n    let memo<'props> (render: 'props -> ReactElement) =\n#if FABLE_COMPILER\n        ReactBindings.React.memo(render, unbox null)\n#else\n        ofFunction render\n#endif\n\n    /// React.memo is a higher order component. It’s similar to React.PureComponent but for function components instead of classes.\n    /// If your function renders the same result given the \"same\" props (according to `areEqual`), you can wrap it in a call to React.memo.\n    /// React will skip rendering the component, and reuse the last rendered result.\n    /// By default it will only shallowly compare complex objects in the props object. If you want control over the comparison, you can use `memoWith`.\n    /// This version allow you to control the comparison used instead of the default shallow one by provide a custom comparison function.\n    let memoWith<'props> (areEqual: 'props -> 'props -> bool) (render: 'props -> ReactElement) =\n#if FABLE_COMPILER\n        ReactBindings.React.memo(render, areEqual)\n#else\n        ofFunction render\n#endif\n\n\n[<AutoOpen>]\nmodule Helpers =\n    [<System.Obsolete(\"Use ReactBindings.React.createElement\")>]\n    let inline createElement(comp: obj, props: obj, [<ParamList>] children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n        ReactBindings.React.createElement(comp, props, children)\n#else\n        HTMLNode.Empty :> _\n#endif\n\n    /// Instantiate a component from a type inheriting React.Component\n    /// Example: `ofType<MyComponent,_,_> { myProps = 5 } []`\n    let inline ofType<'T,'P,'S when 'T :> Component<'P,'S>> (props: 'P) (children: ReactElement seq): ReactElement =\n        ReactElementType.create ReactElementType.ofComponent<'T,_,_> props children\n\n    [<System.Obsolete(\"Use ofType\")>]\n    let inline com<'T,'P,'S when 'T :> Component<'P,'S>> (props: 'P) (children: ReactElement seq): ReactElement =\n        ofType<'T, 'P, 'S> props children\n\n    let inline ofFunction<'P> (f: 'P -> ReactElement) (props: 'P) (children: ReactElement seq): ReactElement =\n        ReactElementType.create (ReactElementType.ofFunction f) props children\n\n    /// Instantiate an imported React component. The first two arguments must be string literals, \"default\" can be used for the first one.\n    /// Example: `ofImport \"Map\" \"leaflet\" { x = 10; y = 50 } []`\n    let inline ofImport<'P> (importMember: string) (importPath: string) (props: 'P) (children: ReactElement seq): ReactElement =\n#if FABLE_REPL_LIB\n        failwith \"Cannot import React components in Fable REPL\"\n#else\n#if FABLE_COMPILER\n        ReactBindings.React.createElement(import importMember importPath, props, children)\n#else\n        failwith \"Cannot import React components in .NET\"\n#endif\n#endif\n\n#if FABLE_COMPILER\n    [<Emit(\"typeof $0 === 'function'\")>]\n    let private isFunction (x: obj): bool = jsNative\n\n    [<Emit(\"typeof $0 === 'object' && !$0[Symbol.iterator]\")>]\n    let private isNonEnumerableObject (x: obj): bool = jsNative\n#endif\n\n    /// Normal structural F# comparison, but ignores top-level functions (e.g. Elmish dispatch).\n    /// Can be used e.g. with the `FunctionComponent.Of` `memoizeWith` parameter.\n    let equalsButFunctions (x: 'a) (y: 'a) =\n#if FABLE_COMPILER\n        if obj.ReferenceEquals(x, y) then\n            true\n        elif isNonEnumerableObject x && not(isNull(box y)) then\n            let keys = JS.Object.keys x\n            let length = keys.Count\n            let mutable i = 0\n            let mutable result = true\n            while i < length && result do\n                let key = keys.[i]\n                i <- i + 1\n                let xValue = x?(key)\n                result <- isFunction xValue || xValue = y?(key)\n            result\n        else\n            (box x) = (box y)\n#else\n        // Server rendering, won't be actually used\n        // Avoid `x = y` because it will force 'a to implement structural equality\n        false\n#endif\n\n    /// Comparison similar to default React.memo, but ignores functions (e.g. Elmish dispatch).\n    /// Performs a memberwise comparison where value types and strings are compared by value,\n    /// and other types by reference.\n    /// Can be used e.g. with the `FunctionComponent.Of` `memoizeWith` parameter.\n    let memoEqualsButFunctions (x: 'a) (y: 'a) =\n#if FABLE_COMPILER\n        if obj.ReferenceEquals(x, y) then\n            true\n        elif isNonEnumerableObject x && not(isNull(box y)) then\n            let keys = JS.Object.keys x\n            let length = keys.Count\n            let mutable i = 0\n            let mutable result = true\n            while i < length && result do\n                let key = keys.[i]\n                i <- i + 1\n                let xValue = x?(key)\n                result <- isFunction xValue || obj.ReferenceEquals(xValue, y?(key))\n            result\n        else\n            false\n#else\n        // Server rendering, won't be actually used\n        // Avoid `x = y` because it will force 'a to implement structural equality\n        false\n#endif\n\n    [<System.Obsolete(\"Use FunctionComponent.Of with memoizeWith\")>]\n    let memoBuilder<'props> (name: string) (render: 'props -> ReactElement) : 'props -> ReactElement =\n#if FABLE_COMPILER\n        render?displayName <- name\n#endif\n        let memoType = ReactElementType.memo render\n        fun props ->\n            ReactElementType.create memoType props []\n\n    [<System.Obsolete(\"Use FunctionComponent.Of with memoizeWith\")>]\n    let memoBuilderWith<'props> (name: string) (areEqual: 'props -> 'props -> bool) (render: 'props -> ReactElement) : 'props -> ReactElement =\n#if FABLE_COMPILER\n        render?displayName <- name\n#endif\n        let memoType = ReactElementType.memoWith areEqual render\n        fun props ->\n            ReactElementType.create memoType props []\n\n    [<System.Obsolete(\"Use ReactElementType.create\")>]\n    let inline from<'P> (com: ReactElementType<'P>) (props: 'P) (children: ReactElement seq): ReactElement =\n        ReactElementType.create com props children\n\n    /// Alias of `ofString`\n    let inline str (s: string): ReactElement =\n#if FABLE_COMPILER\n        unbox s\n#else\n        HTMLNode.Text s :> ReactElement\n#endif\n\n    /// Cast a string to a React element (erased in runtime)\n    let inline ofString (s: string): ReactElement =\n        str s\n\n    /// Cast an option value to a React element (erased in runtime)\n    let inline ofOption (o: ReactElement option): ReactElement =\n        match o with Some o -> o | None -> null // Option.toObj(o)\n\n    [<System.Obsolete(\"Use ofOption\")>]\n    let opt (o: ReactElement option): ReactElement =\n        ofOption o\n\n    /// Cast an int to a React element (erased in runtime)\n    let inline ofInt (i: int): ReactElement =\n#if FABLE_COMPILER\n        unbox i\n#else\n        HTMLNode.RawText (string i) :> ReactElement\n#endif\n\n    /// Cast a float to a React element (erased in runtime)\n    let inline ofFloat (f: float): ReactElement =\n#if FABLE_COMPILER\n        unbox f\n#else\n        HTMLNode.RawText (string f) :> ReactElement\n#endif\n\n    /// Returns a list **from .render() method**\n    let inline ofList (els: ReactElement list): ReactElement =\n#if FABLE_COMPILER\n        unbox(List.toArray els)\n#else\n        HTMLNode.List els :> ReactElement\n#endif\n\n    /// Returns an array **from .render() method**\n    let inline ofArray (els: ReactElement array): ReactElement =\n#if FABLE_COMPILER\n        unbox els\n#else\n        HTMLNode.List els :> ReactElement\n#endif\n\n    /// A ReactElement when you don't want to render anything (null in javascript)\n    let nothing: ReactElement =\n#if FABLE_COMPILER\n        null\n#else\n        HTMLNode.Empty :> ReactElement\n#endif\n\n    /// Instantiate a DOM React element\n    let inline domEl (tag: string) (props: IHTMLProp seq) (children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n        ReactBindings.React.createElement(tag, keyValueList CaseRules.LowerFirst props, children)\n#else\n        ServerRendering.createServerElement(tag, (props |> Seq.cast<IProp>), children, ServerElementType.Tag)\n#endif\n\n    /// Instantiate a DOM React element (void)\n    let inline voidEl (tag: string) (props: IHTMLProp seq) : ReactElement =\n#if FABLE_COMPILER\n        ReactBindings.React.createElement(tag, keyValueList CaseRules.LowerFirst props, [])\n#else\n        ServerRendering.createServerElement(tag, (props |> Seq.cast<IProp>), [], ServerElementType.Tag)\n#endif\n\n    /// Instantiate an SVG React element\n    let inline svgEl (tag: string) (props: IProp seq) (children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n        ReactBindings.React.createElement(tag, keyValueList CaseRules.LowerFirst props, children)\n#else\n        ServerRendering.createServerElement(tag, (props |> Seq.cast<IProp>), children, ServerElementType.Tag)\n#endif\n\n    /// Instantiate a React fragment\n    let inline fragment (props: IFragmentProp seq) (children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n        ReactBindings.React.createElement(ReactBindings.React.Fragment, keyValueList CaseRules.LowerFirst props, children)\n#else\n        ServerRendering.createServerElement(typeof<Fragment>, (props |> Seq.cast<IProp>), children, ServerElementType.Fragment)\n#endif\n\n    /// Accepts a context value to be passed to consuming components that are descendants of this Provider.\n    /// One Provider can be connected to many consumers. Providers can be nested to override values deeper within the tree.\n    /// Important: In SSR, this is ignored, and the DEFAULT value is consumed!\n    /// More info at https://reactjs.org/docs/context.html#contextprovider\n    let inline contextProvider (ctx: IContext<'T>) (value: 'T) (children: ReactElement seq): ReactElement =\n#if FABLE_COMPILER\n        ReactBindings.React.createElement(ctx?Provider, createObj [\"value\" ==> value], children)\n#else\n        fragment [] children\n#endif\n\n    /// Consumes a context value, either from the nearest parent in the tree, or from the default value.\n    /// Important: in SSR, this will always consume the context DEFAULT value!\n    /// More info at https://reactjs.org/docs/context.html#contextconsumer\n    let inline contextConsumer (ctx: IContext<'T>) (children: 'T -> ReactElement): ReactElement =\n#if FABLE_COMPILER\n        ReactBindings.React.createElement(ctx?Consumer, null, [!!children])\n#else\n        let ctx = ctx :?> ISSRContext<_>\n        fragment [] [children(ctx.DefaultValue)]\n#endif\n\n    /// Creates a Context object. When React renders a component that subscribes to this Context\n    /// object it will read the current context value from the closest matching Provider above it\n    /// in the tree. More info at https://reactjs.org/docs/context.html#reactcreatecontext\n    let inline createContext (defaultValue: 'T): IContext<'T> =\n#if FABLE_COMPILER\n        ReactBindings.React.createContext(defaultValue)\n#else\n        upcast { new ISSRContext<_> with member __.DefaultValue = defaultValue }\n#endif\n\n    /// To be used in constructors of class components\n    /// (for function components use `useRef` hook)\n    let inline createRef (initialValue: 'T): IRefValue<'T> =\n#if FABLE_COMPILER\n        ReactBindings.React.createRef(initialValue)\n#else\n        { new IRefValue<_> with\n            member __.current with get() = initialValue and set _ = () }\n#endif\n\n    // Class list helpers\n    let classBaseList baseClass classes =\n        classes\n        |> Seq.choose (fun (name, condition) ->\n            if condition && not(System.String.IsNullOrEmpty(name)) then Some name\n            else None)\n        |> Seq.fold (fun state name -> state + \" \" + name) baseClass\n        |> ClassName\n\n    let classList classes = classBaseList \"\" classes\n\n    /// Finds a DOM element by its ID and mounts the React element there\n    /// Important: Not available in SSR\n    let inline mountById (domElId: string) (reactEl: ReactElement): unit =\n#if FABLE_COMPILER\n        ReactDom.render(reactEl, document.getElementById(domElId))\n#else\n        failwith \"mountById is not available for SSR\"\n#endif\n    /// Finds the first DOM element matching a CSS selector and mounts the React element there\n    /// Important: Not available in SSR\n    let inline mountBySelector (domElSelector: string) (reactEl: ReactElement): unit =\n#if FABLE_COMPILER\n        ReactDom.render(reactEl, document.querySelector(domElSelector))\n#else\n        failwith \"mountBySelector is not available for SSR\"\n#endif\n","namespace Fable.React\n\nopen Fable.Core\nopen Fable.Core.JsInterop\n\ntype FunctionComponent<'Props> = 'Props -> ReactElement\ntype LazyFunctionComponent<'Props> = 'Props -> ReactElement\n\ntype FunctionComponent =\n#if !FABLE_REPL_LIB\n    /// Creates a lazy React component from a function in another file\n    /// ATTENTION: Requires fable-compiler 2.3, pass the external reference\n    /// directly to the argument position (avoid pipes)\n    static member inline Lazy(f: 'Props -> ReactElement,\n                                fallback: ReactElement)\n                            : LazyFunctionComponent<'Props> =\n#if FABLE_COMPILER\n        let elemType = ReactBindings.React.``lazy``(fun () ->\n            // React.lazy requires a default export\n            (importValueDynamic f).``then``(fun x -> createObj [\"default\" ==> x]))\n        fun props ->\n            ReactElementType.create\n                ReactBindings.React.Suspense\n                (createObj [\"fallback\" ==> fallback])\n                [ReactElementType.create elemType props []]\n#else\n        fun _ ->\n            div [] [] // React.lazy is not compatible with SSR, so just use an empty div\n#endif\n#endif\n\n    /// Creates a function React component that can use hooks to manage the component's life cycle,\n    /// and is displayed in React dev tools (use `displayName` to customize the name).\n    /// Uses React.memo if `memoizeWith` is specified (check `equalsButFunctions` and `memoEqualsButFunctions` helpers).\n    /// When you need a key to optimize collections in React you can use `withKey` argument or define a `key` field in the props object.\n    static member Of(render: 'Props->ReactElement,\n                       ?displayName: string,\n                       ?memoizeWith: 'Props -> 'Props -> bool,\n                       ?withKey: 'Props -> string)\n                    : FunctionComponent<'Props> =\n#if FABLE_COMPILER\n        match displayName with\n        | Some name -> render?displayName <- name\n        | None -> ()\n#endif\n        let elemType =\n            match memoizeWith with\n            | Some areEqual ->\n                let memoElement = ReactElementType.memoWith areEqual render\n#if FABLE_COMPILER\n                match displayName with\n                | Some name -> memoElement?displayName <- \"Memo(\" + name + \")\"\n                | None -> ()\n#endif\n                memoElement\n            | None -> ReactElementType.ofFunction render\n        fun props ->\n#if FABLE_COMPILER\n            let props =\n                match withKey with\n                | Some f -> props?key <- f props; props\n                | None -> props\n#endif\n            ReactElementType.create elemType props []\n","import { useEffect as useEffectReact } from 'react';\nexport var useEffect = function useEffect(getDisposable) {\n  useEffectReact(function () {\n    var disposable = getDisposable();\n    return function () {\n      disposable.Dispose();\n    };\n  });\n};\nexport var useEffectWithDeps = function useEffectWithDeps(getDisposable, deps) {\n  useEffectReact(function () {\n    var disposable = getDisposable();\n    return function () {\n      disposable.Dispose();\n    };\n  }, deps);\n};","namespace Feliz\r\n\r\nopen System\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\n\r\nmodule internal ReactInterop =\r\n    let useEffectWithDeps (effect:  obj) (deps: obj) : unit = import \"useEffectWithDeps\" \"./ReactInterop.js\"\r\n    let useEffect (effect: obj) : unit =  import \"useEffect\" \"./ReactInterop.js\"\r\n\r\ntype React =\r\n    /// The `useState` hook that create a state variable for React function components.\r\n    static member useState<'t>(initial: 't) = Interop.reactApi.useState(initial)\r\n    static member useReducer(update, initialState) = Interop.reactApi.useReducer update initialState\r\n    /// The `useEffect` hook that creates a disposable effect for React function components\r\n    static member useEffect(effect: unit -> IDisposable) = ReactInterop.useEffect effect\r\n    static member useEffect(effect: unit -> IDisposable, a: 'a) =\r\n        ReactInterop.useEffectWithDeps effect [| a |]\r\n    /// The `useEffect` hook that creates an effect for React function components which re-evaluates the hook once the dependencies change.\r\n    static member useEffect(effect: unit -> IDisposable, a: 'a, b: 'b) =\r\n        ReactInterop.useEffectWithDeps effect [| unbox a; unbox b |]\r\n    /// The `useEffect` hook that creates an effect for React function components which re-evaluates the hook once the dependencies change.\r\n    static member useEffect(effect: unit -> IDisposable, a: 'a, b: 'b, c: 'c) =\r\n        ReactInterop.useEffectWithDeps effect [| unbox a; unbox b; unbox c |]\r\n    /// The `useEffect` hook that creates an effect for React function components which re-evaluates the hook once the dependencies change.\r\n    static member useEffect(effect: unit -> IDisposable, a: 'a, b: 'b, c: 'c, d: 'd) =\r\n        ReactInterop.useEffectWithDeps effect [| unbox a; unbox b; unbox c; unbox d |]\r\n    /// Creates a disposable instance by providing the implementation of the dispose member\r\n    static member createDisposable(dispose: unit -> unit) =\r\n        { new IDisposable with member this.Dispose() = dispose() }\r\n    /// The `useEffect` hook that creates an effect for React function components.\r\n    static member useEffect(effect: unit -> unit) =\r\n        ReactInterop.useEffectWithDeps\r\n            (fun _ ->\r\n                effect()\r\n                React.createDisposable(ignore))\r\n            [| |]\r\n    static member functionComponent(render: 'props -> Fable.React.ReactElement) =\r\n        Fable.React.FunctionComponent.Of(render=render, memoizeWith=Fable.React.Helpers.memoEqualsButFunctions)\r\n    static member functionComponent(name: string, render: 'props -> Fable.React.ReactElement) =\r\n        Fable.React.FunctionComponent.Of(displayName=name, render=render, memoizeWith=Fable.React.Helpers.memoEqualsButFunctions)","namespace Fable.SimpleHttp\r\n\r\nopen System\r\nopen Browser\r\nopen Browser.Types\r\nopen Fable.Core\r\n\r\n#if !FABLE_COMPILER\r\nopen System.Net.Http\r\n#endif\r\n\r\nmodule Blob =\r\n    /// Creates a Blob from the given input string\r\n    [<Emit(\"new Blob([$0], { 'mimeType':'text/plain' })\")>]\r\n    let fromText (value: string) : Blob = jsNative\r\n\r\n\r\n/// Utility functions to work with blob and file APIs.\r\nmodule FileReader =\r\n    /// Asynchronously reads the blob data content as string\r\n    let readBlobAsText (blob: Blob) : Async<string> =\r\n        Async.FromContinuations <| fun (resolve, _, _) ->\r\n            let reader = FileReader.Create()\r\n            reader.onload <- fun _ ->\r\n                if reader.readyState = FileReaderState.DONE\r\n                then resolve (unbox reader.result)\r\n\r\n            reader.readAsText(blob)\r\n\r\n    /// Asynchronously reads the blob data content as string\r\n    let readFileAsText (file: File) : Async<string> =\r\n        Async.FromContinuations <| fun (resolve, _, _) ->\r\n            let reader = FileReader.Create()\r\n            reader.onload <- fun _ ->\r\n                if reader.readyState = FileReaderState.DONE\r\n                then resolve (unbox reader.result)\r\n\r\n            reader.readAsText(file)\r\n\r\nmodule FormData =\r\n\r\n    [<Emit(\"new FormData()\")>]\r\n    /// Creates a new FormData object\r\n    let create() : FormData = jsNative\r\n\r\n    /// Appends a key-value pair to the form data\r\n    let append (key:string) (value:string) (form : FormData) : FormData =\r\n        form.append(key, value)\r\n        form\r\n\r\n    /// Appends a file to the form data\r\n    let appendFile (key: string) (file: File) (form: FormData) : FormData =\r\n        form.append (key, file)\r\n        form\r\n\r\n    /// Appends a named file to the form data\r\n    let appendNamedFile (key: string) (fileName: string) (file: File) (form: FormData) : FormData =\r\n        form.append (key, file, fileName)\r\n        form\r\n\r\n    /// Appends a blog to the form data\r\n    let appendBlob (key: string) (blob: Blob) (form: FormData) : FormData =\r\n        form.append (key, blob)\r\n        form\r\n\r\n    /// Appends a blog to the form data\r\n    let appendNamedBlob (key: string) (fileName: string) (blob: Blob) (form: FormData) : FormData =\r\n        form.append (key, blob, fileName)\r\n        form\r\n\r\nmodule Headers =\r\n    let contentType value = Header(\"Content-Type\", value)\r\n    let accept value = Header(\"Accept\", value)\r\n    let acceptCharset value = Header(\"Accept-Charset\", value)\r\n    let acceptEncoding value = Header(\"Accept-Encoding\", value)\r\n    let acceptLanguage value = Header(\"Accept-Language\", value)\r\n    let acceptDateTime value = Header(\"Accept-Datetime\", value)\r\n    let authorization value = Header(\"Authorization\", value)\r\n    let cacheControl value = Header(\"Cache-Control\", value)\r\n    let connection value = Header(\"Connection\", value)\r\n    let cookie value = Header(\"Cookie\", value)\r\n    let contentMD5 value = Header(\"Content-MD5\", value)\r\n    let date value = Header(\"Date\", value)\r\n    let expect value = Header(\"Expect\", value)\r\n    let ifMatch value = Header(\"If-Match\", value)\r\n    let ifModifiedSince value = Header(\"If-Modified-Since\", value)\r\n    let ifNoneMatch value = Header(\"If-None-Match\", value)\r\n    let ifRange value = Header(\"If-Range\", value)\r\n    let IfUnmodifiedSince value = Header(\"If-Unmodified-Since\", value)\r\n    let maxForwards value = Header(\"Max-Forwards\", value)\r\n    let origin value = Header (\"Origin\", value)\r\n    let pragma value = Header(\"Pragma\", value)\r\n    let proxyAuthorization value = Header(\"Proxy-Authorization\", value)\r\n    let range value = Header(\"Range\", value)\r\n    let referer value = Header(\"Referer\", value)\r\n    let userAgent value = Header(\"User-Agent\", value)\r\n    let create key value = Header(key, value)\r\n\r\nmodule Http =\r\n\r\n    let private defaultRequest =\r\n        { url = \"\";\r\n          method = HttpMethod.GET\r\n          headers = []\r\n          withCredentials = false\r\n          overridenMimeType = None\r\n          overridenResponseType = None\r\n          content = BodyContent.Empty }\r\n\r\n    let private emptyResponse =\r\n        { statusCode = 0\r\n          responseText = \"\"\r\n          responseType = \"\"\r\n          responseHeaders = Map.empty\r\n          content = ResponseContent.Text \"\" }\r\n\r\n    let private splitAt (delimiter: string) (input: string) : string [] =\r\n        if String.IsNullOrEmpty input then [| input |]\r\n        else input.Split([| delimiter |], StringSplitOptions.None)\r\n\r\n    let private serializeMethod = function\r\n        | HttpMethod.GET -> \"GET\"\r\n        | HttpMethod.POST -> \"POST\"\r\n        | HttpMethod.PATCH -> \"PATCH\"\r\n        | HttpMethod.PUT -> \"PUT\"\r\n        | HttpMethod.DELETE -> \"DELETE\"\r\n        | HttpMethod.OPTIONS -> \"OPTIONS\"\r\n        | HttpMethod.HEAD -> \"HEAD\"\r\n\r\n    /// Starts the configuration of the request with the specified url\r\n    let request (url: string) : HttpRequest =\r\n        { defaultRequest with url = url }\r\n\r\n    /// Sets the Http method of the request\r\n    let method httpVerb (req: HttpRequest) =\r\n        { req with method = httpVerb }\r\n\r\n    /// Appends a header to the request configuration\r\n    let header (singleHeader: Header) (req: HttpRequest) =\r\n        { req with headers = List.append req.headers [singleHeader] }\r\n\r\n    /// Appends a list of headers to the request configuration\r\n    let headers (values: Header list) (req: HttpRequest)  =\r\n        { req with headers = List.append req.headers values }\r\n\r\n    /// Enables cross-site credentials such as cookies\r\n    let withCredentials (enabled: bool) (req: HttpRequest) =\r\n        { req with withCredentials = enabled }\r\n\r\n    /// Specifies a MIME type other than the one provided by the server to be used instead when interpreting the data being transferred in a request. This may be used, for example, to force a stream to be treated and parsed as \"text/xml\", even if the server does not report it as such.\r\n    let overrideMimeType (value: string) (req: HttpRequest) =\r\n        { req with overridenMimeType = Some value }\r\n\r\n    /// Change the expected response type from the server\r\n    let overrideResponseType (value: ResponseTypes) (req: HttpRequest) =\r\n        { req with overridenResponseType = Some value }\r\n\r\n    /// Sets the body content of the request\r\n    let content (bodyContent: BodyContent) (req: HttpRequest) : HttpRequest =\r\n        { req with content = bodyContent }\r\n\r\n    /// Sends the request to the server, this function does not throw\r\n    let send (req: HttpRequest) : Async<HttpResponse> =\r\n#if FABLE_COMPILER\r\n        Async.FromContinuations <| fun (resolve, reject, _) ->\r\n            let xhr = XMLHttpRequest.Create()\r\n            xhr.``open``(serializeMethod req.method, req.url)\r\n            xhr.onreadystatechange <- fun _ ->\r\n                if xhr.readyState = ReadyState.Done\r\n                then resolve {\r\n                    responseText =\r\n                        match xhr.responseType with\r\n                        | \"\" -> xhr.responseText\r\n                        | \"text\" -> xhr.responseText\r\n                        | _ -> \"\"\r\n\r\n                    statusCode = int xhr.status\r\n                    responseType = xhr.responseType\r\n                    content =\r\n                        match xhr.responseType with\r\n                        | (\"\" | \"text\") -> ResponseContent.Text xhr.responseText\r\n                        | \"arraybuffer\" -> ResponseContent.ArrayBuffer (unbox xhr.response)\r\n                        | \"blob\" -> ResponseContent.Blob (unbox xhr.response)\r\n                        | _ -> ResponseContent.Unknown xhr.response\r\n\r\n                    responseHeaders =\r\n                        xhr.getAllResponseHeaders()\r\n                        |> splitAt \"\\r\\n\"\r\n                        |> Array.choose (fun headerLine ->\r\n                            let parts = splitAt \":\" headerLine\r\n                            match List.ofArray parts with\r\n                            | key :: rest ->  Some (key.ToLower(), (String.concat \":\" rest).Trim())\r\n                            | otherwise -> None)\r\n                        |> Map.ofArray\r\n                }\r\n\r\n            for (Header(key, value)) in req.headers do\r\n                xhr.setRequestHeader(key, value)\r\n\r\n            xhr.withCredentials <- req.withCredentials\r\n\r\n            match req.overridenMimeType with\r\n            | Some mimeType -> xhr.overrideMimeType(mimeType)\r\n            | None -> ()\r\n\r\n            match req.overridenResponseType with\r\n            | Some ResponseTypes.Text -> xhr.responseType <- \"text\"\r\n            | Some ResponseTypes.Blob -> xhr.responseType <- \"blob\"\r\n            | Some ResponseTypes.ArrayBuffer -> xhr.responseType <- \"arraybuffer\"\r\n            | None -> ()\r\n\r\n            match req.method, req.content with\r\n            | GET, _ -> xhr.send(None)\r\n            | _, BodyContent.Empty -> xhr.send(None)\r\n            | _, BodyContent.Text value -> xhr.send(value)\r\n            | _, BodyContent.Form formData -> xhr.send(formData)\r\n            | _, BodyContent.Binary blob -> xhr.send(blob)\r\n#else\r\n        async {\r\n            try\r\n                use requestMessage = new HttpRequestMessage()\r\n                requestMessage.RequestUri <- Uri(req.url)\r\n                requestMessage.Method <-\r\n                    match req.method with\r\n                    | HttpMethod.GET     -> HttpMethod.Get\r\n                    | HttpMethod.POST    -> HttpMethod.Post\r\n                    | HttpMethod.PUT     -> HttpMethod.Put\r\n                    | HttpMethod.PATCH   -> HttpMethod \"PATCH\"\r\n                    | HttpMethod.DELETE  -> HttpMethod.Delete\r\n                    | HttpMethod.HEAD    -> HttpMethod.Head\r\n                    | HttpMethod.OPTIONS -> HttpMethod.Options\r\n                req.headers\r\n                |> Seq.iter (fun (Header (key, value)) ->\r\n                    requestMessage.Headers.Add(key, value))\r\n                use content =\r\n                    match req.content with\r\n                    | BodyContent.Text text -> new StringContent(text)\r\n                    | BodyContent.Empty -> null\r\n                    | _ -> failwith \"Only BodyContent.Text is supported in the dotnet implementation\"\r\n                requestMessage.Content <- content\r\n\r\n                use client = new HttpClient()\r\n                let! response = client.SendAsync requestMessage |> Async.AwaitTask\r\n                let! responseBody = response.Content.ReadAsStringAsync() |> Async.AwaitTask\r\n\r\n                let headers =\r\n                    response.Headers\r\n                    |> Seq.choose (fun kv ->\r\n                        kv.Value\r\n                        |> Seq.tryLast\r\n                        |> Option.map (fun value -> kv.Key, value))\r\n                    |> Map.ofSeq\r\n\r\n                return\r\n                    { statusCode = int response.StatusCode\r\n                      responseText = responseBody\r\n                      responseType = \"text\"\r\n                      responseHeaders = headers\r\n                      content = ResponseContent.Text responseBody }\r\n            with\r\n            // We're catching a lot here to mimic the behaviour of the JS\r\n            // implementation, which isn't able to expose the kind of error.\r\n            | :? ArgumentException ->\r\n                return emptyResponse // invalid uri\r\n            | :? HttpRequestException\r\n            | :? AggregateException as aggrEx when (aggrEx.InnerException :? HttpRequestException) ->\r\n                return emptyResponse // connection errors\r\n        }\r\n#endif\r\n\r\n    /// Safely sends a GET request and returns a tuple(status code * response text). This function does not throw.\r\n    let get url : Async<int * string> =\r\n        async {\r\n            let! response =\r\n                request url\r\n                |> method HttpMethod.GET\r\n                |> send\r\n            return response.statusCode, response.responseText\r\n        }\r\n\r\n    /// Safely sends a PUT request and returns a tuple(status code * response text). This function does not throw.\r\n    let put url (data: string) : Async<int * string> =\r\n        async {\r\n            let! response =\r\n                request url\r\n                |> method HttpMethod.PUT\r\n                |> content (BodyContent.Text data)\r\n                |> send\r\n            return response.statusCode, response.responseText\r\n        }\r\n\r\n    /// Safely sends a DELETE request and returns a tuple(status code * response text). This function does not throw.\r\n    let delete url : Async<int * string> =\r\n        async {\r\n            let! response =\r\n                request url\r\n                |> method HttpMethod.DELETE\r\n                |> send\r\n            return response.statusCode, response.responseText\r\n        }\r\n\r\n    /// Safely sends a PUT request and returns a tuple(status code * response text). This function does not throw.\r\n    let patch url (data: string) : Async<int * string> =\r\n        async {\r\n            let! response =\r\n                request url\r\n                |> method HttpMethod.PATCH\r\n                |> content (BodyContent.Text data)\r\n                |> send\r\n            return response.statusCode, response.responseText\r\n        }\r\n\r\n    /// Safely sends a POST request and returns a tuple(status code * response text). This function does not throw.\r\n    let post url (data: string) : Async<int * string> =\r\n        async {\r\n            let! response =\r\n                request url\r\n                |> method HttpMethod.POST\r\n                |> content (BodyContent.Text data)\r\n                |> send\r\n            return response.statusCode, response.responseText\r\n        }\r\n","namespace Feliz\r\n\r\nopen Browser.Types\r\nopen Fable.Core.JsInterop\r\nopen Fable.Core\r\nopen Feliz.Styles\r\n\r\n[<StringEnum; RequireQualifiedAccess>]\r\ntype AriaDropEffect =\r\n    /// A duplicate of the source object will be dropped into the target.\r\n    | Copy\r\n    /// A function supported by the drop target is executed, using the drag\r\n    /// source as an input.\r\n    | Execute\r\n    /// A reference or shortcut to the dragged object will be created in the\r\n    /// target object.\r\n    | Link\r\n    /// The source object will be removed from its current location and dropped\r\n    /// into the target.\r\n    | Move\r\n    /// No operation can be performed; effectively cancels the drag operation if\r\n    /// an attempt is made to drop on this object. Ignored if combined with any\r\n    /// other token value. e.g. 'none copy' is equivalent to a 'copy' value.\r\n    | None\r\n    /// There is a popup menu or dialog that allows the user to choose one of\r\n    /// the drag operations (copy, move, link, execute) and any other drag\r\n    /// functionality, such as cancel.\r\n    | Popup\r\n\r\n[<StringEnum; RequireQualifiedAccess>]\r\ntype AriaRelevant =\r\n    /// Element nodes are added to the DOM within the live region.\r\n    | Additions\r\n    /// Equivalent to the combination of all values, \"additions removals text\".\r\n    | All\r\n    /// Text or element nodes within the live region are removed from the DOM.\r\n    | Removals\r\n    /// Text is added to any DOM descendant nodes of the live region.\r\n    | Text\r\n\r\ntype prop =\r\n    static member inline id(value: string) = Interop.mkAttr \"id\" value\r\n    static member inline ref(handler: Element -> unit) = Interop.mkAttr \"ref\" handler\r\n    static member inline ref(ref: Fable.React.IRefValue<HTMLElement option>) = Interop.mkAttr \"ref\" ref\r\n    /// Sets the inner Html content of the element.\r\n    static member inline dangerouslySetInnerHTML(content: string) = Interop.mkAttr \"dangerouslySetInnerHTML\" (createObj [ \"__html\" ==> content ])\r\n    /// Alias for `dangerouslySetInnerHTML`, sets the inner Html content of the element.\r\n    static member inline innerHtml (content: string) = Interop.mkAttr \"dangerouslySetInnerHTML\" (createObj [ \"__html\" ==> content ])\r\n    /// `prop.ref` callback that sets the value of an input after DOM element is created.\r\n    /// Can be used instead of `prop.defaultValue` and `prop.value` props to override input box value.\r\n    static member inline valueOrDefault(value: string) =\r\n        prop.ref (fun e -> if e |> isNull |> not && !!e?value <> !!value then e?value <- !!value)\r\n    /// `prop.ref` callback that sets the value of an input after DOM element is created.\r\n    /// Can be used instead of `prop.defaultValue` and `prop.value` props to override input value.\r\n    static member inline valueOrDefault(value: int) =\r\n        prop.ref (fun e -> if e |> isNull |> not && !!e?value <> !!value then e?value <- !!value)\r\n    /// `prop.ref` callback that sets the value of an input after DOM element is created.\r\n    /// Can be used instead of `prop.defaultValue` and `prop.value` props to override input value.\r\n    static member inline valueOrDefault(value: bool) =\r\n        prop.ref (fun e -> if e |> isNull |> not && !!e?value <> !!value then e?value <- !!value)\r\n    static member inline id(value: int) = Interop.mkAttr \"id\" (string value)\r\n    /// Specifies a CSS class for this element.\r\n    static member inline className(value: string) = Interop.mkAttr \"className\" value\r\n    /// Takes a list of conditional classes (`predicate:bool` * `className:string`), filters out the ones where the `predicate` is false and joins the rest of them using a space to combine the classses into a single class property.\r\n    ///\r\n    ///`prop.className [ true, \"one\";  false, \"two\" ]`\r\n    ///\r\n    /// is the same as\r\n    ///\r\n    ///`prop.className \"one\"`\r\n    ///\r\n    static member inline className (classes: #seq<bool * string>) =\r\n        classes\r\n        |> Seq.filter fst\r\n        |> Seq.map snd\r\n        |> String.concat \" \"\r\n        |> Interop.mkAttr \"className\"\r\n\r\n    /// Sets the `type` attribute for the element.\r\n    static member inline withType (value: string) = Interop.mkAttr \"type\" value\r\n\r\n    /// Takes a `seq<string>` and joins them using a space to combine the classses into a single class property.\r\n    ///\r\n    /// `prop.classes [ \"one\"; \"two\" ]` => `prop.className \"one two\"`\r\n    static member inline classes(names: seq<string>) = Interop.mkAttr \"className\" (String.concat \" \" names)\r\n    /// Takes a `seq<string>` and joins them using a space to combine the classses into a single class property.\r\n    ///\r\n    /// `prop.className [ \"one\"; \"two\" ]`\r\n    ///\r\n    /// is the same as\r\n    ///\r\n    /// `prop.className \"one two\"`\r\n    static member inline className(names: seq<string>) = Interop.mkAttr \"className\" (String.concat \" \" names)\r\n    /// Defines the text content of the element. Alias for `children [ Html.text value ]`\r\n    static member inline text (value: string) = Interop.mkAttr \"children\" value\r\n    /// Defines the text content of the element. Alias for `children [ Html.text value ]`\r\n    static member inline text (value: int) = Interop.mkAttr \"children\" value\r\n    /// Defines the text content of the element. Alias for `children [ Html.text value ]`\r\n    static member inline text (value: float) = Interop.mkAttr \"children\" value\r\n    static member inline key(value: string) = Interop.mkAttr \"key\" value\r\n    static member inline key(value: int) = Interop.mkAttr \"key\" value\r\n    static member inline key(value: System.Guid) = Interop.mkAttr \"value\" (string value)\r\n    static member inline defaultChecked(value: bool) = Interop.mkAttr \"defaultChecked\" value\r\n    static member inline defaultValue(value: string) = Interop.mkAttr \"defaultValue\" value\r\n    static member inline defaultValue(value: int) = Interop.mkAttr \"defaultValue\" value\r\n    static member inline defaultValue(value: bool) = Interop.mkAttr \"defaultValue\" value\r\n    static member inline defaultValue(value: float) = Interop.mkAttr \"defaultValue\" value\r\n    static member inline value(value: string) = Interop.mkAttr \"value\" value\r\n    static member inline value(value: int) = Interop.mkAttr \"value\" value\r\n    static member inline value(value: float) = Interop.mkAttr \"value\" value\r\n    static member inline value(value: bool) = Interop.mkAttr \"value\" value\r\n    static member inline value(value: System.Guid) = Interop.mkAttr \"value\" (string value)\r\n    static member inline selected(value: bool) = Interop.mkAttr \"selected\" value\r\n    static member inline x(value: int) = Interop.mkAttr \"x\" value\r\n    static member inline x(value: float) = Interop.mkAttr \"x\" value\r\n    static member inline x(value: ICssUnit) = Interop.mkAttr \"x\" value\r\n    static member inline y(value: int) = Interop.mkAttr \"y\" value\r\n    static member inline y(value: float) = Interop.mkAttr \"y\" value\r\n    static member inline dy(value: int) = Interop.mkAttr \"dy\" value\r\n    static member inline dy(value: float) = Interop.mkAttr \"dy\" value\r\n    static member inline y(value: ICssUnit) = Interop.mkAttr \"y\" value\r\n    static member inline r(value: int) = Interop.mkAttr \"r\" value\r\n    static member inline r(value: ICssUnit) = Interop.mkAttr \"r\" value\r\n    static member inline fontSize(value: int) = Interop.mkAttr \"fontSize\" value\r\n    static member inline fontSize(value: float) = Interop.mkAttr \"fontSize\" value\r\n    static member inline viewPort(x: int, y: int, height: int, width: int) =\r\n        Interop.mkAttr \"viewport\"\r\n          ((unbox<string> x) + \" \" +\r\n           (unbox<string> y) + \" \" +\r\n           (unbox<string> height) + \" \" +\r\n           (unbox<string> width))\r\n    static member inline fill(color: string) = Interop.mkAttr \"fill\" color\r\n    static member inline x1(value: int) = Interop.mkAttr \"x1\" value\r\n    static member inline x1(value: ICssUnit) = Interop.mkAttr \"x1\" value\r\n    static member inline x1(value: float) = Interop.mkAttr \"x1\" value\r\n    static member inline x2(value: int) = Interop.mkAttr \"x2\" value\r\n    static member inline x2(value: ICssUnit) = Interop.mkAttr \"x2\" value\r\n    static member inline x2(value: float) = Interop.mkAttr \"x2\" value\r\n    static member inline y1(value: int) = Interop.mkAttr \"y1\" value\r\n    static member inline y1(value: float) = Interop.mkAttr \"y1\" value\r\n    static member inline y1(value: ICssUnit) = Interop.mkAttr \"y1\" value\r\n    static member inline y2(value: int) = Interop.mkAttr \"y2\" value\r\n    static member inline y2(value: ICssUnit) = Interop.mkAttr \"y2\" value\r\n    static member inline y2(value: float) = Interop.mkAttr \"y2\" value\r\n    static member inline cx(value: int) = Interop.mkAttr \"cx\" value\r\n    static member inline cx(value: ICssUnit) = Interop.mkAttr \"cx\" value\r\n    static member inline cx(value: float) = Interop.mkAttr \"cx\" value\r\n    static member inline rx(value: int) = Interop.mkAttr \"rx\" value\r\n    static member inline rx(value: ICssUnit) = Interop.mkAttr \"rx\" value\r\n    static member inline rx(value: float) = Interop.mkAttr \"rx\" value\r\n    static member inline ry(value: int) = Interop.mkAttr \"ry\" value\r\n    static member inline ry(value: ICssUnit) = Interop.mkAttr \"ry\" value\r\n    static member inline ry(value: float) = Interop.mkAttr \"ry\" value\r\n    static member inline cy(value: float) = Interop.mkAttr \"cy\" value\r\n    static member inline cy(value: int) = Interop.mkAttr \"cy\" value\r\n    static member inline cy(value: ICssUnit) = Interop.mkAttr \"cy\" value\r\n    static member inline fillOpacity(value: float) = Interop.mkAttr \"fillOpacity\" value\r\n    static member inline stroke(color: string) = Interop.mkAttr \"stroke\" color\r\n    static member inline strokeWidth(value: int) = Interop.mkAttr \"strokeWidth\" value\r\n    static member inline strokeWidth(value: float) = Interop.mkAttr \"strokeWidth\" value\r\n    static member inline strokeWidth(value: ICssUnit) = Interop.mkAttr \"strokeWidth\" value\r\n    static member inline offset(value: int) = Interop.mkAttr \"offset\" value\r\n    static member inline offset(value: float) = Interop.mkAttr \"offset\" value\r\n    static member inline offset(value: ICssUnit) = Interop.mkAttr \"offset\" value\r\n    static member inline points(value: string) = Interop.mkAttr \"points\" value\r\n    static member inline stopColor(value: string) = Interop.mkAttr \"stopColor\" value\r\n    static member inline stopOpacity(value: float) = Interop.mkAttr \"stopOpacity\" value\r\n    static member inline accept(value: string) = Interop.mkAttr \"accept\" value\r\n    static member inline acceptCharset(value: string) = Interop.mkAttr \"acceptCharset\" value\r\n    static member inline accessKey(value: string) = Interop.mkAttr \"accessKey\" value\r\n    static member inline action(value: string) = Interop.mkAttr \"action\" value\r\n    static member inline alt(value: string) = Interop.mkAttr \"alt\" value\r\n    static member inline async(value: bool) = Interop.mkAttr \"async\" value\r\n    static member inline autoComplete(value: string) = Interop.mkAttr \"autoComplete\" value\r\n    static member inline autoFocus(value: bool) = Interop.mkAttr \"autoFocus\" value\r\n    static member inline autoPlay(value: bool) = Interop.mkAttr \"autoPlay\" value\r\n    static member inline capture(value: bool) = Interop.mkAttr \"capture\" value\r\n    static member inline isChecked(value: bool) = Interop.mkAttr \"checked\" value\r\n    static member inline cols(value: int) = Interop.mkAttr \"cols\" value\r\n    static member inline colSpan(value: int) = Interop.mkAttr \"colSpan\" value\r\n    static member inline contentEditable(value: bool) = Interop.mkAttr \"contenteditable\" value\r\n    static member inline disabled(value: bool) = Interop.mkAttr \"disabled\" value\r\n    static member inline height(value: int) = Interop.mkAttr \"height\" value\r\n    static member inline width(value: int) = Interop.mkAttr \"width\" value\r\n    static member inline href (value: string) = Interop.mkAttr \"href\" value\r\n    static member inline hidden (value: bool) = Interop.mkAttr \"hidden\" value\r\n    static member inline htmlFor(value: string) = Interop.mkAttr \"htmlFor\" value\r\n    static member inline min(value: int) = Interop.mkAttr \"min\" value\r\n    static member inline max(value: int) = Interop.mkAttr \"max\" value\r\n    static member inline maxLength(value: int) = Interop.mkAttr \"maxlength\" value\r\n    static member inline multiple(value: bool) = Interop.mkAttr \"multiple\" value\r\n    static member inline method(value: string) = Interop.mkAttr \"method\" value\r\n    static member inline muted(value: bool) = Interop.mkAttr \"muted\" value\r\n    static member inline name(value: string) = Interop.mkAttr \"name\" value\r\n    static member inline placeholder(value: string) = Interop.mkAttr \"placeholder\" value\r\n    static member inline isOpen(value: bool) = Interop.mkAttr \"open\" value\r\n    static member inline sizes (value: string) = Interop.mkAttr \"sizes\" value\r\n    static member inline srcset (value: string) = Interop.mkAttr \"srcset\" value\r\n    static member inline required(value: bool) = Interop.mkAttr \"required\" value\r\n    static member inline content(value: string) = Interop.mkAttr \"content\" value\r\n    static member inline children(value: Fable.React.ReactElement) = Interop.mkAttr \"children\" value\r\n    static member inline rows(value: int) = Interop.mkAttr \"rows\" value\r\n    static member inline rowSpan(value: int) = Interop.mkAttr \"rowSpan\" value\r\n    static member inline src(value: string) = Interop.mkAttr \"src\" value\r\n    static member inline start(value: string) = Interop.mkAttr \"start\" value\r\n    static member inline readOnly (value: bool) = Interop.mkAttr \"readOnly\" value\r\n    static member inline custom(key: string, value: 't) = Interop.mkAttr key value\r\n    static member inline children (elems: Fable.React.ReactElement seq) = Interop.mkAttr \"children\" (Interop.reactApi.Children.toArray elems)\r\n    static member inline onCut (handler: ClipboardEvent -> unit) = Interop.mkAttr \"onCut\" handler\r\n    static member inline onPaste (handler: ClipboardEvent -> unit) = Interop.mkAttr \"onPaste\" handler\r\n    static member inline onCompositionEnd (handler: CompositionEvent -> unit) = Interop.mkAttr \"onCompositionEnd\" handler\r\n    static member inline onCompositionStart (handler: CompositionEvent -> unit) = Interop.mkAttr \"onCompositionStart\" handler\r\n    static member inline onCopy (handler: ClipboardEvent -> unit) = Interop.mkAttr \"onCopy\" handler\r\n    static member inline onCompositionUpdate (handler: CompositionEvent -> unit) = Interop.mkAttr \"onCompositionUpdate\" handler\r\n    static member inline onFocus (handler: FocusEvent -> unit) = Interop.mkAttr \"onFocus\" handler\r\n    static member inline onBlur (handler: FocusEvent -> unit) = Interop.mkAttr \"onBlur\" handler\r\n    static member inline onChange (handler: Event -> unit) = Interop.mkAttr \"onChange\" handler\r\n    /// Same as `onChange` but let's you deal with the text changed from the `input` element directly\r\n    /// instead of extracting it from the event arguments.\r\n    static member inline onTextChange (handler: string -> unit) = Interop.mkAttr \"onChange\" (fun (ev: Event) -> handler (!!ev.target?value))\r\n    /// Same as `onChange` that takes an event as input but instead let's you deal with the text changed from the `input` element directly\r\n    /// instead of extracting it from the event arguments.\r\n    static member inline onChange (handler: string -> unit) = Interop.mkAttr \"onChange\" (fun (ev: Event) -> handler (!!ev.target?value))\r\n    /// Same as `onChange` that takes an event as input but instead let's you deal with the `checked` value changed from the `input` element directly when it is defined as a checkbox with `prop.inputType.checkbox`.\r\n    static member inline onChange (handler: bool -> unit) = Interop.mkAttr \"onChange\" (fun (ev: Event) -> handler (!!ev.target?``checked``))\r\n    /// Same as `onChange` but let's you deal with the `checked` value that has changed from the `input` element directly instead of extracting it from the event arguments.\r\n    static member inline onCheckedChange (handler: bool -> unit) = Interop.mkAttr \"onChange\" (fun (ev: Event) -> handler (!!ev.target?``checked``))\r\n    static member inline onInput (handler: Event -> unit) = Interop.mkAttr \"onInput\" handler\r\n    static member inline onSubmit (handler: Event -> unit) = Interop.mkAttr \"onSubmit\" handler\r\n    static member inline onReset (handler: Event -> unit) = Interop.mkAttr \"onReset\" handler\r\n    static member inline onLoad (handler: Event -> unit) = Interop.mkAttr \"onLoad\" handler\r\n    static member inline onError (handler: Event -> unit) = Interop.mkAttr \"onError\" handler\r\n    static member inline onKeyDown (handler: KeyboardEvent -> unit) = Interop.mkAttr \"onKeyDown\" handler\r\n    static member inline onKeyPress (handler: KeyboardEvent -> unit) = Interop.mkAttr \"onKeyPress\" handler\r\n    static member inline onKeyUp (handler: KeyboardEvent -> unit) = Interop.mkAttr \"onKeyUp\" handler\r\n    static member inline onAbort (handler: Event -> unit) = Interop.mkAttr \"onAbort\" handler\r\n    static member inline onCanPlay (handler: Event -> unit) = Interop.mkAttr \"onCanPlay\" handler\r\n    static member inline onCanPlayThrough (handler: Event -> unit) = Interop.mkAttr \"onCanPlayThrough\" handler\r\n    static member inline onDurationChange (handler: Event -> unit) = Interop.mkAttr \"onDurationChange\" handler\r\n    static member inline onEmptied (handler: Event -> unit) = Interop.mkAttr \"onEmptied\" handler\r\n    static member inline onEncrypted (handler: Event -> unit) = Interop.mkAttr \"onEncrypted\" handler\r\n    static member inline onEnded (handler: Event -> unit) = Interop.mkAttr \"onEnded\" handler\r\n    static member inline onLoadedData (handler: Event -> unit) = Interop.mkAttr \"onLoadedData\" handler\r\n    static member inline onLoadedMetadata (handler: Event -> unit) = Interop.mkAttr \"onLoadedMetadata\" handler\r\n    static member inline onLoadStart (handler: Event -> unit) = Interop.mkAttr \"onLoadStart\" handler\r\n    static member inline onPause (handler: Event -> unit) = Interop.mkAttr \"onPause\" handler\r\n    static member inline onPlay (handler: Event -> unit) = Interop.mkAttr \"onPlay\" handler\r\n    static member inline onPlaying (handler: Event -> unit) = Interop.mkAttr \"onPlaying\" handler\r\n    static member inline onProgress (handler: Event -> unit) = Interop.mkAttr \"onProgress\" handler\r\n    static member inline onRateChange (handler: Event -> unit) = Interop.mkAttr \"onRateChange\" handler\r\n    static member inline onSeeked (handler: Event -> unit) = Interop.mkAttr \"onSeeked\" handler\r\n    static member inline onSeeking (handler: Event -> unit) = Interop.mkAttr \"onSeeking\" handler\r\n\r\n    static member inline onStalled (handler: Event -> unit) = Interop.mkAttr \"onStalled\" handler\r\n    static member inline onSuspend (handler: Event -> unit) = Interop.mkAttr \"onSuspend\" handler\r\n    static member inline onTimeUpdate (handler: Event -> unit) = Interop.mkAttr \"onTimeUpdate\" handler\r\n    static member inline onVolumeChange (handler: Event -> unit) = Interop.mkAttr \"onVolumeChange\" handler\r\n    static member inline onWaiting (handler: Event -> unit) = Interop.mkAttr \"onWaiting\" handler\r\n    static member inline onClick (handler: MouseEvent -> unit) = Interop.mkAttr \"onClick\" handler\r\n    static member inline onContextMenu (handler: MouseEvent -> unit) = Interop.mkAttr \"onContextMenu\" handler\r\n    static member inline onDoubleClick (handler: MouseEvent -> unit) = Interop.mkAttr \"onDoubleClick\" handler\r\n    static member inline onDrag (handler: DragEvent -> unit) = Interop.mkAttr \"onDrag\" handler\r\n    static member inline onDragEnd (handler: DragEvent -> unit) = Interop.mkAttr \"onDragEnd\" handler\r\n    static member inline onDragEnter (handler: DragEvent -> unit) = Interop.mkAttr \"onDragEnter\" handler\r\n    static member inline onDragExit (handler: DragEvent -> unit) = Interop.mkAttr \"onDragExit\" handler\r\n    static member inline onDragLeave (handler: DragEvent -> unit) = Interop.mkAttr \"onDragLeave\" handler\r\n    static member inline onDragOver (handler: DragEvent -> unit) = Interop.mkAttr \"onDragOver\" handler\r\n    static member inline onDragStart (handler: DragEvent -> unit) = Interop.mkAttr \"onDragStart\" handler\r\n    static member inline onDrop (handler: DragEvent -> unit) = Interop.mkAttr \"onDrop\" handler\r\n    static member inline onMouseDown (handler: MouseEvent -> unit) = Interop.mkAttr \"onMouseDown\" handler\r\n    static member inline onMouseEnter (handler: MouseEvent -> unit) = Interop.mkAttr \"onMouseEnter\" handler\r\n    static member inline onMouseLeave (handler: MouseEvent -> unit) = Interop.mkAttr \"onMouseLeave\" handler\r\n    static member inline onMouseMove (handler: MouseEvent -> unit) = Interop.mkAttr \"onMouseMove\" handler\r\n    static member inline onMouseOut (handler: MouseEvent -> unit) = Interop.mkAttr \"onMouseOut\" handler\r\n    static member inline onMouseOver (handler: MouseEvent -> unit) = Interop.mkAttr \"onMouseOver\" handler\r\n    static member inline onSelect (handler: Event -> unit) = Interop.mkAttr \"onSelect\" handler\r\n    static member inline onTouchCancel (handler: TouchEvent -> unit) = Interop.mkAttr \"onTouchCancel\" handler\r\n    static member inline onTouchEnd (handler: TouchEvent -> unit) = Interop.mkAttr \"onTouchEnd\" handler\r\n    static member inline onTouchMove (handler: TouchEvent -> unit) = Interop.mkAttr \"onTouchMove\" handler\r\n    static member inline onTouchStart (handler: TouchEvent -> unit) = Interop.mkAttr \"onTouchStart\" handler\r\n    static member inline onScroll (handler: UIEvent -> unit) = Interop.mkAttr \"onScroll\" handler\r\n    static member inline onWheel (handler: WheelEvent -> unit) = Interop.mkAttr \"onWheel\" handler\r\n    static member inline onAnimationStart (handler: AnimationEvent -> unit) = Interop.mkAttr \"onAnimationStart\" handler\r\n    static member inline onAnimationEnd (handler: AnimationEvent -> unit) = Interop.mkAttr \"onAnimationEnd\" handler\r\n    static member inline onAnimationIteration (handler: AnimationEvent -> unit) = Interop.mkAttr \"onAnimationIteration\" handler\r\n    static member inline onTransitionEnd (handler: TransitionEvent -> unit) = Interop.mkAttr \"onTransitionEnd\" handler\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/roles\r\n    static member inline role ([<System.ParamArray>] roles: string []) = Interop.mkAttr \"role\" (String.concat \" \" roles)\r\n    /// Indicates whether assistive technologies will present all, or only parts\r\n    /// of, the changed region based on the change notifications defined by the\r\n    /// `aria-relevant` attribute.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-atomic\r\n    static member inline ariaAtomic (value: bool) = Interop.mkAttr \"aria-atomic\" value\r\n    /// Indicates whether an element, and its subtree, are currently being\r\n    /// updated.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-busy\r\n    static member inline ariaBusy (value: bool) = Interop.mkAttr \"aria-busy\" value\r\n    /// Identifies the element (or elements) whose contents or presence are\r\n    /// controlled by the current element. See related `aria-owns`.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-controls\r\n    static member inline ariaControls ([<System.ParamArray>] ids: string []) = Interop.mkAttr \"aria-controls\" (String.concat \" \" ids)\r\n    /// Specifies a URI referencing content that describes the object. See\r\n    /// related `aria-describedby`.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-describedat\r\n    static member inline ariaDescribedAt (uri: string) = Interop.mkAttr \"aria-describedat\" uri\r\n    /// Identifies the element (or elements) that describes the object. See\r\n    /// related `aria-describedat` and `aria-labelledby`.\r\n    ///\r\n    /// The `aria-labelledby` attribute is similar to `aria-describedby` in that\r\n    /// both reference other elements to calculate a text alternative, but a\r\n    /// label should be concise, where a description is intended to provide more\r\n    /// verbose information.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-describedby\r\n    static member inline ariaDescribedBy ([<System.ParamArray>] ids: string []) = Interop.mkAttr \"aria-describedby\" (String.concat \" \" ids)\r\n    /// Indicates that the element is perceivable but disabled, so it is not\r\n    /// editable or otherwise operable. See related `aria-hidden` and\r\n    /// `aria-readonly`.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-disabled\r\n    static member inline ariaDisabled (value: bool) = Interop.mkAttr \"aria-disabled\" value\r\n    /// Indicates what functions can be performed when the dragged object is\r\n    /// released on the drop target. This allows assistive technologies to\r\n    /// convey the possible drag options available to users, including whether a\r\n    /// pop-up menu of choices is provided by the application. Typically, drop\r\n    /// effect functions can only be provided once an object has been grabbed\r\n    /// for a drag operation as the drop effect functions available are\r\n    /// dependent on the object being dragged.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-dropeffect\r\n    static member inline ariaDropEffect ([<System.ParamArray>] values: AriaDropEffect []) = Interop.mkAttr \"aria-dropeffect\" (values |> unbox<string []> |> String.concat \" \")\r\n    /// Identifies the next element (or elements) in an alternate reading order\r\n    /// of content which, at the user's discretion, allows assistive technology\r\n    /// to override the general default of reading in document source order.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-flowto\r\n    static member inline ariaFlowTo ([<System.ParamArray>] ids: string []) = Interop.mkAttr \"aria-flowto\" (String.concat \" \" ids)\r\n    /// Indicates an element's \"grabbed\" state in a drag-and-drop operation.\r\n    ///\r\n    /// When it is set to true it has been selected for dragging, false\r\n    /// indicates that the element can be grabbed for a drag-and-drop operation,\r\n    /// but is not currently grabbed, and undefined (or no value) indicates the\r\n    /// element cannot be grabbed (default).\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-grabbed\r\n    static member inline ariaGrabbed (value: bool) = Interop.mkAttr \"aria-grabbed\" value\r\n    /// Indicates that the element has a popup context menu or sub-level menu.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-haspopup\r\n    static member inline ariaHasPopup (value: bool) = Interop.mkAttr \"aria-haspopup\" value\r\n    /// Indicates that the element and all of its descendants are not visible or\r\n    /// perceivable to any user as implemented by the author. See related\r\n    /// `aria-disabled`.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-hidden\r\n    static member inline ariaHidden (value: bool) = Interop.mkAttr \"aria-hidden\" value\r\n    /// Indicates the entered value does not conform to the format expected by\r\n    /// the application.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-invalid\r\n    static member inline ariaInvalid (value: bool) = Interop.mkAttr \"aria-invalid\" value\r\n    /// Defines a string value that labels the current element. See related\r\n    /// `aria-labelledby`.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-label\r\n    static member inline ariaLabel (value: string) = Interop.mkAttr \"aria-label\" value\r\n    /// Identifies the element (or elements) that labels the current element.\r\n    /// See related `aria-label` and `aria-describedby`.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-labelledby\r\n    static member inline ariaLabelledBy ([<System.ParamArray>] ids: string []) = Interop.mkAttr \"aria-labelledby\" (String.concat \" \" ids)\r\n    /// Identifies an element (or elements) in order to define a visual,\r\n    /// functional, or contextual parent/child relationship between DOM elements\r\n    /// where the DOM hierarchy cannot be used to represent the relationship.\r\n    /// See related `aria-controls`.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-owns\r\n    static member inline ariaOwns ([<System.ParamArray>] ids: string []) = Interop.mkAttr \"aria-owns\" (String.concat \" \" ids)\r\n    /// Indicates what user agent change notifications (additions, removals,\r\n    /// etc.) assistive technologies will receive within a live region. See\r\n    /// related `aria-atomic`.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-relevant\r\n    static member inline ariaRelevant ([<System.ParamArray>] values: AriaRelevant []) = Interop.mkAttr \"aria-relevant\" (values |> unbox<string []> |> String.concat \" \")\r\n    /// Indicates the current \"checked\" state of checkboxes, radio buttons, and\r\n    /// other widgets. See related `aria-pressed` and `aria-selected`.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-checked\r\n    static member inline ariaChecked (value: bool) = Interop.mkAttr \"aria-checked\" value\r\n    /// Indicates whether the element, or another grouping element it controls,\r\n    /// is currently expanded or collapsed.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-expanded\r\n    static member inline ariaExpanded (value: bool) = Interop.mkAttr \"aria-expanded\" value\r\n    /// Defines the hierarchical level of an element within a structure.\r\n    ///\r\n    /// This can be applied inside trees to tree items, to headings inside a\r\n    /// document, to nested grids, nested tablists and to other structural items\r\n    /// that may appear inside a container or participate in an ownership\r\n    /// hierarchy. The value for `aria-level` is an integer greater than or\r\n    /// equal to 1.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-level\r\n    static member inline ariaLevel (value: int) = Interop.mkAttr \"aria-level\" value\r\n    /// Indicates whether a text box accepts multiple lines of input or only a\r\n    /// single line.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-multiline\r\n    static member inline ariaMultiLine (value: bool) = Interop.mkAttr \"aria-multiline\" value\r\n    /// Indicates that the user may select more than one item from the current\r\n    /// selectable descendants.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-multiselectable\r\n    static member inline ariaMultiSelectable (value: bool) = Interop.mkAttr \"aria-multiselectable\" value\r\n    /// Indicates the current \"pressed\" state of toggle buttons. See related\r\n    /// `aria-checked` and `aria-selected`.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-pressed\r\n    static member inline ariaPressed (value: bool) = Interop.mkAttr \"aria-pressed\" value\r\n    /// Indicates that the element is not editable, but is otherwise operable.\r\n    /// See related `aria-disabled`.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-readonly\r\n    static member inline ariaReadOnly (value: bool) = Interop.mkAttr \"aria-readonly\" value\r\n    /// Indicates that user input is required on the element before a form may\r\n    /// be submitted.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-required\r\n    static member inline ariaRequired (value: bool) = Interop.mkAttr \"aria-required\" value\r\n    /// Indicates the current \"selected\" state of various widgets. See related\r\n    /// `aria-checked` and `aria-pressed`.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-selected\r\n    static member inline ariaSelected (value: bool) = Interop.mkAttr \"aria-selected\" value\r\n    /// Defines the maximum allowed value for a range widget.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-valuemax\r\n    static member inline ariaValueMax (value: int) = Interop.mkAttr \"aria-valuemax\" value\r\n    /// Defines the maximum allowed value for a range widget.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-valuemax\r\n    static member inline ariaValueMax (value: float) = Interop.mkAttr \"aria-valuemax\" value\r\n    /// Defines the minimum allowed value for a range widget.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-valuemin\r\n    static member inline ariaValueMin (value: int) = Interop.mkAttr \"aria-valuemin\" value\r\n    /// Defines the minimum allowed value for a range widget.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-valuemin\r\n    static member inline ariaValueMin (value: float) = Interop.mkAttr \"aria-valuemin\" value\r\n    /// Defines the current value for a range widget. See related\r\n    /// `aria-valuetext`.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-valuenow\r\n    static member inline ariaValueNow (value: int) = Interop.mkAttr \"aria-valuenow\" value\r\n    /// Defines the current value for a range widget. See related\r\n    /// `aria-valuetext`.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-valuenow\r\n    static member inline ariaValueNow (value: float) = Interop.mkAttr \"aria-valuenow\" value\r\n    /// Defines the human readable text alternative of `aria-valuenow` for a\r\n    /// range widget.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-valuetext\r\n    static member inline ariaValueText (value: string) = Interop.mkAttr \"aria-valuetext\" value\r\n    /// Identifies the currently active descendant of a `composite` widget.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-activedescendant\r\n    static member inline ariaActiveDescendant (id: string) = Interop.mkAttr \"aria-activedescendant\" id\r\n    /// Defines an element's number or position in the current set of listitems\r\n    /// or treeitems. Not required if all elements in the set are present in the\r\n    /// DOM. See related `aria-setsize`.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-posinset\r\n    static member inline ariaPosInSet (value: int) = Interop.mkAttr \"aria-posinset\" value\r\n    /// Defines the number of items in the current set of listitems or\r\n    /// treeitems. Not required if all elements in the set are present in the\r\n    /// DOM. See related `aria-posinset`.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-setsize\r\n    static member inline ariaSetSize (value: int) = Interop.mkAttr \"aria-setsize\" value\r\n    static member inline style (properties: #IStyleAttribute list) = Interop.mkAttr \"style\" (createObj !!properties)\r\n    static member style (properties: (bool * IStyleAttribute list) list) =\r\n        properties\r\n        |> List.filter fst\r\n        |> List.collect snd\r\n        |> unbox\r\n        |> createObj\r\n        |> Interop.mkAttr \"style\"\r\n\r\nmodule prop =\r\n\r\n    [<Erase>]\r\n    /// The `text-anchor` attribute is used to align (start-, middle- or\r\n    /// end-alignment) a string of pre-formatted text or auto-wrapped text where\r\n    /// the wrapping area is determined from the `inline-size` property relative\r\n    /// to a given point. It is not applicable to other types of auto-wrapped\r\n    /// text. For those cases you should use `text-align`. For multi-line text,\r\n    /// the alignment takes place for each line.\r\n    ///\r\n    /// The `text-anchor` attribute is applied to each individual text chunk\r\n    /// within a given `<text>` element. Each text chunk has an initial current\r\n    /// text position, which represents the point in the user coordinate system\r\n    /// resulting from (depending on context) application of the `x` and `y`\r\n    /// attributes on the `<text>` element, any `x` or `y` attribute values on a\r\n    /// `<tspan>`, `<tref>` or `<altGlyph>` element assigned explicitly to the\r\n    /// first rendered character in a text chunk, or determination of the\r\n    /// initial current text position for a `<textPath>` element.\r\n    type textAnchor =\r\n        /// The rendered characters are aligned such that the start of the text\r\n        /// string is at the initial current text position. For an element with\r\n        /// a `direction` property value of `ltr` (typical for most European\r\n        /// languages), the left side of the text is rendered at the initial\r\n        /// text position. For an element with a `direction` property value of\r\n        /// `rtl` (typical for Arabic and Hebrew), the right side of the text is\r\n        /// rendered at the initial text position. For an element with a\r\n        /// vertical primary text direction (often typical for Asian text), the\r\n        /// top side of the text is rendered at the initial text position.\r\n        static member inline startOfText = Interop.mkAttr \"textAnchor\" \"start\"\r\n        /// The rendered characters are aligned such that the middle of the text\r\n        /// string is at the current text position. (For text on a path,\r\n        /// conceptually the text string is first laid out in a straight line.\r\n        /// The midpoint between the start of the text string and the end of the\r\n        /// text string is determined. Then, the text string is mapped onto the\r\n        /// path with this midpoint placed at the current text position.)\r\n        static member inline middle = Interop.mkAttr \"textAnchor\" \"middle\"\r\n        /// The rendered characters are shifted such that the end of the\r\n        /// resulting rendered text (final current text position before applying\r\n        /// the `text-anchor` property) is at the initial current text position.\r\n        /// For an element with a `direction` property value of `ltr` (typical\r\n        /// for most European languages), the right side of the text is rendered\r\n        /// at the initial text position. For an element with a `direction`\r\n        /// property value of `rtl` (typical for Arabic and Hebrew), the left\r\n        /// side of the text is rendered at the initial text position. For an\r\n        /// element with a vertical primary text direction (often typical for\r\n        /// Asian text), the bottom of the text is rendered at the initial text\r\n        /// position.\r\n        static member inline endOfText = Interop.mkAttr \"textAnchor\" \"end\"\r\n\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/roles\r\n    [<Erase>]\r\n    type role =\r\n        /// A message with important, and usually time-sensitive, information.\r\n        /// See related `alertdialog` and `status`.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#alert\r\n        static member inline alert = Interop.mkAttr \"role\" \"alert\"\r\n        /// A type of dialog that contains an alert message, where initial focus\r\n        /// goes to an element within the dialog. See related `alert` and\r\n        /// `dialog`.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#alertdialog\r\n        static member inline alertDialog = Interop.mkAttr \"role\" \"alertdialog\"\r\n        /// An input that allows for user-triggered actions when clicked or\r\n        /// pressed. See related `link`.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#button\r\n        static member inline button = Interop.mkAttr \"role\" \"button\"\r\n        /// A checkable input that has three possible values: `true`, `false`,\r\n        /// or `mixed`.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#checkbox\r\n        static member inline checkbox = Interop.mkAttr \"role\" \"checkbox\"\r\n        /// A dialog is an application window that is designed to interrupt the\r\n        /// current processing of an application in order to prompt the user to\r\n        /// enter information or require a response. See related `alertdialog`.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#dialog\r\n        static member inline dialog = Interop.mkAttr \"role\" \"dialog\"\r\n        /// A cell in a grid or treegrid.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#gridcell\r\n        static member inline gridCell = Interop.mkAttr \"role\" \"gridcell\"\r\n        /// An interactive reference to an internal or external resource that,\r\n        /// when activated, causes the user agent to navigate to that resource.\r\n        /// See related `button`.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#link\r\n        static member inline link = Interop.mkAttr \"role\" \"link\"\r\n        /// A type of live region where new information is added in meaningful\r\n        /// order and old information may disappear. See related `marquee`.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#log\r\n        static member inline log = Interop.mkAttr \"role\" \"log\"\r\n        /// A type of live region where non-essential information changes\r\n        /// frequently. See related `log`.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#marquee\r\n        static member inline marquee = Interop.mkAttr \"role\" \"marquee\"\r\n        /// An option in a set of choices contained by a `menu` or `menubar`.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#menuitem\r\n        static member inline menuItem = Interop.mkAttr \"role\" \"menuitem\"\r\n        /// A `menuitem` with a checkable state whose possible values are\r\n        /// `true`, `false`, or `mixed`.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#menuitemcheckbox\r\n        static member inline menuItemCheckbox = Interop.mkAttr \"role\" \"menuitemcheckbox\"\r\n        /// A checkable menuitem in a set of elements with role `menuitemradio`,\r\n        /// only one of which can be checked at a time.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#menuitemradio\r\n        static member inline menuItemRadio = Interop.mkAttr \"role\" \"menuitemradio\"\r\n        /// A selectable item in a `select` list.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#option\r\n        static member inline option = Interop.mkAttr \"role\" \"option\"\r\n        /// An element that displays the progress status for tasks that take a\r\n        /// long time.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#progressbar\r\n        static member inline progressBar = Interop.mkAttr \"role\" \"progressbar\"\r\n        /// A checkable input in a group of elements with role radio, only one\r\n        /// of which can be checked at a time.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#radio\r\n        static member inline radio = Interop.mkAttr \"role\" \"radio\"\r\n        /// A graphical object that controls the scrolling of content within a\r\n        /// viewing area, regardless of whether the content is fully displayed\r\n        /// within the viewing area.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#scrollbar\r\n        static member inline scrollBar = Interop.mkAttr \"role\" \"scrollbar\"\r\n        /// A user input where the user selects a value from within a given\r\n        /// range.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#slider\r\n        static member inline slider = Interop.mkAttr \"role\" \"slider\"\r\n        /// A form of `range` that expects the user to select from among\r\n        /// discrete choices.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#spinbutton\r\n        static member inline spinButton = Interop.mkAttr \"role\" \"spinbutton\"\r\n        /// A container whose content is advisory information for the user but\r\n        /// is not important enough to justify an alert, often but not\r\n        /// necessarily presented as a status bar. See related `alert`.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#status\r\n        static member inline status = Interop.mkAttr \"role\" \"status\"\r\n        /// A grouping label providing a mechanism for selecting the tab content\r\n        /// that is to be rendered to the user.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#tab\r\n        static member inline tab = Interop.mkAttr \"role\" \"tab\"\r\n        /// A container for the resources associated with a `tab`, where each\r\n        /// `tab` is contained in a `tablist`.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#tabpanel\r\n        static member inline tabPanel = Interop.mkAttr \"role\" \"tabpanel\"\r\n        /// Input that allows free-form text as its value.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#textbox\r\n        static member inline textBox = Interop.mkAttr \"role\" \"textbox\"\r\n        /// A type of live region containing a numerical counter which indicates\r\n        /// an amount of elapsed time from a start point, or the time remaining\r\n        /// until an end point.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#timer\r\n        static member inline timer = Interop.mkAttr \"role\" \"timer\"\r\n        /// A contextual popup that displays a description for an element.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#tooltip\r\n        static member inline tooltip = Interop.mkAttr \"role\" \"tooltip\"\r\n        /// An option item of a `tree`. This is an element within a tree that\r\n        /// may be expanded or collapsed if it contains a sub-level group of\r\n        /// `treeitem` elements.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#treeitem\r\n        static member inline treeItem = Interop.mkAttr \"role\" \"treeitem\"\r\n        /// A presentation of a `select`; usually similar to a `textbox` where\r\n        /// users can type ahead to select an option, or type to enter arbitrary\r\n        /// text as a new item in the list. See related `listbox`.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#combobox\r\n        static member inline comboBox = Interop.mkAttr \"role\" \"combobox\"\r\n        /// A grid is an interactive control which contains cells of tabular\r\n        /// data arranged in rows and columns, like a table.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#grid\r\n        static member inline grid = Interop.mkAttr \"role\" \"grid\"\r\n        /// A widget that allows the user to select one or more items from a\r\n        /// list of choices. See related `combobox` and `list`.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#listbox\r\n        static member inline listBox = Interop.mkAttr \"role\" \"listbox\"\r\n        /// A type of widget that offers a list of choices to the user.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#menu\r\n        static member inline menu = Interop.mkAttr \"role\" \"menu\"\r\n        /// A presentation of `menu` that usually remains visible and is usually\r\n        /// presented horizontally.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#menubar\r\n        static member inline menuBar = Interop.mkAttr \"role\" \"menubar\"\r\n        /// A group of radio buttons.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#radiogroup\r\n        static member inline radioGroup = Interop.mkAttr \"role\" \"radiogroup\"\r\n        /// A list of `tab` elements, which are references to `tabpanel`\r\n        /// elements.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#tablist\r\n        static member inline tabList = Interop.mkAttr \"role\" \"tablist\"\r\n        /// A type of `list` that may contain sub-level nested groups that can\r\n        /// be collapsed and expanded.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#tree\r\n        static member inline tree = Interop.mkAttr \"role\" \"tree\"\r\n        /// A `grid` whose rows can be expanded and collapsed in the same manner\r\n        /// as for a `tree`.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#treegrid\r\n        static member inline treeGrid = Interop.mkAttr \"role\" \"treegrid\"\r\n        /// A section of a page that consists of a composition that forms an\r\n        /// independent part of a document, page, or site.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#article\r\n        static member inline article = Interop.mkAttr \"role\" \"article\"\r\n        /// A cell containing header information for a column.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#columnheader\r\n        static member inline columnHeader = Interop.mkAttr \"role\" \"columnheader\"\r\n        /// A definition of a term or concept.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#definition\r\n        static member inline definition = Interop.mkAttr \"role\" \"definition\"\r\n        /// A list of references to members of a group, such as a static table\r\n        /// of contents.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#directory\r\n        static member inline directory = Interop.mkAttr \"role\" \"directory\"\r\n        /// A region containing related information that is declared as document\r\n        /// content, as opposed to a web application.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#document\r\n        static member inline document = Interop.mkAttr \"role\" \"document\"\r\n        /// A set of user interface objects which are not intended to be\r\n        /// included in a page summary or table of contents by assistive\r\n        /// technologies.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#group\r\n        static member inline group = Interop.mkAttr \"role\" \"group\"\r\n        /// A heading for a section of the page.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#heading\r\n        static member inline heading = Interop.mkAttr \"role\" \"heading\"\r\n        /// A container for a collection of elements that form an image.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#img\r\n        static member inline img = Interop.mkAttr \"role\" \"img\"\r\n        /// A group of non-interactive list items. See related `listbox`.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#list\r\n        static member inline list = Interop.mkAttr \"role\" \"list\"\r\n        /// A single item in a list or directory.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#listitem\r\n        static member inline listItem = Interop.mkAttr \"role\" \"listitem\"\r\n        /// Content that represents a mathematical expression.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#math\r\n        static member inline math = Interop.mkAttr \"role\" \"math\"\r\n        /// A section whose content is parenthetic or ancillary to the main\r\n        /// content of the resource.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#note\r\n        static member inline note = Interop.mkAttr \"role\" \"note\"\r\n        /// An element whose implicit native role semantics will not be mapped\r\n        /// to the accessibility API.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#presentation\r\n        static member inline presentation = Interop.mkAttr \"role\" \"presentation\"\r\n        /// A large perceivable section of a web page or document, that is\r\n        /// important enough to be included in a page summary or table of\r\n        /// contents, for example, an area of the page containing live sporting\r\n        /// event statistics.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#region\r\n        static member inline region = Interop.mkAttr \"role\" \"region\"\r\n        /// A row of cells in a grid.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#row\r\n        static member inline row = Interop.mkAttr \"role\" \"row\"\r\n        /// A group containing one or more row elements in a grid.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#rowgroup\r\n        static member inline rowGroup = Interop.mkAttr \"role\" \"rowgroup\"\r\n        /// A cell containing header information for a row in a grid.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#rowheader\r\n        static member inline rowHeader = Interop.mkAttr \"role\" \"rowheader\"\r\n        /// A divider that separates and distinguishes sections of content or\r\n        /// groups of menuitems.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#separator\r\n        static member inline separator = Interop.mkAttr \"role\" \"separator\"\r\n        /// A collection of commonly used function buttons or controls\r\n        /// represented in compact visual form.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#toolbar\r\n        static member inline toolbar = Interop.mkAttr \"role\" \"toolbar\"\r\n        /// A region declared as a web application, as opposed to a web\r\n        /// `document`.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#application\r\n        static member inline application = Interop.mkAttr \"role\" \"application\"\r\n        /// A region that contains mostly site-oriented content, rather than\r\n        /// page-specific content.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#banner\r\n        static member inline banner = Interop.mkAttr \"role\" \"banner\"\r\n        /// A supporting section of the document, designed to be complementary\r\n        /// to the main content at a similar level in the DOM hierarchy, but\r\n        /// remains meaningful when separated from the main content.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#complementary\r\n        static member inline complementary = Interop.mkAttr \"role\" \"complementary\"\r\n        /// A large perceivable region that contains information about the\r\n        /// parent document.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#contentinfo\r\n        static member inline contentInfo = Interop.mkAttr \"role\" \"contentinfo\"\r\n        /// A `landmark` region that contains a collection of items and objects\r\n        /// that, as a whole, combine to create a form. See related search.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#form\r\n        static member inline form = Interop.mkAttr \"role\" \"form\"\r\n        /// The main content of a document.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#main\r\n        static member inline main = Interop.mkAttr \"role\" \"main\"\r\n        /// A collection of navigational elements (usually links) for navigating\r\n        /// the document or related documents.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#navigation\r\n        static member inline navigation = Interop.mkAttr \"role\" \"navigation\"\r\n        /// A `landmark` region that contains a collection of items and objects\r\n        /// that, as a whole, combine to create a search facility. See related\r\n        /// `form`.\r\n        ///\r\n        /// https://www.w3.org/WAI/PF/aria-1.1/roles#search\r\n        static member inline search = Interop.mkAttr \"role\" \"search\"\r\n\r\n    [<Erase>]\r\n    type transform =\r\n        /// Defines that there should be no transformation.\r\n        static member inline none = Interop.mkAttr \"transform\" \"none\"\r\n        /// Defines a 2D transformation, using a matrix of six values.\r\n        static member inline matrix(x1: int, y1: int, z1: int, x2: int, y2: int, z2: int) =\r\n            Interop.mkAttr \"transform\" (\r\n                \"matrix(\" +\r\n                (unbox<string> x1) + \",\" +\r\n                (unbox<string> y1) + \",\" +\r\n                (unbox<string> z1) + \",\" +\r\n                (unbox<string> x2) + \",\" +\r\n                (unbox<string> y2) + \",\" +\r\n                (unbox<string> z2) + \")\"\r\n            )\r\n\r\n        /// Defines a 2D translation.\r\n        static member inline translate(x: int, y: int) =\r\n            Interop.mkAttr \"transform\" (\r\n                \"translate(\" + (unbox<string> x) + \",\" + (unbox<string> y) + \")\"\r\n            )\r\n\r\n        static member inline translate(x: float, y: float) =\r\n            Interop.mkAttr \"transform\" (\r\n                \"translate(\" + (unbox<string> x) + \",\" + (unbox<string> y) + \")\"\r\n            )\r\n        /// Defines that there should be no transformation.\r\n        static member inline translate3D(x: int, y: int, z: int) =\r\n            Interop.mkAttr \"transform\" (\r\n                \"translate3d(\" + (unbox<string> x) + \",\" + (unbox<string> y) + \",\" + (unbox<string> z) + \")\"\r\n            )\r\n\r\n        /// Defines a translation, using only the value for the X-axis.\r\n        static member inline translateX(x: int) =\r\n            Interop.mkAttr \"transform\" (\"translateX(\" + (unbox<string> x) + \")\")\r\n        /// Defines a translation, using only the value for the Y-axis\r\n        static member inline translateY(y: int) =\r\n            Interop.mkAttr \"transform\" (\"translateY(\" + (unbox<string> y) + \")\")\r\n        /// Defines a 3D translation, using only the value for the Z-axis\r\n        static member inline translateZ(z: int) =\r\n            Interop.mkAttr \"transform\" (\"translateZ(\" + (unbox<string> z) + \")\")\r\n\r\n        /// Defines a 2D scale transformation.\r\n        static member inline scale(x: int, y: int) =\r\n            Interop.mkAttr \"transform\" (\r\n                \"scale(\" + (unbox<string> x) + \",\" + (unbox<string> y) + \")\"\r\n            )\r\n\r\n        /// Defines a 3D scale transformation\r\n        static member inline scale3D(x: int, y: int, z: int) =\r\n            Interop.mkAttr \"transform\" (\r\n                \"scale3d(\" + (unbox<string> x) + \",\" + (unbox<string> y) + \",\" + (unbox<string> z) + \")\"\r\n            )\r\n\r\n        /// Defines a scale transformation by giving a value for the X-axis.\r\n        static member inline scaleX(x: int) =\r\n            Interop.mkAttr \"transform\" (\"scaleX(\" + (unbox<string> x) + \")\")\r\n\r\n        /// Defines a scale transformation by giving a value for the Y-axis.\r\n        static member inline scaleY(y: int) =\r\n            Interop.mkAttr \"transform\" (\"scaleY(\" + (unbox<string> y) + \")\")\r\n        /// Defines a 3D translation, using only the value for the Z-axis\r\n        static member inline scaleZ(z: int) =\r\n            Interop.mkAttr \"transform\" (\"scaleZ(\" + (unbox<string> z) + \")\")\r\n        /// Defines a 2D rotation, the angle is specified in the parameter.\r\n        static member inline rotate(deg: int) =\r\n            Interop.mkAttr \"transform\" (\"rotate(\" + (unbox<string> deg) + \"deg)\")\r\n        /// Defines a 2D rotation, the angle is specified in the parameter.\r\n        static member inline rotate(deg: float) =\r\n            Interop.mkAttr \"transform\" (\"rotate(\" + (unbox<string> deg) + \"deg)\")\r\n        /// Defines a 3D rotation along the X-axis.\r\n        static member inline rotateX(deg: float) =\r\n            Interop.mkAttr \"transform\" (\"rotateX(\" + (unbox<string> deg) + \"deg)\")\r\n        /// Defines a 3D rotation along the X-axis.\r\n        static member inline rotateX(deg: int) =\r\n            Interop.mkAttr \"transform\" (\"rotateX(\" + (unbox<string> deg) + \"deg)\")\r\n        /// Defines a 3D rotation along the Y-axis\r\n        static member inline rotateY(deg: float) =\r\n            Interop.mkAttr \"transform\" (\"rotateY(\" + (unbox<string> deg) + \"deg)\")\r\n        /// Defines a 3D rotation along the Y-axis\r\n        static member inline rotateY(deg: int) =\r\n            Interop.mkAttr \"transform\" (\"rotateY(\" + (unbox<string> deg) + \"deg)\")\r\n        /// Defines a 3D rotation along the Z-axis\r\n        static member inline rotateZ(deg: float) =\r\n            Interop.mkAttr \"transform\" (\"rotateZ(\" + (unbox<string> deg) + \"deg)\")\r\n        /// Defines a 3D rotation along the Z-axis\r\n        static member inline rotateZ(deg: int) =\r\n            Interop.mkAttr \"transform\" (\"rotateZ(\" + (unbox<string> deg) + \"deg)\")\r\n        /// Defines a 2D skew transformation along the X- and the Y-axis.\r\n        static member inline skew(xAngle: int, yAngle: int) =\r\n            Interop.mkAttr \"transform\" (\"skew(\" + (unbox<string> xAngle) + \"deg,\" + (unbox<string> yAngle) + \"deg)\")\r\n        /// Defines a 2D skew transformation along the X- and the Y-axis.\r\n        static member inline skew(xAngle: float, yAngle: float) =\r\n            Interop.mkAttr \"transform\" (\"skew(\" + (unbox<string> xAngle) + \"deg,\" + (unbox<string> yAngle) + \"deg)\")\r\n        /// Defines a 2D skew transformation along the X-axis\r\n        static member inline skewX(xAngle: int) =\r\n            Interop.mkAttr \"transform\" (\"skewX(\" + (unbox<string> xAngle) + \"deg)\")\r\n        /// Defines a 2D skew transformation along the X-axis\r\n        static member inline skewX(xAngle: float) =\r\n            Interop.mkAttr \"transform\" (\"skewX(\" + (unbox<string> xAngle) + \"deg)\")\r\n        /// Defines a 2D skew transformation along the Y-axis\r\n        static member inline skewY(xAngle: int) =\r\n            Interop.mkAttr \"transform\" (\"skewY(\" + (unbox<string> xAngle) + \"deg)\")\r\n        /// Defines a 2D skew transformation along the Y-axis\r\n        static member inline skewY(xAngle: float) =\r\n            Interop.mkAttr \"transform\" (\"skewY(\" + (unbox<string> xAngle) + \"deg)\")\r\n        /// Defines a perspective view for a 3D transformed element\r\n        static member inline perspective(n: int) =\r\n            Interop.mkAttr \"transform\" (\"perspective(\" + (unbox<string> n) + \")\")\r\n\r\n    /// Indicates what functions can be performed when the dragged object is\r\n    /// released on the drop target. This allows assistive technologies to\r\n    /// convey the possible drag options available to users, including whether a\r\n    /// pop-up menu of choices is provided by the application. Typically, drop\r\n    /// effect functions can only be provided once an object has been grabbed\r\n    /// for a drag operation as the drop effect functions available are\r\n    /// dependent on the object being dragged.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-dropeffect\r\n    [<Erase>]\r\n    type ariaDropEffect =\r\n        /// A duplicate of the source object will be dropped into the target.\r\n        static member inline copy = Interop.mkAttr \"aria-dropeffect\" \"copy\"\r\n        /// A function supported by the drop target is executed, using the drag\r\n        /// source as an input.\r\n        static member inline execute = Interop.mkAttr \"aria-dropeffect\" \"execute\"\r\n        /// A reference or shortcut to the dragged object will be created in the\r\n        /// target object.\r\n        static member inline link = Interop.mkAttr \"aria-dropeffect\" \"link\"\r\n        /// The source object will be removed from its current location and\r\n        /// dropped into the target.\r\n        static member inline move = Interop.mkAttr \"aria-dropeffect\" \"move\"\r\n        /// No operation can be performed; effectively cancels the drag\r\n        /// operation if an attempt is made to drop on this object. Ignored if\r\n        /// combined with any other token value. e.g. 'none copy' is equivalent\r\n        /// to a 'copy' value.\r\n        static member inline none = Interop.mkAttr \"aria-dropeffect\" \"none\"\r\n        /// There is a popup menu or dialog that allows the user to choose one\r\n        /// of the drag operations (copy, move, link, execute) and any other\r\n        /// drag functionality, such as cancel.\r\n        static member inline popup = Interop.mkAttr \"aria-dropeffect\" \"popup\"\r\n\r\n    /// Indicates the entered value does not conform to the format expected by\r\n    /// the application.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-invalid\r\n    [<Erase>]\r\n    type ariaInvalid =\r\n        /// A grammatical error was detected.\r\n        static member inline grammar = Interop.mkAttr \"aria-invalid\" \"grammar\"\r\n        /// A spelling error was detected.\r\n        static member inline spelling = Interop.mkAttr \"aria-invalid\" \"spelling\"\r\n\r\n    /// Indicates what user agent change notifications (additions, removals,\r\n    /// etc.) assistive technologies will receive within a live region. See\r\n    /// related `aria-atomic`.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-relevant\r\n    [<Erase>]\r\n    type ariaRelevant =\r\n        /// Element nodes are added to the DOM within the live region.\r\n        static member inline additions = Interop.mkAttr \"aria-relevant\" \"additions\"\r\n        /// Equivalent to the combination of all values, \"additions removals\r\n        /// text\".\r\n        static member inline all = Interop.mkAttr \"aria-relevant\" \"all\"\r\n        /// Text or element nodes within the live region are removed from the\r\n        /// DOM.\r\n        static member inline removals = Interop.mkAttr \"aria-relevant\" \"removals\"\r\n        /// Text is added to any DOM descendant nodes of the live region.\r\n        static member inline text = Interop.mkAttr \"aria-relevant\" \"text\"\r\n\r\n    /// Indicates that an element will be updated, and describes the types of\r\n    /// updates the user agents, assistive technologies, and user can expect\r\n    /// from the live region.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-live\r\n    [<Erase>]\r\n    type ariaLive =\r\n        /// Indicates that updates to the region have the highest priority and\r\n        /// should be presented the user immediately.\r\n        static member inline assertive = Interop.mkAttr \"aria-live\" \"assertive\"\r\n        /// Indicates that updates to the region should not be presented to the\r\n        /// user unless the used is currently focused on that region.\r\n        static member inline off = Interop.mkAttr \"aria-live\" \"off\"\r\n        /// Indicates that updates to the region should be presented at the next\r\n        /// graceful opportunity, such as at the end of speaking the current\r\n        /// sentence or when the user pauses typing.\r\n        static member inline polite = Interop.mkAttr \"aria-live\" \"polite\"\r\n\r\n    /// Indicates whether user input completion suggestions are provided.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-autocomplete\r\n    [<Erase>]\r\n    type ariaAutocomplete =\r\n        /// A list of choices appears and the currently selected suggestion also\r\n        /// appears inline.\r\n        static member inline both = Interop.mkAttr \"aria-autocomplete\" \"both\"\r\n        /// The system provides text after the caret as a suggestion for how to\r\n        /// complete the field.\r\n        static member inline inlinedAfterCaret = Interop.mkAttr \"aria-autocomplete\" \"inline\"\r\n        /// A list of choices appears from which the user can choose.\r\n        static member inline list = Interop.mkAttr \"aria-autocomplete\" \"list\"\r\n        /// No input completion suggestions are provided.\r\n        static member inline none = Interop.mkAttr \"aria-autocomplete\" \"none\"\r\n\r\n    /// Indicates the current \"checked\" state of checkboxes, radio buttons, and\r\n    /// other widgets. See related `aria-pressed` and `aria-selected`.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-checked\r\n    [<Erase>]\r\n    type ariaChecked =\r\n        /// Indicates a mixed mode value for a tri-state checkbox or\r\n        /// `menuitemcheckbox`.\r\n        static member inline mixed = Interop.mkAttr \"aria-checked\" \"mixed\"\r\n\r\n    /// Indicates whether the element and orientation is horizontal or vertical.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-orientation\r\n    [<Erase>]\r\n    type ariaOrientation =\r\n        /// The element is oriented horizontally.\r\n        static member inline horizontal = Interop.mkAttr \"aria-orientation\" \"horizontal\"\r\n        /// The element is oriented vertically.\r\n        static member inline vertical = Interop.mkAttr \"aria-orientation\" \"vertical\"\r\n\r\n    /// Indicates the current \"pressed\" state of toggle buttons. See related\r\n    /// `aria-checked` and `aria-selected`.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-pressed\r\n    [<Erase>]\r\n    type ariaPressed =\r\n        /// Indicates a mixed mode value for a tri-state toggle button.\r\n        static member inline mixed = Interop.mkAttr \"aria-pressed\" \"mixed\"\r\n\r\n    /// Indicates if items in a table or grid are sorted in ascending or\r\n    /// descending order.\r\n    ///\r\n    /// https://www.w3.org/WAI/PF/aria-1.1/states_and_properties#aria-sort\r\n    [<Erase>]\r\n    type ariaSort =\r\n        /// Items are sorted in ascending order by this column.\r\n        static member inline ascending = Interop.mkAttr \"aria-sort\" \"ascending\"\r\n        /// Items are sorted in descending order by this column.\r\n        static member inline descending = Interop.mkAttr \"aria-sort\" \"descending\"\r\n        /// There is no defined sort applied to the column.\r\n        static member inline none = Interop.mkAttr \"aria-sort\" \"none\"\r\n        /// A sort algorithm other than ascending or descending has been\r\n        /// applied.\r\n        static member inline other = Interop.mkAttr \"aria-sort\" \"other\"\r\n\r\n    type withType =\r\n        /// Defines a password field\r\n        static member inline password = Interop.mkAttr \"type\" \"password\"\r\n        /// Default. Defines a single-line text field\r\n        static member inline text = Interop.mkAttr \"type\" \"text\"\r\n        /// Defines a clickable button (mostly used with a JavaScript code to activate a script)\r\n        static member inline button = Interop.mkAttr \"type\" \"button\"\r\n        /// Defines a checkbox\r\n        static member inline checkbox = Interop.mkAttr \"type\" \"checkbox\"\r\n        /// Defines a color picker\r\n        static member inline color = Interop.mkAttr \"type\" \"color\"\r\n        /// Defines a date control with year, month and day (no time)\r\n        static member inline date = Interop.mkAttr \"type\" \"date\"\r\n        /// Defines a date and time control (year, month, day, time (no timezone)\r\n        static member inline dateTimeLocal = Interop.mkAttr \"type\" \"datetime-local\"\r\n        /// Defines a field for an e-mail address\r\n        static member inline email = Interop.mkAttr \"type\" \"email\"\r\n        /// Defines a file-select field and a \"Browse\" button (for file uploads)\r\n        static member inline file = Interop.mkAttr \"type\" \"file\"\r\n        /// Defines a hidden input field\r\n        static member inline hidden = Interop.mkAttr \"type\" \"hidden\"\r\n        /// Defines an image as the submit button\r\n        static member inline image = Interop.mkAttr \"type\" \"image\"\r\n        /// Defines a month and year control (no timezone)\r\n        static member inline month = Interop.mkAttr \"type\" \"month\"\r\n        /// Defines a field for entering a number\r\n        static member inline number = Interop.mkAttr \"type\" \"number\"\r\n        /// Defines a radio button\r\n        static member inline radio = Interop.mkAttr \"type\" \"radio\"\r\n        /// Defines a range control (like a slider control)\r\n        static member inline range = Interop.mkAttr \"type\" \"range\"\r\n        /// Defines a reset button\r\n        static member inline reset = Interop.mkAttr \"type\" \"reset\"\r\n        /// Defines a text field for entering a search string\r\n        static member inline search = Interop.mkAttr \"type\" \"search\"\r\n        /// Defines a submit button\r\n        static member inline submit = Interop.mkAttr \"type\" \"submit\"\r\n        /// Defines a field for entering a telephone number\r\n        static member inline tel = Interop.mkAttr \"type\" \"tel\"\r\n        /// Defines a control for entering a time (no timezone)\r\n        static member inline time = Interop.mkAttr \"type\" \"time\"\r\n        /// Defines a field for entering a URL\r\n        static member inline url = Interop.mkAttr \"type\" \"url\"\r\n        /// Defines a week and year control (no timezone)\r\n        static member inline week = Interop.mkAttr \"type\" \"week\"","namespace Feliz.Router\r\n\r\nopen System\r\nopen Browser.Dom\r\nopen Fable.React\r\nopen Elmish\r\nopen Fable.Core\r\n\r\ntype IUrlSearchParamters =\r\n    abstract entries : unit -> seq<string array>\r\n\r\n/// Determines whether the router will push a new entry to the history of modify the current one.\r\n[<RequireQualifiedAccess>]\r\ntype HistoryMode =\r\n    /// A new history will be added to the entries such that if the user clicks the back button,\r\n    /// the previous page will be shown, this is the default bahavior of the router.\r\n    | PushState = 1\r\n    /// Only modifies the current history entry and does not add a new one to the history stack. Clicking the back button will *not* have the effect of retuning to the previous page.\r\n    | ReplaceState = 2\r\n\r\n[<RequireQualifiedAccess>]\r\nmodule internal Router =\r\n    let customNavigationEvent = \"CUSTOM_NAVIGATION_EVENT\"\r\n    let hashPrefix = sprintf \"#/%s\"\r\n    let combine xs = String.concat \"/\" xs\r\n    [<Emit(\"encodeURIComponent($0)\")>]\r\n    let encodeURIComponent (value: string) : string = jsNative\r\n    [<Emit(\"decodeURIComponent($0)\")>]\r\n    let decodeURIComponent (value: string) : string = jsNative\r\n    let encodeQueryString queryStringPairs =\r\n        queryStringPairs\r\n        |> List.map (fun (key, value) -> encodeURIComponent key, encodeURIComponent value)\r\n        |> List.map (fun (key, value) -> String.concat \"=\" [ key; value ])\r\n        |> String.concat \"&\"\r\n        |> function\r\n            | \"\" -> \"\"\r\n            | pairs -> sprintf \"?%s\" pairs\r\n\r\n    let encodeQueryStringInts queryStringIntPairs =\r\n        queryStringIntPairs\r\n        |> List.map (fun (key, value: int) -> encodeURIComponent key, (string value))\r\n        |> List.map (fun (key, value) -> String.concat \"=\" [ key; value ])\r\n        |> String.concat \"&\"\r\n        |> function\r\n            | \"\" -> \"\"\r\n            | pairs -> sprintf \"?%s\" pairs\r\n\r\n    let encodeParts xs =\r\n        xs\r\n        |> List.map (fun (part: string) ->\r\n            if part.Contains \"?\" || part.StartsWith \"#\" || part.StartsWith \"/\"\r\n            then part\r\n            else encodeURIComponent part)\r\n        |> combine\r\n        |> function\r\n            | path when path.StartsWith \"/\" -> sprintf \"#%s\" path\r\n            | path when path.StartsWith \"#/\" -> path\r\n            | path when path.StartsWith \"#\" -> \"#/\" + path.Substring(1, path.Length - 1)\r\n            | path -> sprintf \"#/%s\" path\r\n\r\n    let nav xs (mode: HistoryMode) : Elmish.Cmd<_> =\r\n        Cmd.ofSub (fun _ ->\r\n            if mode = HistoryMode.PushState\r\n            then history.pushState ((), \"\", encodeParts xs)\r\n            else history.replaceState((), \"\", encodeParts xs)\r\n            let ev = document.createEvent(\"CustomEvent\")\r\n            ev.initEvent (customNavigationEvent, true, true)\r\n            window.dispatchEvent ev |> ignore)\r\n\r\n    /// Parses the URL into multiple path segments\r\n    let urlSegments (urlHash: string) =\r\n        if urlHash.StartsWith \"#\"\r\n        // remove the hash sign\r\n        then urlHash.Substring(1, urlHash.Length - 1)\r\n        // return as is\r\n        else urlHash\r\n        |> fun hash -> hash.Split '/' // split the url segments\r\n        |> List.ofArray\r\n        |> List.filter (String.IsNullOrWhiteSpace >> not)\r\n        |> List.collect (fun segment ->\r\n            if segment = \"?\"\r\n            then [ ]\r\n            elif segment.StartsWith \"?\"\r\n            then [ segment ]\r\n            else\r\n            match segment.Split [| '?' |] with\r\n            | [| value |] -> [decodeURIComponent value]\r\n            | [| value; \"\" |] -> [decodeURIComponent value]\r\n            | [| value; query |] -> [ decodeURIComponent value; \"?\" + query ]\r\n            | _ -> [])\r\n\r\n    [<Emit(\"new URLSearchParams($0)\")>]\r\n    let createUrlSearchParams (queryString: string) : IUrlSearchParamters = jsNative\r\n\r\ntype RouterProperties = {\r\n    urlChanged: string list -> unit\r\n    application: ReactElement\r\n}\r\n\r\ntype RouterComponent(props: RouterProperties)  =\r\n    inherit Fable.React.PureStatelessComponent<RouterProperties>(props)\r\n\r\n    override this.render() =\r\n        this.props.application\r\n\r\n    override this.componentDidMount() =\r\n        let onChange (ev: _) =\r\n            window.location.hash\r\n            |> Router.urlSegments\r\n            |> this.props.urlChanged\r\n\r\n        // listen to manual hash changes or page refresh\r\n        window.addEventListener(\"hashchange\", unbox onChange)\r\n        // listen to custom navigation events published by `Router.navigate()`\r\n        window.addEventListener(Router.customNavigationEvent, unbox onChange)\r\n        // trigger event here\r\n        onChange()\r\n\r\n    override this.componentWillUnmount() =\r\n        // clean up when the router isn't in view anymore\r\n        window.removeEventListener(\"hashchange\", unbox null)\r\n        window.removeEventListener(Router.customNavigationEvent, unbox null)\r\n\r\n/// Defines a property for the `router` element\r\ntype IRouterProperty = interface end\r\n\r\ntype Router =\r\n    /// An event that is triggered when the URL in the address bar changes, whether by hand or programmatically using `Router.navigate(...)`.\r\n    /// The event arguments are the parts of the URL, segmented into strings:\r\n    ///\r\n    /// `segment \"#/\" => [ ]`\r\n    ///\r\n    /// `segment \"#/home\" => [ \"home\" ]`\r\n    ///\r\n    /// `segment \"#/home/settings\" => [ \"home\"; \"settings\" ]`\r\n    ///\r\n    /// `segment \"#/users/1\" => [ \"users\"; \"1\" ]`\r\n    ///\r\n    /// `segment \"#/users/1/details\" => [ \"users\"; \"1\"; \"details\" ]`\r\n    ///\r\n    /// with query string parameters\r\n    ///\r\n    /// `segment \"#/users?id=1\" => [ \"users\"; \"?id=1\" ]`\r\n    ///\r\n    /// `segment \"#/home/users?id=1\" => [ \"home\"; \"users\"; \"?id=1\" ]`\r\n    ///\r\n    /// `segment \"#/users?id=1&format=json\" => [ \"users\"; \"?id=1&format=json\" ]`\r\n    ///\r\n    /// escaped query string parameters are decoded when the url is segmented\r\n    ///\r\n    /// `segment @\"#/search?q=whats%20up\" => [ \"search\"; \"?q=whats up\" ]`\r\n    static member onUrlChanged (eventHandler: string list -> unit) : IRouterProperty = unbox (\"onUrlChanged\", eventHandler)\r\n\r\n    /// The element that is rendered inside where the `router` is placed. Usually this contains the root application but it could also be part of another root element.\r\n    ///\r\n    /// It will keep listening for URL changes as long as the `router` is rendered on screen somewhere.\r\n    static member application (app: ReactElement) : IRouterProperty = unbox (\"application\", app)\r\n\r\n    /// Initializes the router as an element of the page to starts listening to URL changes.\r\n    static member router (properties: IRouterProperty list) : ReactElement =\r\n        let defaultProperties : RouterProperties =\r\n            { urlChanged = fun _ -> ignore()\r\n              application = nothing }\r\n\r\n        let modifiedProperties =\r\n            (defaultProperties, properties)\r\n            ||> List.fold (fun state prop ->\r\n                let (key, value) = unbox<string * obj> prop\r\n                match key with\r\n                | \"onUrlChanged\" -> { state with urlChanged = unbox value  }\r\n                | \"application\"  -> { state with application = unbox value }\r\n                | _ -> state)\r\n\r\n        ofType<RouterComponent, _, _>(modifiedProperties) [| |]\r\n\r\n    static member navigate([<ParamArray>] xs: string array) =\r\n        Router.nav (List.ofArray xs) HistoryMode.PushState\r\n    static member navigate(segment: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, segment3:int, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; string segment3 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, segment3:int, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2;string  segment3 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, segment3:int, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; string segment3 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, segment3:int, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; string segment3 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, segment3:string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, segment3:string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, segment3:string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, segment3:string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, segment3:string, segment4: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3; segment4 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, segment3:string, segment4: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3; segment4 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, segment3:string, segment4: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3; segment4 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, segment3:string, segment4: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3; segment4 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, segment3:string, segment4: string, segment5, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3; segment4; segment5 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, segment3:string, segment4: string, segment5, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3; segment4; segment5 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: string, segment3:string, segment4: string, segment5, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3; segment4; segment5 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, segment3:string, segment4: string, segment5, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; segment2; segment3; segment4; segment5 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; segment4 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; segment4 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; segment4 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; segment4 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; segment4 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; segment4 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; segment4 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; segment4 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: string, segment5: string, segment6, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; segment4; segment5; segment6 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: string, segment5: string, segment6, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; segment4; segment5; segment6 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: string, segment5: string, segment6, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; segment4; segment5; segment6 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: string, segment5: string, segment6, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; segment4; segment5; segment6 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: int, segment5: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; string segment4; segment5 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: int, segment5: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; string segment4; segment5 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: int, segment5: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; string segment4; segment5 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:int, segment4: int, segment5: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; string segment3; string segment4; segment5 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: int, segment5: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; string segment4; segment5 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: int, segment5: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; string segment4; segment5 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: int, segment5: string, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; string segment4; segment5 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: int, segment5: string, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; string segment4; segment5 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: string, segment5, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; segment4; segment5 + Router.encodeQueryString queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: string, segment5, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; segment4; segment5 + Router.encodeQueryString queryString ] mode\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: string, segment5, queryString) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; segment4; segment5 + Router.encodeQueryStringInts queryString ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: int, segment3:string, segment4: string, segment5, queryString, mode) : Cmd<_> =\r\n        Router.nav [ segment1; string segment2; segment3; segment4; segment5 + Router.encodeQueryStringInts queryString ] mode\r\n    static member navigate(fullPath: string) : Cmd<_> =\r\n        Router.nav [ fullPath ] HistoryMode.PushState\r\n    static member navigate(fullPath: string, mode) : Cmd<_> =\r\n        Router.nav [ fullPath ] mode\r\n    static member navigate(segment: string, value: int) : Cmd<_> =\r\n        Router.nav [segment; string value ] HistoryMode.PushState\r\n    static member navigate(segment: string, value: int, mode) : Cmd<_> =\r\n        Router.nav [segment; string value ] mode\r\n    static member navigate(segment1: string, value1: int, value2: int) : Cmd<_> =\r\n        Router.nav [segment1; string value1; string value2 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, value1: int, value2: int, mode) : Cmd<_> =\r\n        Router.nav [segment1; string value1; string value2 ] mode\r\n    static member navigate(segment1: string, segment2: string, value1: int) : Cmd<_> =\r\n        Router.nav [segment1; segment2; string value1 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, segment2: string, value1: int, mode) : Cmd<_> =\r\n        Router.nav [segment1; segment2; string value1 ] mode\r\n    static member navigate(segment1: string, value1: int, segment2: string) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, value1: int, segment2: string, mode) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2 ] mode\r\n    static member navigate(segment1: string, value1: int, segment2: string, value2: int) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2; string value2 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, value1: int, segment2: string, value2: int, mode) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2; string value2 ] mode\r\n    static member navigate(segment1: string, value1: int, segment2: string, value2: int, segment3: string) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2; string value2; segment3 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, value1: int, segment2: string, value2: int, segment3: string, mode) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2; string value2; segment3 ] mode\r\n    static member navigate(segment1: string, value1: int, segment2: string, value2: int, segment3: string, segment4: string) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2; string value2; segment3; segment4 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, value1: int, segment2: string, value2: int, segment3: string, segment4: string, mode) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2; string value2; segment3; segment4 ] mode\r\n    static member navigate(segment1: string, value1: int, segment2: string, value2: int, segment3: string, value3: int) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2; string value2; segment3; string value3 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, value1: int, segment2: string, value2: int, segment3: string, value3: int, mode) : Cmd<_> =\r\n        Router.nav [segment1; string value1; segment2; string value2; segment3; string value3 ] mode\r\n    static member navigate(segment1: string, value1: int, value2: int, value3: int) : Cmd<_> =\r\n        Router.nav [segment1; string value1; string value2; string value3 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, value1: int, value2: int, value3: int, mode) : Cmd<_> =\r\n        Router.nav [segment1; string value1; string value2; string value3 ] mode\r\n    static member navigate(segment1: string, value1: int, value2: int, segment2: string) : Cmd<_> =\r\n        Router.nav [segment1; string value1; string value2; segment2 ] HistoryMode.PushState\r\n    static member navigate(segment1: string, value1: int, value2: int, segment2: string, mode) : Cmd<_> =\r\n        Router.nav [segment1; string value1; string value2; segment2 ] mode\r\n\r\nmodule Route =\r\n    let (|Int|_|) (input: string) =\r\n        match Int32.TryParse input with\r\n        | true, value -> Some value\r\n        | _ -> None\r\n\r\n    let (|Int64|_|) (input: string) =\r\n        match Int64.TryParse input with\r\n        | true, value -> Some value\r\n        | _ -> None\r\n\r\n    let (|Guid|_|) (input: string) =\r\n        match Guid.TryParse input with\r\n        | true, value -> Some value\r\n        | _ -> None\r\n\r\n    let (|Number|_|) (input: string) =\r\n        match Double.TryParse input with\r\n        | true, value -> Some value\r\n        | _ -> None\r\n\r\n    let (|Decimal|_|) (input: string) =\r\n        match Decimal.TryParse input with\r\n        | true, value -> Some value\r\n        | _ -> None\r\n\r\n    let (|Bool|_|) (input: string) =\r\n        match input.ToLower() with\r\n        | (\"1\"|\"true\")  -> Some true\r\n        | (\"0\"|\"false\") -> Some false\r\n        | \"\" -> Some true\r\n        | _ -> None\r\n\r\n    /// Used to parse the query string parameter of the route.\r\n    ///\r\n    /// For example to match against\r\n    ///\r\n    /// `/users?id={value}`\r\n    ///\r\n    /// You can pattern match:\r\n    ///\r\n    /// `[ \"users\"; Route.Query [ \"id\", value ] ] -> value`\r\n    ///\r\n    /// When `{value}` is an integer then you can pattern match:\r\n    ///\r\n    /// `[ \"users\"; Route.Query [ \"id\", Route.Int userId ] ] -> userId`\r\n    let (|Query|_|) (input: string) =\r\n        try\r\n            let urlParams = Router.createUrlSearchParams input\r\n            Some [ for entry in urlParams.entries() -> entry.[0], entry.[1] ]\r\n        with | _ -> None","namespace Elmish\nopen System\n\n[<Struct>]\ntype internal RingState<'item> =\n    | Writable of wx:'item array * ix:int\n    | ReadWritable of rw:'item array * wix:int * rix:int\n\ntype internal RingBuffer<'item>(size) =\n    let doubleSize ix (items: 'item array) =\n        seq { yield! items |> Seq.skip ix\n              yield! items |> Seq.take ix\n              for _ in 0..items.Length do\n                yield Unchecked.defaultof<'item> }\n        |> Array.ofSeq\n\n    let mutable state : 'item RingState =\n        Writable (Array.zeroCreate (max size 10), 0)\n\n    member __.Pop() =\n        match state with\n        | ReadWritable (items, wix, rix) ->\n            let rix' = (rix + 1) % items.Length\n            match rix' = wix with\n            | true -> \n                state <- Writable(items, wix)\n            | _ ->\n                state <- ReadWritable(items, wix, rix')\n            Some items.[rix]\n        | _ ->\n            None\n\n    member __.Push (item:'item) =\n        match state with\n        | Writable (items, ix) ->\n            items.[ix] <- item\n            let wix = (ix + 1) % items.Length\n            state <- ReadWritable(items, wix, ix)\n        | ReadWritable (items, wix, rix) ->\n            items.[wix] <- item\n            let wix' = (wix + 1) % items.Length\n            match wix' = rix with\n            | true -> \n                state <- ReadWritable(items |> doubleSize rix, items.Length, 0)\n            | _ -> \n                state <- ReadWritable(items, wix', rix)","(**\nProgram\n---------\nCore abstractions for creating and running the dispatch loop.\n\n*)\n\nnamespace Elmish\n\n\n/// Program type captures various aspects of program behavior\ntype Program<'arg, 'model, 'msg, 'view> = private {\n    init : 'arg -> 'model * Cmd<'msg>\n    update : 'msg -> 'model -> 'model * Cmd<'msg>\n    subscribe : 'model -> Cmd<'msg>\n    view : 'model -> Dispatch<'msg> -> 'view\n    setState : 'model -> Dispatch<'msg> -> unit\n    onError : (string*exn) -> unit\n    syncDispatch: Dispatch<'msg> -> Dispatch<'msg>\n}\n\n/// Program module - functions to manipulate program instances\n[<RequireQualifiedAccess>]\n[<CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\nmodule Program =\n    /// Typical program, new commands are produced by `init` and `update` along with the new state.\n    let mkProgram \n        (init : 'arg -> 'model * Cmd<'msg>) \n        (update : 'msg -> 'model -> 'model * Cmd<'msg>)\n        (view : 'model -> Dispatch<'msg> -> 'view) =\n        { init = init\n          update = update\n          view = view\n          setState = fun model -> view model >> ignore\n          subscribe = fun _ -> Cmd.none\n          onError = Log.onError\n          syncDispatch = id }\n\n    /// Simple program that produces only new state with `init` and `update`.\n    let mkSimple \n        (init : 'arg -> 'model) \n        (update : 'msg -> 'model -> 'model)\n        (view : 'model -> Dispatch<'msg> -> 'view) =\n        { init = init >> fun state -> state,Cmd.none\n          update = fun msg -> update msg >> fun state -> state,Cmd.none\n          view = view\n          setState = fun model -> view model >> ignore\n          subscribe = fun _ -> Cmd.none\n          onError = Log.onError\n          syncDispatch = id }\n\n    /// Subscribe to external source of events.\n    /// The subscription is called once - with the initial model, but can dispatch new messages at any time.\n    let withSubscription (subscribe : 'model -> Cmd<'msg>) (program: Program<'arg, 'model, 'msg, 'view>) =\n        let sub model =\n            Cmd.batch [ program.subscribe model\n                        subscribe model ]\n        { program with subscribe = sub }\n\n    /// Trace all the updates to the console\n    let withConsoleTrace (program: Program<'arg, 'model, 'msg, 'view>) =\n        let traceInit (arg:'arg) =\n            let initModel,cmd = program.init arg\n            Log.toConsole (\"Initial state:\", initModel)\n            initModel,cmd\n\n        let traceUpdate msg model =\n            Log.toConsole (\"New message:\", msg)\n            let newModel,cmd = program.update msg model\n            Log.toConsole (\"Updated state:\", newModel)\n            newModel,cmd\n\n        { program with\n            init = traceInit \n            update = traceUpdate }\n\n    /// Trace all the messages as they update the model\n    let withTrace trace (program: Program<'arg, 'model, 'msg, 'view>) =\n        let update msg model =\n            let state,cmd = program.update msg model\n            trace msg state\n            state,cmd\n        { program\n            with update = update }\n\n    /// Handle dispatch loop exceptions\n    let withErrorHandler onError (program: Program<'arg, 'model, 'msg, 'view>) =\n        { program\n            with onError = onError }\n\n    /// For library authors only: map existing error handler and return new `Program` \n    let mapErrorHandler map (program: Program<'arg, 'model, 'msg, 'view>) =\n        { program\n            with onError = map program.onError }\n\n    /// For library authors only: get the current error handler \n    let onError (program: Program<'arg, 'model, 'msg, 'view>) =\n        program.onError\n\n    /// For library authors only: function to render the view with the latest state \n    let withSetState (setState:'model -> Dispatch<'msg> -> unit)\n                     (program: Program<'arg, 'model, 'msg, 'view>) =        \n        { program\n            with setState = setState }\n\n    /// For library authors only: return the function to render the state \n    let setState (program: Program<'arg, 'model, 'msg, 'view>) =        \n        program.setState\n\n    /// For library authors only: return the view function \n    let view (program: Program<'arg, 'model, 'msg, 'view>) =        \n        program.view\n\n    /// For library authors only: function to synchronize the dispatch function\n    let withSyncDispatch (syncDispatch:Dispatch<'msg> -> Dispatch<'msg>)\n                         (program: Program<'arg, 'model, 'msg, 'view>) =        \n        { program\n            with syncDispatch = syncDispatch }\n\n    /// For library authors only: map the program type\n    let map mapInit mapUpdate mapView mapSetState mapSubscribe\n            (program: Program<'arg, 'model, 'msg, 'view>) =\n        { init = mapInit program.init\n          update = mapUpdate program.update\n          view = mapView program.view\n          setState = mapSetState program.setState\n          subscribe = mapSubscribe program.subscribe\n          onError = program.onError\n          syncDispatch = id }\n\n    /// Start the program loop.\n    /// arg: argument to pass to the init() function.\n    /// program: program created with 'mkSimple' or 'mkProgram'.\n    let runWith (arg: 'arg) (program: Program<'arg, 'model, 'msg, 'view>) =\n        let (model,cmd) = program.init arg\n        let rb = RingBuffer 10\n        let mutable reentered = false\n        let mutable state = model        \n        let rec dispatch msg = \n            if reentered then\n                rb.Push msg\n            else\n                reentered <- true\n                let mutable nextMsg = Some msg\n                while Option.isSome nextMsg do\n                    let msg = nextMsg.Value\n                    try\n                        let (model',cmd') = program.update msg state\n                        program.setState model' syncDispatch\n                        cmd' |> Cmd.exec syncDispatch\n                        state <- model'\n                    with ex ->\n                        program.onError (sprintf \"Unable to process the message: %A\" msg, ex)\n                    nextMsg <- rb.Pop()\n                reentered <- false\n        and syncDispatch = program.syncDispatch dispatch            \n\n        program.setState model syncDispatch\n        let sub = \n            try \n                program.subscribe model \n            with ex ->\n                program.onError (\"Unable to subscribe:\", ex)\n                Cmd.none\n        sub @ cmd |> Cmd.exec syncDispatch\n\n    /// Start the dispatch loop with `unit` for the init() function.\n    let run (program: Program<unit, 'model, 'msg, 'view>) = runWith () program\n","namespace Elmish.React\n\nopen Fable.React\nopen Elmish\n\ntype LazyProps<'model> = {\n    model:'model\n    render:unit->ReactElement\n    equal:'model->'model->bool\n}\n\nmodule Components =\n    type LazyView<'model>(props) =\n        inherit Component<LazyProps<'model>,obj>(props)\n\n        override this.shouldComponentUpdate(nextProps, _nextState) =\n            not <| this.props.equal this.props.model nextProps.model\n\n        override this.render () =\n            this.props.render ()\n\n[<AutoOpen>]\nmodule Common =\n    /// Avoid rendering the view unless the model has changed.\n    /// equal: function to compare the previous and the new states\n    /// view: function to render the model\n    /// state: new state to render\n    let lazyViewWith (equal:'model->'model->bool)\n                     (view:'model->ReactElement)\n                     (state:'model) =\n        ofType<Components.LazyView<_>,_,_>\n            { render = fun () -> view state\n              equal = equal\n              model = state }\n            []\n\n    /// Avoid rendering the view unless the model has changed.\n    /// equal: function to compare the previous and the new states\n    /// view: function to render the model using the dispatch\n    /// state: new state to render\n    /// dispatch: dispatch function\n    let lazyView2With (equal:'model->'model->bool)\n                      (view:'model->'msg Dispatch->ReactElement)\n                      (state:'model)\n                      (dispatch:'msg Dispatch) =\n        ofType<Components.LazyView<_>,_,_>\n            { render = fun () -> view state dispatch\n              equal = equal\n              model = state }\n            []\n\n    /// Avoid rendering the view unless the model has changed.\n    /// equal: function to compare the previous and the new model (a tuple of two states)\n    /// view: function to render the model using the dispatch\n    /// state1: new state to render\n    /// state2: new state to render\n    /// dispatch: dispatch function\n    let lazyView3With (equal:_->_->bool) (view:_->_->_->ReactElement) state1 state2 (dispatch:'msg Dispatch) =\n        ofType<Components.LazyView<_>,_,_>\n            { render = fun () -> view state1 state2 dispatch\n              equal = equal\n              model = (state1,state2) }\n            []\n\n    /// Avoid rendering the view unless the model has changed.\n    /// view: function of model to render the view\n    let lazyView (view:'model->ReactElement) =\n        lazyViewWith (=) view\n\n    /// Avoid rendering the view unless the model has changed.\n    /// view: function of two arguments to render the model using the dispatch\n    let lazyView2 (view:'model->'msg Dispatch->ReactElement) =\n        lazyView2With (=) view\n\n    /// Avoid rendering the view unless the model has changed.\n    /// view: function of three arguments to render the model using the dispatch\n    let lazyView3 (view:_->_->_->ReactElement) =\n        lazyView3With (=) view\n\n\n","namespace Elmish.React\n\n[<AutoOpen>]\nmodule Helpers =\n    open Fable.React.Props\n    open Fable.Core.JsInterop\n\n    /// `Ref` callback that sets the value of an input textbox after DOM element is created.\n    /// Can be used instead of `DefaultValue` and `Value` props to override input box value.\n    let inline valueOrDefault value =\n        Ref <| (fun e -> if e |> isNull |> not && !!e?value <> !!value then e?value <- !!value)\n\n[<RequireQualifiedAccess>]\nmodule Program =\n\n    module Internal =\n\n        open Fable.React\n        open Browser\n        open Elmish\n\n        let withReactBatchedUsing lazyView2With placeholderId (program:Program<_,_,_,_>) =\n            let mutable lastRequest = None\n            let setState model dispatch =\n                match lastRequest with\n                | Some r -> window.cancelAnimationFrame r\n                | _ -> ()\n\n                lastRequest <- Some (window.requestAnimationFrame (fun _ ->\n                    ReactDom.render(\n                        lazyView2With (fun x y -> obj.ReferenceEquals(x,y)) (Program.view program) model dispatch,\n                        document.getElementById placeholderId\n                    )))\n\n            program\n            |> Program.withSetState setState\n\n        let withReactSynchronousUsing lazyView2With placeholderId (program:Elmish.Program<_,_,_,_>) =\n            let setState model dispatch =\n                ReactDom.render(\n                    lazyView2With (fun x y -> obj.ReferenceEquals(x,y)) (Program.view program) model dispatch,\n                    document.getElementById placeholderId\n                )\n\n            program\n            |> Program.withSetState setState\n\n        let withReactHydrateUsing lazyView2With placeholderId (program:Elmish.Program<_,_,_,_>) =\n            let setState model dispatch =\n                ReactDom.hydrate(\n                    lazyView2With (fun x y -> obj.ReferenceEquals(x,y)) (Program.view program) model dispatch,\n                    document.getElementById placeholderId\n                )\n\n            program\n            |> Program.withSetState setState\n\n\n    /// Renders React root component inside html element identified by placeholderId.\n    /// Uses `requestAnimationFrame` to batch updates to prevent drops in frame rate.\n    /// NOTE: This may have unexpected effects in React controlled inputs, see https://github.com/elmish/react/issues/12\n    let withReactBatched placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactBatchedUsing lazyView2With placeholderId program\n\n    /// Renders React root component inside html element identified by placeholderId.\n    /// New renders are triggered immediately after an update.\n    let withReactSynchronous placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactSynchronousUsing lazyView2With placeholderId program\n\n    [<System.Obsolete(\"Use withReactBatched\")>]\n    let withReact placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactBatchedUsing lazyView2With placeholderId program\n\n    [<System.Obsolete(\"Use withReactSynchronous\")>]\n    let withReactUnoptimized placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactSynchronousUsing lazyView2With placeholderId program\n\n    /// Renders React root component inside html element identified by placeholderId using `React.hydrate`.\n    let withReactHydrate placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactHydrateUsing lazyView2With placeholderId program\n","module App\r\n\r\nopen Elmish\r\nopen Elmish.React\r\nopen Feliz\r\nopen Feliz.Markdown\r\nopen Fable.SimpleHttp\r\nopen Feliz.Router\r\nopen Fable.Core\r\nopen Fable.Core.JsInterop\r\nopen Fable.Core.Experimental\r\nopen Zanaptak.TypedCssClasses\r\n\r\ntype Bulma = CssClasses<\"https://cdnjs.cloudflare.com/ajax/libs/bulma/0.7.5/css/bulma.min.css\", Naming.PascalCase>\r\ntype FA = CssClasses<\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\", Naming.PascalCase>\r\n\r\ntype Highlight =\r\n    static member inline highlight (properties: IReactProperty list) =\r\n        Interop.reactApi.createElement(importDefault \"react-highlight\", createObj !!properties)\r\n\r\ntype State = { CurrentPath : string list }\r\n\r\nlet init () = { CurrentPath = [ ] }, Cmd.none\r\n\r\ntype Msg = UrlChanged of string list\r\n\r\nlet update msg state =\r\n    match msg with\r\n    | UrlChanged segments -> { state with CurrentPath = segments }, Cmd.none\r\n\r\nlet samples = \r\n    [ \"plotly-chart-scatter-basic\", Samples.Scatter.Basic.chart()\r\n      \"plotly-chart-scatter-datalabelshover\", Samples.Scatter.DataLabelsHover.chart() ]\r\n\r\nlet githubPath (rawPath: string) =\r\n    let parts = rawPath.Split('/')\r\n    if parts.Length > 5\r\n    then sprintf \"http://www.github.com/%s/%s\" parts.[3] parts.[4]\r\n    else rawPath\r\n\r\nlet centeredSpinner =\r\n    Html.div [\r\n        prop.style [\r\n            style.textAlign.center\r\n            style.marginLeft length.auto\r\n            style.marginRight length.auto\r\n            style.marginTop 50\r\n        ]\r\n        prop.children [\r\n            Html.li [\r\n                prop.className [\r\n                    FA.Fa\r\n                    FA.FaRefresh\r\n                    FA.FaSpin\r\n                    FA.Fa3X\r\n                ]\r\n            ]\r\n        ]\r\n    ]\r\n\r\n/// Renders a code block from markdown using react-highlight.\r\n/// Injects sample React components when the code block has language of the format <language>:<sample-name>\r\nlet codeBlockRenderer (codeProps: Markdown.ICodeProperties) =\r\n    if codeProps.language <> null && codeProps.language.Contains \":\" then\r\n        let languageParts = codeProps.language.Split(':')\r\n        let sampleName = languageParts.[1]\r\n        let sampleApp =\r\n            samples\r\n            |> List.tryFind (fun (name, _) -> name = sampleName)\r\n            |> Option.map snd\r\n            |> Option.defaultValue (Html.h1 [\r\n                prop.style [ style.color.crimson ];\r\n                prop.text (sprintf \"Could not find sample app '%s'\" sampleName)\r\n            ])\r\n        Html.div [\r\n            sampleApp\r\n            Highlight.highlight [\r\n                prop.className \"fsharp\"\r\n                prop.text(codeProps.value)\r\n            ]\r\n        ]\r\n    else\r\n        Highlight.highlight [\r\n            prop.className \"fsharp\"\r\n            prop.text(codeProps.value)\r\n        ]\r\n\r\nlet renderMarkdown (path: string) (content: string) =\r\n    Html.div [\r\n        prop.className Bulma.Content\r\n        prop.style [ style.width (length.percent 100); style.padding 20 ]\r\n        prop.children [\r\n            if path.StartsWith \"https://raw.githubusercontent.com\" then\r\n                Html.h2 [\r\n                    Html.i [ prop.className [ FA.Fa; FA.FaGithub ] ]\r\n                    Html.anchor [\r\n                        prop.style [ style.marginLeft 10; style.color.lightGreen ]\r\n                        prop.href (githubPath path)\r\n                        prop.text \"View on Github\"\r\n                    ]\r\n                ]\r\n\r\n            Markdown.markdown [\r\n                markdown.source content\r\n                markdown.escapeHtml false\r\n                markdown.renderers [\r\n                    markdown.renderers.code codeBlockRenderer\r\n                ]\r\n            ]\r\n        ]\r\n    ]\r\n\r\nlet loadMarkdown' = React.functionComponent <| fun (input: {| path: string list |}) ->\r\n    let isLoading, setLoading = React.useState false\r\n    let error, setError = React.useState<Option<string>> None\r\n    let content, setContent = React.useState \"\"\r\n    let path =\r\n        match input.path with\r\n        | [ one ] when one.StartsWith \"http\" -> one\r\n        | segments -> String.concat \"/\" segments\r\n\r\n    React.useEffect(fun _ ->\r\n        setLoading(true)\r\n        async {\r\n            let! (statusCode, responseText) = Http.get path\r\n            setLoading(false)\r\n            if statusCode = 200 then\r\n              setContent(responseText)\r\n              setError(None)\r\n            else\r\n              setError(Some (sprintf \"Status %d: could not load %s\" statusCode path))\r\n        }\r\n        |> Async.StartImmediate\r\n\r\n        React.createDisposable(ignore)\r\n    ,path)\r\n\r\n    match isLoading, error with\r\n    | true, _ -> centeredSpinner\r\n    | false, None -> renderMarkdown path content\r\n    | _, Some error ->\r\n        Html.h1 [\r\n            prop.style [ style.color.crimson ]\r\n            prop.text error\r\n        ]\r\n\r\nlet loadMarkdown (path: string list) = loadMarkdown' {| path = path |}\r\n\r\n// A collapsable nested menu for the sidebar\r\n// keeps internal state on whether the items should be visible or not based on the collapsed state\r\nlet nestedMenuList' = React.functionComponent <| fun (input: {| name: string; items: Fable.React.ReactElement list |}) ->\r\n    let (collapsed, setCollapsed) = React.useState(false)\r\n    Html.li [\r\n        Html.anchor [\r\n            prop.onClick (fun _ -> setCollapsed(not collapsed))\r\n            prop.children [\r\n                Html.i [\r\n                    prop.style [ style.marginRight 10 ]\r\n                    prop.className [\r\n                        true, FA.Fa;\r\n                        not collapsed, FA.FaAngleUp;\r\n                        collapsed, FA.FaAngleDown;\r\n                    ]\r\n                ]\r\n                Html.span input.name\r\n            ]\r\n        ]\r\n\r\n        Html.ul [\r\n            prop.className Bulma.MenuList\r\n            prop.style [ collapsed, [ style.display.none ] ]\r\n            prop.children input.items\r\n        ]\r\n    ]\r\n\r\nlet nestedMenuList (name: string) (items: Fable.React.ReactElement list) =\r\n    nestedMenuList' {| name = name; items = items |}\r\n\r\nlet sidebar (state: State) dispatch =\r\n    // top level label\r\n    let menuLabel (content: string) =\r\n        Html.p [\r\n            prop.className Bulma.MenuLabel\r\n            prop.text content\r\n        ]\r\n\r\n    // top level menu\r\n    let menuList (items: Fable.React.ReactElement list) =\r\n        Html.ul [\r\n            prop.className Bulma.MenuList\r\n            prop.children items\r\n        ]\r\n\r\n    let menuItem (name: string) (path: string list) =\r\n        Html.li [\r\n            Html.anchor [\r\n                prop.className [\r\n                    state.CurrentPath = path, Bulma.IsActive\r\n                    state.CurrentPath = path, Bulma.HasBackgroundPrimary\r\n                ]\r\n                prop.text name\r\n                prop.href (sprintf \"#/%s\" (String.concat \"/\" path))\r\n            ]\r\n        ]\r\n\r\n    // the actual nav bar\r\n    Html.aside [\r\n        prop.className Bulma.Menu\r\n        prop.children [\r\n            menuLabel \"Feliz.Plotly\"\r\n            menuList [\r\n                menuItem \"Overview\" [ ]\r\n                menuItem \"Installation\" [ Urls.Plotly; Urls.Installation ]\r\n                menuItem \"Contributing\" [ Urls.Plotly; Urls.Contributing ]\r\n                nestedMenuList \"Examples\" [\r\n                    nestedMenuList \"Scatter\" [\r\n                        menuItem \"Basic\" [ Urls.Plotly; Urls.Charts; Urls.Scatter; Urls.Basic ]\r\n                        menuItem \"Data Labels Hover\" [ Urls.Plotly; Urls.Charts; Urls.Scatter; Urls.DataLabelsHover ]\r\n                    ]\r\n                ]\r\n            ]\r\n        ]\r\n    ]\r\n\r\nlet readme = sprintf \"https://raw.githubusercontent.com/%s/%s/master/README.md\"\r\nlet contributing = sprintf \"https://raw.githubusercontent.com/Zaid-Ajaj/Feliz/master/public/Feliz/Contributing.md\"\r\n\r\nlet content state dispatch =\r\n    match state.CurrentPath with\r\n    | [ ] -> loadMarkdown [ \"Plotly\"; \"README.md\" ]\r\n    | [ Urls.Plotly; Urls.Overview; ] -> loadMarkdown [ \"Plotly\"; \"README.md\" ]\r\n    | [ Urls.Plotly; Urls.Installation ] -> loadMarkdown [ \"Plotly\"; \"Installation.md\" ]\r\n    | [ Urls.Plotly; Urls.Contributing ] -> loadMarkdown [ contributing ]\r\n    | [ Urls.Plotly; Urls.Charts; Urls.Scatter; Urls.Basic ] -> loadMarkdown [ \"Plotly\"; \"Examples\"; \"Scatter\" ; \"Basic.md\" ]\r\n    | [ Urls.Plotly; Urls.Charts; Urls.Scatter; Urls.DataLabelsHover ] -> loadMarkdown [ \"Plotly\"; \"Examples\"; \"Scatter\" ; \"DataLabelsHover.md\" ]\r\n    | segments -> Html.div [ for segment in segments -> Html.p segment ]\r\n\r\nlet main state dispatch =\r\n    Html.div [\r\n        prop.className [ Bulma.Tile; Bulma.IsAncestor ]\r\n        prop.children [\r\n            Html.div [\r\n                prop.className [ Bulma.Tile; Bulma.Is2 ]\r\n                prop.children [ sidebar state dispatch ]\r\n            ]\r\n\r\n            Html.div [\r\n                prop.className Bulma.Tile\r\n                prop.children [ content state dispatch ]\r\n            ]\r\n        ]\r\n    ]\r\n\r\nlet render (state: State) dispatch =\r\n    let application =\r\n        Html.div [\r\n            prop.style [ style.padding 30 ]\r\n            prop.children [ main state dispatch ]\r\n        ]\r\n\r\n    Router.router [\r\n        Router.onUrlChanged (UrlChanged >> dispatch)\r\n        Router.application application\r\n    ]\r\n\r\nProgram.mkProgram init update render\r\n|> Program.withReactSynchronous \"root\"\r\n|> Program.withConsoleTrace\r\n|> Program.run\r\n","﻿[<RequireQualifiedAccess>]\r\nmodule Samples.Scatter.Basic\r\n\r\nopen Feliz\r\nopen Feliz.Plotly\r\nopen Fable.Core.Experimental\r\n\r\nlet chart () =\r\n    Plotly.plot [\r\n        plot.data [\r\n            data.scatter [\r\n                data.scatter.x [ 1; 2; 3; 4]\r\n                data.scatter.y [ 10; 15; 13; 17 ]\r\n                data.scatter.mode.markers\r\n            ]\r\n            data.scatter [\r\n                data.scatter.x [ 2; 3; 4; 5 ]\r\n                data.scatter.y [ 16; 5; 11; 9 ]\r\n                data.scatter.mode.lines\r\n            ]\r\n            data.scatter [\r\n                data.scatter.x [ 1; 2; 3; 4 ]\r\n                data.scatter.y [ 12; 9; 15; 12 ]\r\n                data.scatter.mode.markersAndLines\r\n            ]\r\n        ]\r\n    ]\r\n","﻿[<RequireQualifiedAccess>]\r\nmodule Samples.Scatter.DataLabelsHover\r\n\r\nopen Feliz\r\nopen Feliz.Plotly\r\nopen Fable.Core.Experimental\r\n\r\nlet chart () =\r\n    Plotly.plot [\r\n        plot.data [\r\n            data.scatter [\r\n                data.scatter.x [ 1; 2; 3; 4; 5]\r\n                data.scatter.y [ 1; 6; 3; 6; 1 ]\r\n                data.scatter.mode.markers\r\n                data.scatter.name \"Team A\"\r\n                data.scatter.text [ \"A-1\"; \"A-2\"; \"A-3\"; \"A-4\"; \"A-5\"]\r\n                //data.scatter.marker [\r\n                //    data.scatter.marker.size 12\r\n                //]\r\n            ]\r\n            data.scatter [\r\n                data.scatter.x [ 1.5; 2.5; 3.5; 4.5; 5.5 ]\r\n                data.scatter.y [ 4; 1; 7; 1; 4 ]\r\n                data.scatter.mode.markers\r\n                data.scatter.name \"Team B\"\r\n                data.scatter.text [\"B-a\" ; \"B-b\" ; \"B-c\" ; \"B-d\" ; \"B-e\" ]\r\n                //data.scatter.marker [\r\n                //    data.scatter.marker.size 12\r\n                //]\r\n            ]\r\n        ]\r\n        plot.layout [\r\n            layout.xaxis [\r\n                layout.xaxis.range [ 0.75; 5.25 ]\r\n            ]\r\n            layout.yaxis [\r\n                layout.yaxis.range [ 0; 8 ]\r\n            ]\r\n            layout.title [\r\n                layout.title.text \"Data Labels Hover\"\r\n            ]\r\n        ]\r\n    ]\r\n"],"sourceRoot":""}